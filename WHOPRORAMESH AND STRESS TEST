-- https://www.sqldownload.com/Download WHOPRO RAMESH
-- SQLTEST https://www.sqltest.org/Download
--The sp_whopro(TM) script is a SQL Server Activity Monitoring and Logging Stored Procedure. If you have used sp_who or sp_who2, you will find 
--sp_whopro very helpful, sp_whopro is versatile and easy to use. For the latest release of sp_whopro please check http://www.sqldownload.com/download
--
--The sp_whopro stored procedure can be created in any database, we recommend that you create it in the master database.
--For usage help: 'exec sp_whopro 'help'', for documentation refer to: http://www.sqldownload.com/documentation.
--If you do not have permission to create stored procedures, try creating it as ##sp_whopro, a global temporary stored procedure.
--
--You acknowledge upon downloading or using the sp_whopro script that you have reviewed and agreed to all of the terms and conditions set forth in the 
--EULA (http://www.sqldownload.com/eula). If you do not agree with all of these terms and conditions, do not download or use sp_whopro. If you have 
--already downloaded the sp_whopro script and do not agree to the terms and conditions, please delete the sp_whopro script and immediately discontinue its usage.
--
use master
if (object_id('sp_whopro') is NULL)
exec ('create proc sp_whopro as select ''For latest release of sp_whopro(TM) please check http://www.sqldownload.com/download''')
go
alter proc sp_whopro (@sessions nvarchar(max) = 'ACTIVE, BLOCKING', @columns nvarchar(max) = 'DEFAULT', @order_by nvarchar(max) = NULL, @save_to_database nvarchar(max) = NULL, @datetime datetime = NULL output, @datetime_to datetime = NULL, @execution_time_report_threshold int = 250) as
begin
SET NOCOUNT ON
	/*
	Copyright: 2013-2015 Ramesh Meyyappan, SQL Consulting GmbH, Munich, Germany, http://www.sqlworkshops.com.
	The sp_whopro(TM) script is registered with US Copyright Office, Registration Number: TXu001920835.

	Please email your comments, feedback and suggestions to Ramesh @ mailto:rmeyyappan@sqlworkshops.com, keep yourself up to date by subscribing to our newsletter at 
	https://newsletter.sqlworkshops.com/sp_whopro and use our support forum at http://www.sqldownload.com/forum/sp_whopro to check for answers and post your questions.
	Connect with me in LinkedIn: http://de.linkedin.com/in/rmeyyappan, on twitter https://twitter.com/SQLWorkshops.
	If you like sp_whopro, tell your friends and colleagues. Feel free to share the links in your blog and social media.

	You acknowledge upon downloading or using the sp_whopro script that you have reviewed and agreed to all of the terms and conditions set forth in the 
	EULA (http://www.sqldownload.com/eula). If You do not agree with all of these terms and conditions, do not download or use sp_whopro. If you have 
	already downloaded the sp_whopro script and do not agree to the terms and conditions, please delete the sp_whopro script and immediately discontinue its usage.
	You can download and use the sp_whopr(TM) script in accordance with the below described license types as long as the Copyright, License, About Us, rest of 
	the header information and the entire script remains intact without any alteration or modification; furthermore, sp_whopro must not be sold, re-licensed, 
	transferred or otherwise re-distributed, neither wholly nor partly, without SQL Consulting GmbH's written permission. 
	The sp_whopro script is provided on an "as is" basis without warranty of any kind, either expressed or implied.
	
	License: The sp_whopro(TM) script has the following license model: "Free Community License", "Enterprise License", "Service Provider License" and 
	"Solution Provider License"; Please read the EULA for additional information @ www.sqldownload.com/eula.
	"Free Community License" can be used for internal purposes (in any number of servers, including production servers), except in the following cases where you need an 
	"Enterprise License": a.) if you would like to download or deploy the sp_whopro script for other users in your company or organization, b.) if you want to engage a 
	third party consultant to analyze the collected data, c.) if you want to use a software, script or computer program from a third party or external consultant to process 
	the collected data or d.) if you wish to obtain email support. 
	"Free Community License" can also be used for automated processing of the data collected by the sp_whopro script, for analysis purposes or in order to set up alerts.
	
	If you are a consultant or a service provider and wish to use the sp_whopro script as part of your services to a third party, you require a "Service Provider License". 
	If you are a software developer or a solution provider and wish to use the sp_whopro script in your products, wholly or partly, you require a "Solution Provider License". 
	The cost of the "Enterprise License" is $45/ year. The "Enterprise License" grants simultaneous access to all computers on one physical site/ geographic location. 
	The "Free Community License" is incompatible with "Enterprise License", "Service Provider License", "Solution Provider License" or with any third party usage. 
	A list of Licensed Service Providers and Solution Providers can be found at http://www.sqlworkshops.com/ListofLicensedServiceSolutionTrainingProviders. 
	Please contact us at mailto:license@sqlworkshops.com to acquire the appropriate license.

	About Us:
	We are a consulting company, SQL Consulting GmbH, based in Munich, Germany. We provide onsite and offsite SQL Server Performance Tuning and Troubleshooting 
	Consulting. We can prepare SQL Server Performance, Load, Stress or Unit Test based on your workload. We conduct SQL Server Health Check and provide a list of 
	recommendations to improve performance for our customers. We provide SQL Server Performance Monitoring and Tuning Hands-on Training for developers and DBAs. 
	Please contact us at mailto:support@sqlworkshops.com or visit http://www.sqlworkshops.com if you are interested in any of our services. You will obtain a 
	complementary 1 Year "Enterprise License" if you engage us for SQL Server Consulting (4 hours or more). For customer feedback from previous engagements: 
	http://www.sqlworkshops.com/feedback, workshop agenda: http://www.sqlworkshops.com/agenda, workshop schedule: http://www.sqlworkshops.com/schedule.
	Our Mission: Empower customers to fully realize the performance potential of Microsoft SQL Server without increasing the total cost of ownership (TCO) and 
	achieve high customer satisfaction in every consulting engagement and workshop delivery.

	Download SQLTest, our SQL Server Performance, Load, Stress and Unit Test Tool from http://www.sqltest.org
	Check out our videos on sp_whopro, SQL Server and SQLTest @ http://www.sqlvideo.com

	For usage help: 'exec sp_whopro 'help'', for documentation refer to: http://www.sqldownload.com/documentation
	The stored procedure creation script is custom generated based on SQL Server Version and Service Pack. First execution of sp_whopro stored procedure may be slow, subsequent executions should be fast due to caching. To reduce execution time and disk space usage with 'SAVE' option, it is not recommended to collect 'ALL' columns. Dynamic SQL statements are only used in the following few cases: to collect DBCC INPUTBUFFER of sessions and requests, to resolve object and index names for locks, wait_resource and resource_description info, to resolve schema name, to create and to alter table and to save sp_whopro data with 'SAVE' option, to select sp_whopro result based on custom column set and custom order by clause. sp_whopro parameters are not directly used in dynamic SQL statements to avoid SQL Injection attacks. Short variable names are used to reduce the size of the stored procedure. With version independent script generator, sp_whopro stored procedure is easy to enhance. If you have additional inputs for making sp_whopro more useful or have special needs, let me know. Thanks for using sp_whopro.

	This release of sp_whopro(TM) is for Microsoft SQL Server 2014 (SP1).
	sp_whopro(TM) version 102, for latest release of sp_whopro please check http://www.sqldownload.com/download. Build id: D4C0F58B-0567-0FFF-3EE9-88550C5092F2 ChangeLog: http://www.sqldownload.com/changelog.
	*/
	set nocount on if ((substring(@@version, 11, 10) <> 'SQL Server' or cast(serverproperty('productversion') as nvarchar(4)) <> '12.0') or (cast(serverproperty ('productlevel') as nvarchar(3)) <> 'SP1')) begin print 'This release of sp_whopro(TM) is for Microsoft SQL Server 2014 (SP1). Download the compatible release from http://www.sqldownload.com/download.' end declare @4e4 datetime, @bc7 int select @4e4 = getdate() if (ltrim(rtrim(upper(@sessions))) = 'HELP') begin create table #376 (c009 int identity, c7c1 nvarchar(max)) insert into #376 values ('/*	For latest build of sp_whopro, help and documentation, refer to http://www.sqldownload.com') insert into #376 values ('	sp_whopro [@sessions =] ''option[, option]'' | NULL, [@columns =] ''option[, option]'' | ''column[, column]'' | NULL, [@order_by =] ''column[, column]'' | ''help'' | NULL, [@save_to_database =] ''database_name[.schema_name]'' | NULL, [@datetime = OUTPUT] ''ctime'' | NULL, [@datetime_to =] ''ctime'' | NULL, [@execution_time_report_threshold =] milliseconds | NULL') insert into #376 values ('') insert into #376 values ('		[@sessions =] ''option[, option]'' | NULL') insert into #376 values ('		The following options are a comma separated list, can be used to filter sessions as shown below:') insert into #376 values ('			Example ACTIVE, SAVE') insert into #376 values ('			ACTIVE') insert into #376 values ('				Include Active sessions.') insert into #376 values ('			NULL') insert into #376 values ('				Include Active and Blocking sessions.') insert into #376 values ('			WAIT') insert into #376 values ('				Include Waiting sessions.') insert into #376 values ('			BLOCK') insert into #376 values ('				Include Blocked and Blocking sessions.') insert into #376 values ('			BLOCKED') insert into #376 values ('				Include Blocked sessions.') insert into #376 values ('			BLOCKING') insert into #376 values ('				Include Blocking sessions.') insert into #376 values ('			CURSOR') insert into #376 values ('				Sessions that have open cursors.') insert into #376 values ('			SP_WHOPRO') insert into #376 values ('				Include sp_whopro''s own session.') insert into #376 values ('			ALL') insert into #376 values ('				Include All sessions.') insert into #376 values ('			SAVE') insert into #376 values ('				Save output.') insert into #376 values ('			NODDL') insert into #376 values ('				To not to perform DDL statements like create or alter table part of ''SAVE'' option,') insert into #376 values ('					can reduce execution time, missing tables or columns will lead to errors.') insert into #376 values ('			NOOUTPUT') insert into #376 values ('				To not to display results, to be used in combination with ''SAVE'' option when run as a job or') insert into #376 values ('					to get the select statement when @datetime is supplied.') insert into #376 values ('		When ''not in'', ''>'', ''<'', ''='' or ''not like'' is specified include All sessions') insert into #376 values ('		The following ''in'' / ''not in'' options are a comma separated list, can be used to filter sessions as shown below:') insert into #376 values ('			Example session_id IN (57, 58)') insert into #376 values ('			Example database_name IN (''SQLDev'', ''SQLTest''), session_id NOT IN (57, 58)') insert into #376 values ('			session_id [IN | NOT IN] (?, [?])') insert into #376 values ('				List of session ids from sys.dm_exec_sessions.') insert into #376 values ('			is_user_process [IN | NOT IN] (?, [?])') insert into #376 values ('				Is user process from sys.dm_exec_sessions, 0 for system sessions, 1 for user sessions.') insert into #376 values ('			database_id [IN | NOT IN] (?, [?])') insert into #376 values ('				List of database ids from sys.dm_exec_sessions.') insert into #376 values ('			database_name [IN | NOT IN] (''?'', [''?''])') insert into #376 values ('				List of database names from sys.dm_exec_sessions.') insert into #376 values ('			status [IN | NOT IN] (''?'', [''?''])') insert into #376 values ('				List of requests status from sys.dm_exec_requests.') insert into #376 values ('			sql_handle [IN | NOT IN] (?, [?])') insert into #376 values ('				List of SQL handles from sys.dm_exec_requests.') insert into #376 values ('			plan_handle [IN | NOT IN] (?, [?])') insert into #376 values ('				List of Plan handles from sys.dm_exec_requests.') insert into #376 values ('			query_hash [IN | NOT IN] (?, [?])') insert into #376 values ('				List of query hash from sys.dm_exec_requests.') insert into #376 values ('			query_plan_hash [IN | NOT IN] (?, [?])') insert into #376 values ('				List of query plan hash from sys.dm_exec_requests.') insert into #376 values ('			Additional in / not in options: host_process_id (from sys.dm_exec_sessions), context_info (from sys.dm_exec_sessions),') insert into #376 values ('				transaction_isolation_level (from sys.dm_exec_sessions ), group_id (from sys.dm_exec_sessions), node_affinity (from') insert into #376 values ('				sys.dm_exec_connections), connection_id (from sys.dm_exec_connections), most_recent_sql_handle (from sys.dm_exec_connections),') insert into #376 values ('				request_id (from sys.dm_exec_requests), command (from sys.dm_exec_requests), statement_start_offset (from sys.dm_exec_requests),') insert into #376 values ('				statement_end_offset (from sys.dm_exec_requests), blocking_session_id (from sys.dm_exec_requests), transaction_id (from') insert into #376 values ('				sys.dm_exec_requests), scheduler_id (from sys.dm_exec_requests), executing_managed_code (from sys.dm_exec_requests).') insert into #376 values ('		The following ''>'' / ''<'' / ''='' range options can be used to filter sessions as shown below:') insert into #376 values ('			Example wait > 1000, wait_time < 20000') insert into #376 values ('			Example total_elapsed_time > 10000, cpu_time > 1000') insert into #376 values ('			wait_time [> | < | =] ?') insert into #376 values ('				Wait time from sys.dm_exec_requests.') insert into #376 values ('			cpu_time [> | < | =] ?') insert into #376 values ('				CPU time from sys.dm_exec_requests.') insert into #376 values ('			total_elapsed_time [> | < | =] ?') insert into #376 values ('				Total elapsed time (duration) from sys.dm_exec_requests.') insert into #376 values ('			reads [> | < | =] ?') insert into #376 values ('				Reads from sys.dm_exec_requests.') insert into #376 values ('			logical_reads [> | < | =] ?') insert into #376 values ('				Logical Reads from sys.dm_exec_requests.') insert into #376 values ('			Additional range options: login_time (from sys.dm_exec_sessions), open_transaction_count (from sys.dm_exec_sessions),') insert into #376 values ('				num_reads (from sys.dm_exec_connections), num_writes (from sys.dm_exec_connections), writes (from sys.dm_exec_requests),') insert into #376 values ('				row_count (from sys.dm_exec_requests), nest_level (from sys.dm_exec_requests), granted_query_memory (from sys.dm_exec_requests).') insert into #376 values ('		The following ''like'' / ''not like'' options can be used to filter sessions as shown below:') insert into #376 values ('			Example wait_type LIKE ''LCK%''') insert into #376 values ('			Example program_name LIKE ''SQLTest%'', wait_type NOT LIKE ''ASYNC_NETWORK_IO''') insert into #376 values ('			host_name [LIKE | NOT LIKE ] ''?''') insert into #376 values ('				Host Name from sys.dm_exec_sessions.') insert into #376 values ('			program_name [LIKE | NOT LIKE ] ''?''') insert into #376 values ('				Program Name from sys.dm_exec_sessions.') insert into #376 values ('			login_name [LIKE | NOT LIKE ] ''?''') insert into #376 values ('				Login Name from sys.dm_exec_sessions.') insert into #376 values ('			wait_type [LIKE | NOT LIKE ] ''?''') insert into #376 values ('				Wait type from sys.dm_exec_requests.') insert into #376 values ('			wait_resource [LIKE | NOT LIKE ] ''?''') insert into #376 values ('				Wait resource from sys.dm_exec_requests.') insert into #376 values ('			Additional like / not like options: nt_domain (from sys.dm_exec_sessions), nt_user_name (from sys.dm_exec_sessions),') insert into #376 values ('') insert into #376 values ('		[@columns =] ''option[, option]'' | ''column[, column]'' | NULL') insert into #376 values ('			Example login_name, CPU, WAIT, DETAILED') insert into #376 values ('			Example r.cpu_time r.total_elapsed_time, wait_type, wait_time') insert into #376 values ('			The following options are a comma separated list, can be used to choose output columns as shown below:') insert into #376 values ('			LIMITED') insert into #376 values ('				Outputs a small set of columns.') insert into #376 values ('			DEFAULT') insert into #376 values ('				Outputs medium set of columns.') insert into #376 values ('			NULL') insert into #376 values ('				Outputs medium set of columns.') insert into #376 values ('			DETAILED') insert into #376 values ('				Outputs large set of columns when specified alone otherwise outputs large set of column associated to options chosen.') insert into #376 values ('			ALL') insert into #376 values ('				Outputs all columns, it is recommended to avoid ''ALL'' option, to reduce execution time and storage overhead.') insert into #376 values ('			CPU | CPU_DETAILED | PROCESSOR | PROCESSOR_DETAILED') insert into #376 values ('				Outputs CPU related columns.') insert into #376 values ('			IO | IO_DETAILED | DISK | DISK_DETAILED | STORAGE | STORAGE_DETAILED') insert into #376 values ('				Outputs IO related columns.') insert into #376 values ('			MEMORY | MEMORY_DETAILED') insert into #376 values ('				Outputs memory related columns.') insert into #376 values ('			NETWORK | NETWORK_DETAILED') insert into #376 values ('				Outputs network related columns.') insert into #376 values ('			WAIT | WAIT_DETAILED | WAITS | WAITS_DETAILED') insert into #376 values ('				Outputs wait related columns.') insert into #376 values ('			BLOCK | BLOCK_DETAILED | BLOCKED | BLOCKED_DETAILED | BLOCKING | BLOCKING_DETAILED') insert into #376 values ('				Outputs blocking related columns.') insert into #376 values ('			LOCK | LOCK_DETAILED | LOCKS | LOCKS_DETAILED') insert into #376 values ('				Outputs lock related columns for blocked and blocking sessions.') insert into #376 values ('			ALLLOCKS | ALLLOCKS_DETAILED') insert into #376 values ('				Outputs lock related columns for all sessions.') insert into #376 values ('			TRAN | TRAN_DETAILED | TRANS | TRANS_DETAILED | TRANSACTION | TRANSACTION_DETAILED | TRANSACTIONS | TRANSACTIONS_DETAILED') insert into #376 values ('				Outputs transaction related columns.') insert into #376 values ('			SQL | SQL_DETAILED') insert into #376 values ('				Outputs sql text related columns.') insert into #376 values ('			SQLASTEXT') insert into #376 values ('				Outputs selected SQL text columns as text instead of XML. Without this option') insert into #376 values ('					selected SQL text columns are output as XML, non-printable characters are replaced with [nchar(?)]') insert into #376 values ('			PLAN | PLAN_DETAILED | PLANS | PLANS_DETAILED') insert into #376 values ('				Outputs execution plan related columns.') insert into #376 values ('			QUERY_PROFILES | QUERY_PROFILES_DETAILED | QUERY_PROFILE | QUERY_PROFILE_DETAILED') insert into #376 values ('				Outputs query profile related columns.') insert into #376 values ('			STATS | STATS_DETAILED | STATISTICS | STATISTICS_DETAILED') insert into #376 values ('				Outputs query, procedure and trigger statistics related columns.') insert into #376 values ('			TEMPDB | TEMPDB_DETAILED') insert into #376 values ('				Outputs tempdb related columns.') insert into #376 values ('			CURSOR | CURSOR_DETAILED | CURSORS | CURSORS_DETAILED') insert into #376 values ('				Outputs cursor related columns.') insert into #376 values ('			TASK | TASK_DETAILED | TASKS | TASKS_DETAILED') insert into #376 values ('				Outputs task related columns.') insert into #376 values ('			WORKER | WORKER_DETAILED | WORKERS | WORKERS_DETAILED') insert into #376 values ('				Outputs worker related columns.') insert into #376 values ('			THREAD | THREAD_DETAILED | THREADS,THREADS_DETAILED') insert into #376 values ('				Outputs thread related columns.') insert into #376 values ('			SESSION | SESSION_DETAILED | SESSIONS | SESSIONS_DETAILED') insert into #376 values ('				Outputs session related columns.') insert into #376 values ('			CONNECTION | CONNECTION_DETAILED | CONNECTIONS | CONNECTIONS_DETAILED') insert into #376 values ('				Outputs connection related columns.') insert into #376 values ('			REQUEST | REQUEST_DETAILED | REQUESTS | REQUESTS_DETAILED') insert into #376 values ('				Outputs request related columns.') insert into #376 values ('			PLAN_ATTRIBUTE | PLAN_ATTRIBUTE_DETAILED | PLAN_ATTRIBUTES | PLAN_ATTRIBUTES_DETAILED') insert into #376 values ('				Outputs plan attribute related columns.') insert into #376 values ('			INPUTPARAMETER | INPUTPARAMETERS') insert into #376 values ('				Outputs @sessions, @columns and @order_by parameters.') insert into #376 values ('			CUSTOM | CUSTOM_DETAILED') insert into #376 values ('				Outputs custom columns, contact Ramesh Meyyappan at mailto:rmeyyappan@sqlworkshops.com for details.') insert into #376 values ('			input_buffer') insert into #376 values ('				Outputs input buffer for requests from sys.dm_exec_requests based on session_id and request_id,') insert into #376 values ('					for sessions from sys.dm_exec_sessions based on session_id.') insert into #376 values ('			s.input_buffer') insert into #376 values ('				Outputs input buffer for sessions from sys.dm_exec_sessions based on session_id.') insert into #376 values ('			r.input_buffer') insert into #376 values ('				Outputs input buffer for requests from sys.dm_exec_requests based on session_id and request_id.') insert into #376 values ('			text_object_name') insert into #376 values ('				Outputs object name for requests from sys.dm_exec_query_text based on sys.dm_exec_requests''s sql_handle,') insert into #376 values ('					for connections from sys.dm_exec_query_text based on sys.dm_exec_connections''s most_recent_sql_handle.') insert into #376 values ('			text') insert into #376 values ('				Outputs text for requests from sys.dm_exec_query_text based on sys.dm_exec_requests''s sql_handle,') insert into #376 values ('					for connections from sys.dm_exec_query_text based on sys.dm_exec_connections''s most_recent_sql_handle.') insert into #376 values ('			c.text_object_name') insert into #376 values ('				Outputs object name for connections from sys.dm_exec_query_text based on sys.dm_exec_connections''s most_recent_sql_handle.') insert into #376 values ('			c.text') insert into #376 values ('				Outputs text for connections from sys.dm_exec_query_text based on sys.dm_exec_connections''s most_recent_sql_handle.') insert into #376 values ('			r.text_object_name') insert into #376 values ('				Outputs object name for requests from sys.dm_exec_query_text based on sys.dm_exec_requests''s sql_handle.') insert into #376 values ('			r.text') insert into #376 values ('				Outputs text for requests from sys.dm_exec_query_text based on sys.dm_exec_requests''s sql_handle.') insert into #376 values ('			statement_object_name, r.statement_object_name') insert into #376 values ('				Outputs object name from sys.dm_exec_query_text based on sys.dm_exec_requests''s sql_handle.') insert into #376 values ('			statement, r.statement') insert into #376 values ('				Outputs statement, substring of text, for requests from sys.dm_exec_query_text based on sys.dm_exec_requests''s sql_handle,') insert into #376 values ('					statement_start_offset and statement_end_offset.') insert into #376 values ('			query_plan, r.query_plan') insert into #376 values ('				Outputs query plan for requests from sys.dm_exec_query_plan based on sys.dm_exec_requests''s plan_handle.') insert into #376 values ('			query_plan_checksum, r.query_plan_checksum') insert into #376 values ('				Outputs query plan checksum, based on query plan, used while saving to avoid duplicate entries.') insert into #376 values ('			text_query_plan, r.text_query_plan') insert into #376 values ('				Outputs text query plan as xml for requests from sys.dm_exec_text_query_plan based on sys.dm_exec_requests''s plan_handle,') insert into #376 values ('					statement_start_offset and statement_end_offset. ') insert into #376 values ('			text_query_plan_as_text, r.text_query_plan_as_text') insert into #376 values ('				Outputs text query plan as text for requests from sys.dm_exec_text_query_plan based on sys.dm_exec_requests''s plan_handle,') insert into #376 values ('					statement_start_offset and statement_end_offset. To avoid error 6335, XML datatype instance has too many levels of nested nodes. ') insert into #376 values ('					Maximum allowed depth is 128 levels.') insert into #376 values ('			full_text_query_plan, r.full_text_query_plan') insert into #376 values ('				Outputs complete text query plan as xml for requests from sys.dm_exec_text_query_plan based on sys.dm_exec_requests''s plan_handle') insert into #376 values ('					with statement_start_offset as 0 and statement_end_offset -1.') insert into #376 values ('			full_text_query_plan_as_text, r.full_text_query_plan_as_text') insert into #376 values ('				Outputs complete text query plan as text for requests from sys.dm_exec_text_query_plan based on sys.dm_exec_requests''s plan_handle') insert into #376 values ('					with statement_start_offset as 0 and statement_end_offset -1. To avoid error 6335, XML datatype instance has too many levels of nested nodes.') insert into #376 values ('					Maximum allowed depth is 128 levels.') insert into #376 values ('			plan_attributes_info, r.plan_attributes_info') insert into #376 values ('				Outputs plan attributes for requests from sys.dm_exec_query_plan based on sys.dm_exec_requests''s plan_handle.') insert into #376 values ('			ctime, s.ctime, c.ctime, r.ctime') insert into #376 values ('				Outputs collection time, available with ''SAVE'' option or when @datetime is not NULL.') insert into #376 values ('			servername, s.servername, c.servername, r.servername') insert into #376 values ('				Outputs server name where data was collected, available with ''SAVE'' option or when @datetime is not NULL.') insert into #376 values ('			The following columns are a comma separated list, can be used to choose output columns (SSMS might truncate the below output to 256 characters with ''Results to Text'', use ''Results to Grid'' instead):') insert into #376 values ('				session_id, login_time, host_name, program_name, host_process_id, client_version, client_interface_name, security_id, login_name, nt_domain, nt_user_name, status, context_info, cpu_time, memory_usage, total_scheduled_time, total_elapsed_time, endpoint_id, last_request_start_time, last_request_end_time, reads, writes, logical_reads, is_user_process, text_size, language, date_format, date_first, quoted_identifier, arithabort, ansi_null_dflt_on, ansi_defaults, ansi_warnings, ansi_padding, ansi_nulls, concat_null_yields_null, transaction_isolation_level, lock_timeout, deadlock_priority, row_count, prev_error, original_security_id, original_login_name, last_successful_logon, last_unsuccessful_logon, unsuccessful_logons, group_id, database_id, authenticating_database_id, open_transaction_count, session_id, most_recent_session_id, connect_time, net_transport, protocol_type, protocol_version, endpoint_id, encrypt_option, auth_scheme, node_affinity, num_reads, num_writes, last_read, last_write, net_packet_size, client_net_address, client_tcp_port, local_net_address, local_tcp_port, connection_id, parent_connection_id, most_recent_sql_handle, session_id, request_id, start_time, status, command, sql_handle, statement_start_offset, statement_end_offset, plan_handle, database_id, user_id, connection_id, blocking_session_id, wait_type, wait_time, last_wait_type, wait_resource, open_transaction_count, open_resultset_count, transaction_id, context_info, percent_complete, estimated_completion_time, cpu_time, total_elapsed_time, scheduler_id, task_address, reads, writes, logical_reads, text_size, language, date_format, date_first, quoted_identifier, arithabort, ansi_null_dflt_on, ansi_defaults, ansi_warnings, ansi_padding, ansi_nulls, concat_null_yields_null, transaction_isolation_level, lock_timeout, deadlock_priority, row_count, prev_error, nest_level, granted_query_memory, executing_managed_code, group_id, query_hash, query_plan_hash, statement_sql_handle, statement_context_id, session_id, job_info, is_blocker, is_head_blocker, blocked_session_ids, input_buffer_checksum, input_buffer_valid_flag, lock_count, lock_owner_id, locks_info, transaction_begin_time, transaction_log_record_count, transaction_log_bytes_used, transaction_info, session_tempdb_usage_kb, session_max_tempdb_usage_kb, session_tempdb_usage_info, cursor_count, max_cursor_dormant_duration, cursors_info, waiting_tasks_wait_types, waiting_tasks_max_wait_duration_ms, waiting_tasks_blocking_session_ids, waiting_tasks_valid_flag, waiting_tasks_info, service_broker_info, sp_whopro_inputparameters, custom_info, session_id, connection_id, query_stats_info, procedure_stats_info, trigger_stats_info, session_id, request_id, connection_id, is_blocked, is_dead_locked, blocker_session_ids, head_blocker_session_ids, input_buffer_checksum, input_buffer_valid_flag, wait_resource_info, lock_count, lock_owner_id, locks_info, transaction_begin_time, transaction_info, task_tempdb_usage_kb, task_max_tempdb_usage_kb, task_tempdb_usage_info, query_memory_grants_requested_memory_kb, query_memory_grants_granted_memory_kb, query_memory_grants_used_memory_kb, query_memory_grants_max_used_memory_kb, query_memory_grants_wait_time_ms, query_memory_grants_ideal_memory_kb, query_memory_grants_info, query_profiles_cpu_time_ms, query_profiles_logical_read_count, query_profiles_physical_read_count, query_profiles_read_ahead_count, query_profiles_write_page_count, query_profiles_info, query_stats_info, procedure_stats_info, trigger_stats_info, cached_plans_info, tasks_count, tasks_context_switches, tasks_pending_io, tasks_io_size_kb, read_bytes_per_second, tasks_ios_per_second, tasks_info, workers_info, threads_info, query_plan_text_checksum, custom_info') insert into #376 values ('				s.session_id, s.login_time, s.host_name, s.program_name, s.host_process_id, s.client_version, s.client_interface_name, s.security_id, s.login_name, s.nt_domain, s.nt_user_name, s.status, s.context_info, s.cpu_time, s.memory_usage, s.total_scheduled_time, s.total_elapsed_time, s.endpoint_id, s.last_request_start_time, s.last_request_end_time, s.reads, s.writes, s.logical_reads, s.is_user_process, s.text_size, s.language, s.date_format, s.date_first, s.quoted_identifier, s.arithabort, s.ansi_null_dflt_on, s.ansi_defaults, s.ansi_warnings, s.ansi_padding, s.ansi_nulls, s.concat_null_yields_null, s.transaction_isolation_level, s.lock_timeout, s.deadlock_priority, s.row_count, s.prev_error, s.original_security_id, s.original_login_name, s.last_successful_logon, s.last_unsuccessful_logon, s.unsuccessful_logons, s.group_id, s.database_id, s.authenticating_database_id, s.open_transaction_count') insert into #376 values ('				c.session_id, c.most_recent_session_id, c.connect_time, c.net_transport, c.protocol_type, c.protocol_version, c.endpoint_id, c.encrypt_option, c.auth_scheme, c.node_affinity, c.num_reads, c.num_writes, c.last_read, c.last_write, c.net_packet_size, c.client_net_address, c.client_tcp_port, c.local_net_address, c.local_tcp_port, c.connection_id, c.parent_connection_id, c.most_recent_sql_handle') insert into #376 values ('				r.session_id, r.request_id, r.start_time, r.status, r.command, r.sql_handle, r.statement_start_offset, r.statement_end_offset, r.plan_handle, r.database_id, r.user_id, r.connection_id, r.blocking_session_id, r.wait_type, r.wait_time, r.last_wait_type, r.wait_resource, r.open_transaction_count, r.open_resultset_count, r.transaction_id, r.context_info, r.percent_complete, r.estimated_completion_time, r.cpu_time, r.total_elapsed_time, r.scheduler_id, r.task_address, r.reads, r.writes, r.logical_reads, r.text_size, r.language, r.date_format, r.date_first, r.quoted_identifier, r.arithabort, r.ansi_null_dflt_on, r.ansi_defaults, r.ansi_warnings, r.ansi_padding, r.ansi_nulls, r.concat_null_yields_null, r.transaction_isolation_level, r.lock_timeout, r.deadlock_priority, r.row_count, r.prev_error, r.nest_level, r.granted_query_memory, r.executing_managed_code, r.group_id, r.query_hash, r.query_plan_hash, r.statement_sql_handle, r.statement_context_id') insert into #376 values ('				s.job_info, s.is_blocker, s.is_head_blocker, s.blocked_session_ids, s.input_buffer_checksum, s.input_buffer_valid_flag, s.lock_count, s.lock_owner_id, s.locks_info, s.transaction_begin_time, s.transaction_log_record_count, s.transaction_log_bytes_used, s.transaction_info, s.session_tempdb_usage_kb, s.session_max_tempdb_usage_kb, s.session_tempdb_usage_info, s.cursor_count, s.max_cursor_dormant_duration, s.cursors_info, s.waiting_tasks_wait_types, s.waiting_tasks_max_wait_duration_ms, s.waiting_tasks_blocking_session_ids, s.waiting_tasks_valid_flag, s.waiting_tasks_info, s.service_broker_info, s.sp_whopro_inputparameters, s.custom_info') insert into #376 values ('				c.query_stats_info, c.procedure_stats_info, c.trigger_stats_info') insert into #376 values ('				r.is_blocked, r.is_dead_locked, r.blocker_session_ids, r.head_blocker_session_ids, r.input_buffer_checksum, r.input_buffer_valid_flag, r.wait_resource_info, r.lock_count, r.lock_owner_id, r.locks_info, r.transaction_begin_time, r.transaction_info, r.task_tempdb_usage_kb, r.task_max_tempdb_usage_kb, r.task_tempdb_usage_info, r.query_memory_grants_requested_memory_kb, r.query_memory_grants_granted_memory_kb, r.query_memory_grants_used_memory_kb, r.query_memory_grants_max_used_memory_kb, r.query_memory_grants_wait_time_ms, r.query_memory_grants_ideal_memory_kb, r.query_memory_grants_info, r.query_profiles_cpu_time_ms, r.query_profiles_logical_read_count, r.query_profiles_physical_read_count, r.query_profiles_read_ahead_count, r.query_profiles_write_page_count, r.query_profiles_info, r.query_stats_info, r.procedure_stats_info, r.trigger_stats_info, r.cached_plans_info, r.tasks_count, r.tasks_context_switches, r.tasks_pending_io, r.tasks_io_size_kb, r.read_bytes_per_second, r.tasks_ios_per_second, r.tasks_info, r.workers_info, r.threads_info, r.query_plan_text_checksum, r.custom_info') insert into #376 values ('') insert into #376 values ('		[@order_by =] ''column[, column]'' | ''help'' | NULL') insert into #376 values ('			When NULL, if @sessions parameter includes ''SAVE'' option, ordered by s.ctime, s.session_id else ordered by s.session_id.') insert into #376 values ('			When ''help'', outputs source select statement to help choose column aliases for use in order by.') insert into #376 values ('			When not NULL, ordered by column(s) specified') insert into #376 values ('			Comma separated list of column aliases, column[, column].') insert into #376 values ('				Can contain any column aliases that are present in select clause, expressions are not allowed to prevent SQL Injection attacks.') insert into #376 values ('			Example r.cpu_time desc') insert into #376 values ('			Example s.login_name') insert into #376 values ('			Example rs.database_id') insert into #376 values ('			Example rs.database_name, s.login_name') insert into #376 values ('') insert into #376 values ('		[@save_to_database =] ''database_name[.schema_name]'' | NULL') insert into #376 values ('			Can be used to save and retrieve data from a specific database and optionally specific schema:') insert into #376 values ('			When NULL, saved in current database in dbo schema.') insert into #376 values ('			When not NULL, saved or retrieve from specified database and optionally specified schema') insert into #376 values ('			When enclosed with delimiter ''['' and '']'', can contain special characters') insert into #376 values ('			Example @save_to_database = ''sp_whopro_db''') insert into #376 values ('			Example @save_to_database = ''sp_whopro_db.sqlws''') insert into #376 values ('			Example @save_to_database = ''[sp whopro db]''') insert into #376 values ('			Example @save_to_database = ''[sp whopro db].[sql ws]''') insert into #376 values ('') insert into #376 values ('		[@datetime = OUTPUT] ''ctime'' | NULL') insert into #376 values ('			When NULL and @sessions parameter includes ''SAVE'' option, outputs ctime, the collection time.') insert into #376 values ('			When not NULL, returns previously saved data where ctime = @datetime') insert into #376 values ('			Example @datetime = ' + cast(cast(dateadd(day, -1, getdate()) as date) as varchar(10)) + ' 09:00:00.000' + '') insert into #376 values ('				Returns previously saved data where ctime = ' + cast(cast(dateadd(day, -1, getdate()) as date) as varchar(10)) + ' 09:00:00.000' + '.') insert into #376 values ('			Can be combined with @columns parameter to choose columns displayed.') insert into #376 values ('			When @sessions parameter includes ''NOOUTPUT'' option, outputs the select statement instead of the rseults.') insert into #376 values ('') insert into #376 values ('		[@datetime_to =] ''ctime'' | NULL') insert into #376 values ('			When not NULL, returns previously saved data where ctime between @datetime and @datetime_to') insert into #376 values ('			Example @datetime_to = ' + cast(cast(dateadd(day, 1, getdate()) as date) as varchar(10)) + ' 12:00:00.000' + '') insert into #376 values ('				Returns previously saved data where ctime between ' + cast(cast(dateadd(day, -1, getdate()) as date) as varchar(10)) + ' 09:00:00.000' + ' and ' + cast(cast(dateadd(day, 1, getdate()) as date) as varchar(10)) + ' 12:00:00.000' + '.') insert into #376 values ('') insert into #376 values ('		[@execution_time_report_threshold =] milliseconds | NULL') insert into #376 values ('			When not NULL, prints sp_whopro internal statements that exceeds the @execution_time_report_threshold value,') insert into #376 values ('				 this is to trace long executing sp_whopro internal queries') insert into #376 values ('			When NULL, @execution_time_report_threshold is 250 milliseconds') insert into #376 values ('			Example @execution_time_report_threshold = 100') insert into #376 values ('				Prints sp_whopro internal statements that exceeds 100 milliseconds execution time.') insert into #376 values ('Usage Examples:') insert into #376 values ('--Example parameters to monitor waits, blocking and corresponding locks:') insert into #376 values ('exec sp_whopro ''active, blocking'', ''sql, wait, block, locks, limited''') insert into #376 values ('go') insert into #376 values ('') insert into #376 values ('--Example parameters to monitor waits, blocking and corresponding locks and to save the data to current database:') insert into #376 values ('exec sp_whopro ''active, blocking, save'', ''sql, wait, block, locks, limited''') insert into #376 values ('go') insert into #376 values ('') insert into #376 values ('--Example parameters to monitor waits, blocking and corresponding locks and to save the data to ''sp_whopro_db'' database in a SQL Agent job without output:') insert into #376 values ('exec sp_whopro ''active, blocking, save, nooutput'', ''sql, wait, block, locks, limited'', null, ''sp_whopro_db''') insert into #376 values ('go') insert into #376 values ('') insert into #376 values ('--Example parameters to retrieve saved data from ''sp_whopro_db'' database:') insert into #376 values ('exec sp_whopro null, ''sql, wait, block, locks, limited'', null, ''sp_whopro_db'', ''2014-10-16 08:24:13.270'',''2014-10-18 08:24:13.270''') insert into #376 values ('') insert into #376 values ('--Example parameters to output the select statement used to retrieve saved data from ''sp_whopro_db'' database:') insert into #376 values ('exec sp_whopro ''nooutput'', ''sql, wait, block, locks, limited'', null, ''sp_whopro_db'', ''2014-10-16 08:24:13.270'',''2014-10-18 08:24:13.270''') insert into #376 values ('go') insert into #376 values (' ') insert into #376 values ('Deleting old data:') insert into #376 values ('Tables sqlws_dm_exec_requests, sqlws_dm_exec_connections and sqlws_dm_exec_sessions have ctime, the collection time column that can be used for data purging.') insert into #376 values ('Tables sqlws_input_buffer, sqlws_dm_exec_sql_text, sqlws_dm_exec_query_plan, sqlws_dm_exec_text_query_plan, sqlws_dm_exec_query_plan_checksum and sqlws_dm_exec_plan_attributes have ctime, the collection time, in addition they have rtime, the last reference time and rcount, the reference count column that can be used for data purging.') insert into #376 values (' ') insert into #376 values ('*/') select c7c1 as 'sp_whopro help' from #376 order by c009 return 0 end create table #d6f4_cd0 (c009 int identity, c66ea smallint, c307 bit) declare @d6f4_d46 bit declare @d6f4_4ff bit set @d6f4_d46 = 0 set @d6f4_4ff = 0 create table #bf25_cd0 (c009 int identity, c5c20 int, c307 bit) declare @bf25_d46 bit declare @bf25_4ff bit set @bf25_d46 = 0 set @bf25_4ff = 0 create table #2b7a_cd0 (c009 int identity, c3505 varbinary(128), c307 bit) declare @2b7a_d46 bit declare @2b7a_4ff bit set @2b7a_d46 = 0 set @2b7a_4ff = 0 create table #a1ac_cd0 (c009 int identity, c8438 bit, c307 bit) declare @a1ac_d46 bit declare @a1ac_4ff bit set @a1ac_d46 = 0 set @a1ac_4ff = 0 create table #0d6f_cd0 (c009 int identity, c2fb9 smallint, c307 bit) declare @0d6f_d46 bit declare @0d6f_4ff bit set @0d6f_d46 = 0 set @0d6f_4ff = 0 create table #6706_cd0 (c009 int identity, c9955 int, c307 bit) declare @6706_d46 bit declare @6706_4ff bit set @6706_d46 = 0 set @6706_4ff = 0 create table #fba3_cd0 (c009 int identity, c05a7 smallint, c307 bit) declare @fba3_d46 bit declare @fba3_4ff bit set @fba3_d46 = 0 set @fba3_4ff = 0 create table #619e_cd0 (c009 int identity, c7407 smallint, c307 bit) declare @619e_d46 bit declare @619e_4ff bit set @619e_d46 = 0 set @619e_4ff = 0 create table #fefe_cd0 (c009 int identity, c8114 uniqueidentifier, c307 bit) declare @fefe_d46 bit declare @fefe_4ff bit set @fefe_d46 = 0 set @fefe_4ff = 0 create table #8cc0_cd0 (c009 int identity, c649f varbinary(64), c307 bit) declare @8cc0_d46 bit declare @8cc0_4ff bit set @8cc0_d46 = 0 set @8cc0_4ff = 0 create table #9bef_cd0 (c009 int identity, ceb01 int, c307 bit) declare @9bef_d46 bit declare @9bef_4ff bit set @9bef_d46 = 0 set @9bef_4ff = 0 create table #6a44_cd0 (c009 int identity, c86b4 nvarchar(30), c307 bit) declare @6a44_d46 bit declare @6a44_4ff bit set @6a44_d46 = 0 set @6a44_4ff = 0 create table #b270_cd0 (c009 int identity, c7e60 nvarchar(32), c307 bit) declare @b270_d46 bit declare @b270_4ff bit set @b270_d46 = 0 set @b270_4ff = 0 create table #5a0b_cd0 (c009 int identity, cad44 varbinary(64), c307 bit) declare @5a0b_d46 bit declare @5a0b_4ff bit set @5a0b_d46 = 0 set @5a0b_4ff = 0 create table #040a_cd0 (c009 int identity, c186e int, c307 bit) declare @040a_d46 bit declare @040a_4ff bit set @040a_d46 = 0 set @040a_4ff = 0 create table #d085_cd0 (c009 int identity, c0a46 int, c307 bit) declare @d085_d46 bit declare @d085_4ff bit set @d085_d46 = 0 set @d085_4ff = 0 create table #0057_cd0 (c009 int identity, ca03c varbinary(64), c307 bit) declare @0057_d46 bit declare @0057_4ff bit set @0057_d46 = 0 set @0057_4ff = 0 create table #33d0_cd0 (c009 int identity, c107d smallint, c307 bit) declare @33d0_d46 bit declare @33d0_4ff bit set @33d0_d46 = 0 set @33d0_4ff = 0 create table #0103_cd0 (c009 int identity, c478c bigint, c307 bit) declare @0103_d46 bit declare @0103_4ff bit set @0103_d46 = 0 set @0103_4ff = 0 create table #9f5c_cd0 (c009 int identity, c1555 int, c307 bit) declare @9f5c_d46 bit declare @9f5c_4ff bit set @9f5c_d46 = 0 set @9f5c_4ff = 0 create table #8724_cd0 (c009 int identity, c855e bit, c307 bit) declare @8724_d46 bit declare @8724_4ff bit set @8724_d46 = 0 set @8724_4ff = 0 create table #0cf5_cd0 (c009 int identity, c523f binary(8), c307 bit) declare @0cf5_d46 bit declare @0cf5_4ff bit set @0cf5_d46 = 0 set @0cf5_4ff = 0 create table #1184_cd0 (c009 int identity, c6af1 binary(8), c307 bit) declare @1184_d46 bit declare @1184_4ff bit set @1184_d46 = 0 set @1184_4ff = 0 create table #0197_cd0 (c009 int identity, cf2a4 datetime, c2e6 char(1)) declare @0197_d46 bit declare @0197_1a5 bit declare @0197_95c bit declare @0197_e9b bit set @0197_d46 = 0 set @0197_1a5 = 0 set @0197_95c = 0 set @0197_e9b = 0 create table #9056_cd0 (c009 int identity, c62e7 int, c2e6 char(1)) declare @9056_d46 bit declare @9056_1a5 bit declare @9056_95c bit declare @9056_e9b bit set @9056_d46 = 0 set @9056_1a5 = 0 set @9056_95c = 0 set @9056_e9b = 0 create table #d427_cd0 (c009 int identity, c1ce7 int, c2e6 char(1)) declare @d427_d46 bit declare @d427_1a5 bit declare @d427_95c bit declare @d427_e9b bit set @d427_d46 = 0 set @d427_1a5 = 0 set @d427_95c = 0 set @d427_e9b = 0 create table #19b8_cd0 (c009 int identity, cd617 int, c2e6 char(1)) declare @19b8_d46 bit declare @19b8_1a5 bit declare @19b8_95c bit declare @19b8_e9b bit set @19b8_d46 = 0 set @19b8_1a5 = 0 set @19b8_95c = 0 set @19b8_e9b = 0 create table #94b4_cd0 (c009 int identity, c5e2b int, c2e6 char(1)) declare @94b4_d46 bit declare @94b4_1a5 bit declare @94b4_95c bit declare @94b4_e9b bit set @94b4_d46 = 0 set @94b4_1a5 = 0 set @94b4_95c = 0 set @94b4_e9b = 0 create table #2c56_cd0 (c009 int identity, c23d3 int, c2e6 char(1)) declare @2c56_d46 bit declare @2c56_1a5 bit declare @2c56_95c bit declare @2c56_e9b bit set @2c56_d46 = 0 set @2c56_1a5 = 0 set @2c56_95c = 0 set @2c56_e9b = 0 create table #4c51_cd0 (c009 int identity, c2ab0 int, c2e6 char(1)) declare @4c51_d46 bit declare @4c51_1a5 bit declare @4c51_95c bit declare @4c51_e9b bit set @4c51_d46 = 0 set @4c51_1a5 = 0 set @4c51_95c = 0 set @4c51_e9b = 0 create table #dc22_cd0 (c009 int identity, cb27b bigint, c2e6 char(1)) declare @dc22_d46 bit declare @dc22_1a5 bit declare @dc22_95c bit declare @dc22_e9b bit set @dc22_d46 = 0 set @dc22_1a5 = 0 set @dc22_95c = 0 set @dc22_e9b = 0 create table #7d3d_cd0 (c009 int identity, c960b bigint, c2e6 char(1)) declare @7d3d_d46 bit declare @7d3d_1a5 bit declare @7d3d_95c bit declare @7d3d_e9b bit set @7d3d_d46 = 0 set @7d3d_1a5 = 0 set @7d3d_95c = 0 set @7d3d_e9b = 0 create table #d524_cd0 (c009 int identity, cf89a bigint, c2e6 char(1)) declare @d524_d46 bit declare @d524_1a5 bit declare @d524_95c bit declare @d524_e9b bit set @d524_d46 = 0 set @d524_1a5 = 0 set @d524_95c = 0 set @d524_e9b = 0 create table #4907_cd0 (c009 int identity, ce5c9 bigint, c2e6 char(1)) declare @4907_d46 bit declare @4907_1a5 bit declare @4907_95c bit declare @4907_e9b bit set @4907_d46 = 0 set @4907_1a5 = 0 set @4907_95c = 0 set @4907_e9b = 0 create table #1060_cd0 (c009 int identity, c0adb int, c2e6 char(1)) declare @1060_d46 bit declare @1060_1a5 bit declare @1060_95c bit declare @1060_e9b bit set @1060_d46 = 0 set @1060_1a5 = 0 set @1060_95c = 0 set @1060_e9b = 0 create table #193c_cd0 (c009 int identity, c7860 int, c2e6 char(1)) declare @193c_d46 bit declare @193c_1a5 bit declare @193c_95c bit declare @193c_e9b bit set @193c_d46 = 0 set @193c_1a5 = 0 set @193c_95c = 0 set @193c_e9b = 0 create table #0209_cd0 (c009 int identity, c7d55 nvarchar(128), c307 bit) declare @0209_d46 bit declare @0209_4ff bit set @0209_d46 = 0 set @0209_4ff = 0 create table #bc60_cd0 (c009 int identity, cab12 nvarchar(128), c307 bit) declare @bc60_d46 bit declare @bc60_4ff bit set @bc60_d46 = 0 set @bc60_4ff = 0 create table #b46b_cd0 (c009 int identity, c5bb1 nvarchar(128), c307 bit) declare @b46b_d46 bit declare @b46b_4ff bit set @b46b_d46 = 0 set @b46b_4ff = 0 create table #e21a_cd0 (c009 int identity, c0e20 nvarchar(128), c307 bit) declare @e21a_d46 bit declare @e21a_4ff bit set @e21a_d46 = 0 set @e21a_4ff = 0 create table #28ed_cd0 (c009 int identity, cee19 nvarchar(128), c307 bit) declare @28ed_d46 bit declare @28ed_4ff bit set @28ed_d46 = 0 set @28ed_4ff = 0 create table #e8f8_cd0 (c009 int identity, caf76 varchar(48), c307 bit) declare @e8f8_d46 bit declare @e8f8_4ff bit set @e8f8_d46 = 0 set @e8f8_4ff = 0 create table #8198_cd0 (c009 int identity, c8e79 nvarchar(60), c307 bit) declare @8198_d46 bit declare @8198_4ff bit set @8198_d46 = 0 set @8198_4ff = 0 create table #07e1_cd0 (c009 int identity, c32a0 nvarchar(256), c307 bit) declare @07e1_d46 bit declare @07e1_4ff bit set @07e1_d46 = 0 set @07e1_4ff = 0 create table #235 (c009 int identity, c010 nvarchar(max)) create table #254 (c009 int identity, c85c nvarchar(max)) create table #cf4 (c009 int identity, cdf1 nvarchar(max)) declare @d14 nvarchar(max) declare @891 nvarchar(max) declare @741 bit set @741 = 0 declare @d93 xml declare @fa8 int declare @917 char(1) declare @a53 nvarchar(max) declare @038 bit declare @04c char(1) declare @e82 bit declare @7b2 nvarchar(max) set @e82 = 0 declare @bb0 int set @bb0 = 0 declare @c91 int set @c91 = 1 declare @acb bit set @acb = 0 declare @b6d bit set @b6d = 0 declare @ad4 bit set @ad4 = 0 declare @05b nvarchar(max) declare @d10 int set @d14 = replace(replace(replace(@sessions, char(13), ' '), char(10), ' '), '	', ' ') while (charindex('  ', @d14) <> 0) set @d14 = replace(@d14, '  ', ' ') if (@d14 = ' ') set @sessions = NULL set @d14 = replace(replace(replace(@datetime, char(13), ' '), char(10), ' '), '	', ' ') while (charindex('  ', @d14) <> 0) set @d14 = replace(@d14, '  ', ' ') if (@d14 = ' ') set @datetime = NULL set @d14 = replace(replace(replace(@datetime_to, char(13), ' '), char(10), ' '), '	', ' ') while (charindex('  ', @d14) <> 0) set @d14 = replace(@d14, '  ', ' ') if (@d14 = ' ') set @datetime_to = NULL if (@sessions is not NULL) begin set @d14 = replace(replace(replace(@sessions, char(13), ' '), char(10), ' '), '	', ' ') set @fa8 = 1 set @917 = ',' while (@fa8 <= len(@d14)) begin if (substring(@d14, @fa8, 1) = ')') begin if (@917 = ',') begin set @a53 = 'Invalid format ''' + substring(@d14, @fa8, len(@d14) - @fa8) + ''' for parameter @sessions specified, missing ''(''.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @917 = ',' end if (substring(@d14, @fa8, 1) = '(') begin if (@917 = ';') begin set @a53 = 'Invalid format ''' + substring(@d14, @fa8, len(@d14) - @fa8) + ''' for parameter @sessions specified, missing '')''.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @917 = ';' end if (substring(@d14, @fa8, 1) = ',' and @917 = ';') set @d14 = stuff(@d14, @fa8, 1, ';') set @fa8 = @fa8 + 1 end if (@917 = ';') begin set @a53 = 'Invalid format ''' + @sessions + ''' for parameter @sessions specified, missing '')''.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @d14 = replace(replace(@d14, '<', '{['), '>', ']}') set @d93 = N'<r>' + replace(@d14, ',', '</r><r>') + '</r>' set @d14 = replace(replace(@d14, '{[', '<'), ']}', '>') insert into #254 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #254 where c85c is NULL or c85c = '' update #254 set c85c = replace(replace(c85c, '{[', '<'), ']}', '>') if exists (select c85c from #254) begin declare c482 cursor for select c85c from #254 order by c009 open c482 fetch next from c482 into @d14 while (@@fetch_status = 0) begin if (upper(@d14) in ('SAVE')) set @e82 = 1 else if (upper(@d14) in ('ALL')) set @acb = 1 else if (upper(@d14) in ('NODDL')) set @b6d = 1 else if (upper(@d14) in ('NOOUTPUT')) set @ad4 = 1 else if (upper(@d14) in ('ACTIVE', 'WAIT', 'BLOCK', 'BLOCKED', 'BLOCKING', 'CURSOR', 'SP_WHOPRO')) insert into #235 values (upper(@d14))
	else if (upper(@d14) like 'SESSION_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (upper(@891) like 'IN%') begin set @d6f4_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @d6f4_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #d6f4_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'HOST_PROCESS_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 15 + 1, len(@d14) - 15)) if (upper(@891) like 'IN%') begin set @bf25_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @bf25_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #bf25_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'CONTEXT_INFO%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 12 + 1, len(@d14) - 12)) if (upper(@891) like 'IN%') begin set @2b7a_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @2b7a_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #2b7a_cd0 select cast('' as xml).value('xs:hexBinary(sql:column("t.c"))', 'varbinary(max)'), @038 from (select substring(cdf1, 3, len(cdf1) - 2) from #cf4) as t(c) if exists (select c307 from #2b7a_cd0 where c3505 is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect binary format.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end end
	else if (upper(@d14) like 'IS_USER_PROCESS%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 15 + 1, len(@d14) - 15)) if (upper(@891) like 'IN%') begin set @a1ac_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @a1ac_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #a1ac_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'TRANSACTION_ISOLATION_LEVEL%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 27 + 1, len(@d14) - 27)) if (upper(@891) like 'IN%') begin set @0d6f_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @0d6f_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #0d6f_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'GROUP_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 8 + 1, len(@d14) - 8)) if (upper(@891) like 'IN%') begin set @6706_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @6706_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #6706_cd0 select cdf1, @038 from #cf4 end
	else if (upper(@d14) like 'DATABASE_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 11 + 1, len(@d14) - 11)) if (upper(@891) like 'IN%') begin set @fba3_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @fba3_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #fba3_cd0 select cdf1, @038 from #cf4 end
	else if (upper(@d14) like 'DATABASE_NAME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 13 + 1, len(@d14) - 13)) if (upper(@891) like 'IN%') begin set @fba3_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @fba3_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if exists (select cdf1 from #cf4 where db_id(cdf1) is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect database name.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #fba3_cd0 select db_id(cdf1), @038 from #cf4 end else if (upper(@d14) like 'NODE_AFFINITY%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 13 + 1, len(@d14) - 13)) if (upper(@891) like 'IN%') begin set @619e_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @619e_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #619e_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'CONNECTION_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 13 + 1, len(@d14) - 13)) if (upper(@891) like 'IN%') begin set @fefe_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @fefe_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #fefe_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'MOST_RECENT_SQL_HANDLE%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 22 + 1, len(@d14) - 22)) if (upper(@891) like 'IN%') begin set @8cc0_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @8cc0_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #8cc0_cd0 select cast('' as xml).value('xs:hexBinary(sql:column("t.c"))', 'varbinary(max)'), @038 from (select substring(cdf1, 3, len(cdf1) - 2) from #cf4) as t(c) if exists (select c307 from #8cc0_cd0 where c649f is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect binary format.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end end else if (upper(@d14) like 'REQUEST_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (upper(@891) like 'IN%') begin set @9bef_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @9bef_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #9bef_cd0 select cdf1, @038 from #cf4 end
	else if (upper(@d14) like 'STATUS%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 6 + 1, len(@d14) - 6)) if (upper(@891) like 'IN%') begin set @6a44_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @6a44_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #6a44_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'COMMAND%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 7 + 1, len(@d14) - 7)) if (upper(@891) like 'IN%') begin set @b270_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @b270_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #b270_cd0 select cdf1, @038 from #cf4 end
	else if (upper(@d14) like 'SQL_HANDLE%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (upper(@891) like 'IN%') begin set @5a0b_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @5a0b_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #5a0b_cd0 select cast('' as xml).value('xs:hexBinary(sql:column("t.c"))', 'varbinary(max)'), @038 from (select substring(cdf1, 3, len(cdf1) - 2) from #cf4) as t(c) if exists (select c307 from #5a0b_cd0 where cad44 is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect binary format.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end end else if (upper(@d14) like 'STATEMENT_START_OFFSET%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 22 + 1, len(@d14) - 22)) if (upper(@891) like 'IN%') begin set @040a_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @040a_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #040a_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'STATEMENT_END_OFFSET%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 20 + 1, len(@d14) - 20)) if (upper(@891) like 'IN%') begin set @d085_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @d085_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #d085_cd0 select cdf1, @038 from #cf4 end
	else if (upper(@d14) like 'PLAN_HANDLE%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 11 + 1, len(@d14) - 11)) if (upper(@891) like 'IN%') begin set @0057_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @0057_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #0057_cd0 select cast('' as xml).value('xs:hexBinary(sql:column("t.c"))', 'varbinary(max)'), @038 from (select substring(cdf1, 3, len(cdf1) - 2) from #cf4) as t(c) if exists (select c307 from #0057_cd0 where ca03c is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect binary format.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end end else if (upper(@d14) like 'BLOCKING_SESSION_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 19 + 1, len(@d14) - 19)) if (upper(@891) like 'IN%') begin set @33d0_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @33d0_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #33d0_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'TRANSACTION_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 14 + 1, len(@d14) - 14)) if (upper(@891) like 'IN%') begin set @0103_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @0103_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #0103_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'SCHEDULER_ID%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 12 + 1, len(@d14) - 12)) if (upper(@891) like 'IN%') begin set @9f5c_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @9f5c_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #9f5c_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'EXECUTING_MANAGED_CODE%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 22 + 1, len(@d14) - 22)) if (upper(@891) like 'IN%') begin set @8724_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @8724_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #8724_cd0 select cdf1, @038 from #cf4 end else if (upper(@d14) like 'QUERY_HASH%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (upper(@891) like 'IN%') begin set @0cf5_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @0cf5_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #0cf5_cd0 select cast('' as xml).value('xs:hexBinary(sql:column("t.c"))', 'varbinary(max)'), @038 from (select substring(cdf1, 3, len(cdf1) - 2) from #cf4) as t(c) if exists (select c307 from #0cf5_cd0 where c523f is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect binary format.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end end else if (upper(@d14) like 'QUERY_PLAN_HASH%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 15 + 1, len(@d14) - 15)) if (upper(@891) like 'IN%') begin set @1184_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 3, len(@891) - 2))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'IN%') begin set @1184_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 3, len(ltrim(substring(@891, 4, len(@891) - 3))) - 2))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '(' and substring(@891, len(@891), 1) = ')') set @891 = substring(@891, 2, len(@891) - 2) else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''( / )''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @891 = replace(@891, ';', ',') set @d93 = N'<r>' + replace(@891, ',', '</r><r>') + '</r>' delete #cf4 insert into #cf4 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @d93.nodes('r') as t(c) delete #cf4 where cdf1 is NULL or cdf1 = '' update #cf4 set cdf1 = substring(cdf1, 2, len(cdf1) - 2) where substring(cdf1, 1, 1) = '''' and substring(cdf1, len(cdf1), 1) = '''' if not exists (select cdf1 from #cf4) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, is empty.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #1184_cd0 select cast('' as xml).value('xs:hexBinary(sql:column("t.c"))', 'varbinary(max)'), @038 from (select substring(cdf1, 3, len(cdf1) - 2) from #cf4) as t(c) if exists (select c307 from #1184_cd0 where c6af1 is NULL) begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, incorrect binary format.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end end else if (upper(@d14) like 'LOGIN_TIME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (@891 like '<%') begin set @04c = '<' set @0197_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @0197_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @0197_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @0197_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #0197_cd0 (cf2a4, c2e6) values (@891, @04c) end else if (upper(@d14) like 'OPEN_TRANSACTION_COUNT%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 22 + 1, len(@d14) - 22)) if (@891 like '<%') begin set @04c = '<' set @9056_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @9056_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @9056_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @9056_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #9056_cd0 (c62e7, c2e6) values (@891, @04c) end else if (upper(@d14) like 'NUM_READS%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 9 + 1, len(@d14) - 9)) if (@891 like '<%') begin set @04c = '<' set @d427_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @d427_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @d427_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @d427_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #d427_cd0 (c1ce7, c2e6) values (@891, @04c) end else if (upper(@d14) like 'NUM_WRITES%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (@891 like '<%') begin set @04c = '<' set @19b8_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @19b8_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @19b8_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @19b8_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #19b8_cd0 (cd617, c2e6) values (@891, @04c) end
	else if (upper(@d14) like 'WAIT_TIME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 9 + 1, len(@d14) - 9)) if (@891 like '<%') begin set @04c = '<' set @94b4_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @94b4_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @94b4_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @94b4_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #94b4_cd0 (c5e2b, c2e6) values (@891, @04c) end
	else if (upper(@d14) like 'CPU_TIME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 8 + 1, len(@d14) - 8)) if (@891 like '<%') begin set @04c = '<' set @2c56_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @2c56_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @2c56_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @2c56_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #2c56_cd0 (c23d3, c2e6) values (@891, @04c) end
	else if (upper(@d14) like 'TOTAL_ELAPSED_TIME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 18 + 1, len(@d14) - 18)) if (@891 like '<%') begin set @04c = '<' set @4c51_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @4c51_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @4c51_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @4c51_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #4c51_cd0 (c2ab0, c2e6) values (@891, @04c) end
	else if (upper(@d14) like 'READS%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 5 + 1, len(@d14) - 5)) if (@891 like '<%') begin set @04c = '<' set @dc22_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @dc22_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @dc22_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @dc22_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #dc22_cd0 (cb27b, c2e6) values (@891, @04c) end else if (upper(@d14) like 'WRITES%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 6 + 1, len(@d14) - 6)) if (@891 like '<%') begin set @04c = '<' set @7d3d_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @7d3d_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @7d3d_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @7d3d_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #7d3d_cd0 (c960b, c2e6) values (@891, @04c) end
	else if (upper(@d14) like 'LOGICAL_READS%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 13 + 1, len(@d14) - 13)) if (@891 like '<%') begin set @04c = '<' set @d524_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @d524_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @d524_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @d524_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #d524_cd0 (cf89a, c2e6) values (@891, @04c) end else if (upper(@d14) like 'ROW_COUNT%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 9 + 1, len(@d14) - 9)) if (@891 like '<%') begin set @04c = '<' set @4907_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @4907_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @4907_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @4907_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #4907_cd0 (ce5c9, c2e6) values (@891, @04c) end else if (upper(@d14) like 'NEST_LEVEL%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (@891 like '<%') begin set @04c = '<' set @1060_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @1060_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @1060_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @1060_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #1060_cd0 (c0adb, c2e6) values (@891, @04c) end else if (upper(@d14) like 'GRANTED_QUERY_MEMORY%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 20 + 1, len(@d14) - 20)) if (@891 like '<%') begin set @04c = '<' set @193c_95c = 1 end else if (@891 like '=%') begin set @04c = '=' set @193c_1a5 = 1 end else if (@891 like '>%') begin set @04c = '>' set @193c_e9b = 1 end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''< or = or >''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end set @193c_d46 = 1 set @891 = ltrim(rtrim(substring(@891, 2, len(@891) - 1))) if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #193c_cd0 (c7860, c2e6) values (@891, @04c) end else if (upper(@d14) like 'HOST_NAME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 9 + 1, len(@d14) - 9)) if (upper(@891) like 'LIKE%') begin set @0209_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @0209_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #0209_cd0 (c7d55, c307) values (@891, @038) end
	else if (upper(@d14) like 'PROGRAM_NAME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 12 + 1, len(@d14) - 12)) if (upper(@891) like 'LIKE%') begin set @bc60_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @bc60_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #bc60_cd0 (cab12, c307) values (@891, @038) end
	else if (upper(@d14) like 'LOGIN_NAME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 10 + 1, len(@d14) - 10)) if (upper(@891) like 'LIKE%') begin set @b46b_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @b46b_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #b46b_cd0 (c5bb1, c307) values (@891, @038) end else if (upper(@d14) like 'NT_DOMAIN%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 9 + 1, len(@d14) - 9)) if (upper(@891) like 'LIKE%') begin set @e21a_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @e21a_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #e21a_cd0 (c0e20, c307) values (@891, @038) end else if (upper(@d14) like 'NT_USER_NAME%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 12 + 1, len(@d14) - 12)) if (upper(@891) like 'LIKE%') begin set @28ed_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @28ed_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #28ed_cd0 (cee19, c307) values (@891, @038) end else if (upper(@d14) like 'CLIENT_NET_ADDRESS%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 18 + 1, len(@d14) - 18)) if (upper(@891) like 'LIKE%') begin set @e8f8_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @e8f8_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #e8f8_cd0 (caf76, c307) values (@891, @038) end
	else if (upper(@d14) like 'WAIT_TYPE%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 9 + 1, len(@d14) - 9)) if (upper(@891) like 'LIKE%') begin set @8198_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @8198_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #8198_cd0 (c8e79, c307) values (@891, @038) end
	else if (upper(@d14) like 'WAIT_RESOURCE%') begin set @741 = 1 set @891 = ltrim(substring(@d14, 13 + 1, len(@d14) - 13)) if (upper(@891) like 'LIKE%') begin set @07e1_d46 = 1 set @038 = 1 set @891 = ltrim(rtrim(substring(@891, 5, len(@891) - 4))) end else if (upper(@891) like 'NOT%' and upper(ltrim(substring(@891, 4, len(@891) - 3))) like 'LIKE%') begin set @07e1_4ff = 1 set @038 = 0 set @891 = ltrim(rtrim(substring(ltrim(substring(@891, 4, len(@891) - 3)), 5, len(ltrim(substring(@891, 4, len(@891) - 3))) - 4))) end else begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, missing ''like / not like''' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end if (len(@891) > 1) if (substring(@891, 1, 1) = '''' and substring(@891, len(@891), 1) = '''') set @891 = substring(@891, 2, len(@891) - 2) if (@891 = '') begin set @a53 = 'Invalid format ''' + @d14 + ''' for parameter @sessions specified, empty value' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end insert into #07e1_cd0 (c32a0, c307) values (@891, @038) end else if (upper(@d14) in ('HELP')) begin set @a53 = 'Invalid option ''HELP'' for parameter @sessions specified, option ''HELP'' cannot be combined with other options.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end else begin set @a53 = 'Invalid option ''' + @d14 + ''' for parameter @sessions specified.' raiserror (@a53, 17, 1) set @datetime = NULL close c482 deallocate c482 return 1 end fetch next from c482 into @d14 end close c482 deallocate c482 end end if (@e82 = 1 and @datetime is not NULL) begin set @a53 = '@sessions option ''SAVE'' cannot be is specified when @datetime is not NULL' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @7b2 = ltrim(rtrim(@save_to_database)) if (@7b2 = '') set @7b2 = NULL if (@7b2 is not NULL) begin if ((@e82 = 1) or (@datetime is not NULL)) begin declare @ca5 nvarchar(256) if (charindex('[', @7b2) > 0) begin if (substring (@7b2, len(@7b2), 1) <> ']') begin set @a53 = 'Invalid database_name.[schema_name] ''' + case when charindex('].[', @7b2, 0) = 0 then substring (@7b2, 2, len(@7b2) - 2) else substring (@7b2, 2, charindex('].[', @7b2, 0) - 2) end + ''' for parameter @7b2 specified, when using delimiter ''['', should terminate with delimiter '']''.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if (db_id(case when charindex('].[', @7b2, 0) = 0 then substring (@7b2, 2, len(@7b2) - 2) else substring (@7b2, 2, charindex('].[', @7b2, 0) - 2) end) is NULL) begin set @a53 = 'Invalid database name ''' + case when charindex('].[', @7b2, 0) = 0 then substring (@7b2, 2, len(@7b2) - 2) else substring (@7b2, 2, charindex('].[', @7b2, 0) - 2) end + ''' for parameter @7b2 specified.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end else begin set @bb0 = db_id(case when charindex('].[', @7b2, 0) = 0 then substring (@7b2, 2, len(@7b2) - 2) else substring (@7b2, 2, charindex('].[', @7b2, 0) - 2) end) if (charindex('].[', @7b2, 0) > 0) begin set @c91 = 0 set @ca5 = substring (@7b2, charindex('].[', @7b2, 0) + 3, len(@7b2) - charindex('].[', @7b2, 0) - 3) set @05b = 'use [' + db_name(@bb0) + '] select @c91 = schema_id from sys.schemas where name = @ca5' exec @d10 = sp_executesql @05b, N'@ca5 nvarchar(256), @c91 int output', @ca5 = @ca5, @c91 = @c91 output if (@d10 <> 0) begin set @a53 = '''Failed: sp_executesql N''' + @05b + ''', N''@name nvarchar(256), @c91 int output'', @ca5 = ''' + substring (@7b2, charindex('].[', @7b2, 0) + 3, len(@7b2) - charindex('].[', @7b2, 0) - 3) + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if (@c91 = 0) begin set @a53 = 'Invalid schema name ''' + substring (@7b2, charindex('].[', @7b2, 0) + 3, len(@7b2) - charindex('].[', @7b2, 0) - 3) + ''' for parameter @7b2 specified.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end end else begin if (db_id(ltrim(rtrim(case when charindex('.', @7b2, 0) = 0 then @7b2 else substring (@7b2, 0, charindex('.', @7b2, 0)) end))) is NULL) begin set @a53 = 'Invalid database name ''' + ltrim(rtrim(case when charindex('.', @7b2, 0) = 0 then @7b2 else substring (@7b2, 0, charindex('.', @7b2, 0)) end)) + ''' for parameter @7b2 specified.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end else begin set @bb0 = db_id(ltrim(rtrim(case when charindex('.', @7b2, 0) = 0 then @7b2 else substring (@7b2, 0, charindex('.', @7b2, 0)) end))) if (charindex('.', @7b2, 0) > 0) begin set @c91 = 0 set @ca5 = substring (@7b2, charindex('.', @7b2, 0) + 1, len(@7b2) - charindex('.', @7b2, 0)) set @05b = 'use [' + db_name(@bb0) + '] select @c91 = schema_id from sys.schemas where name = @ca5' exec @d10 = sp_executesql @05b, N'@ca5 nvarchar(256), @c91 int output', @ca5 = @ca5, @c91 = @c91 output if (@d10 <> 0) begin set @a53 = '''Failed: sp_executesql N''' + @05b + ''', N''@name nvarchar(256), @c91 int output'', @ca5 = ''' + substring (@7b2, charindex('.', @7b2, 0) + 1, len(@7b2) - charindex('.', @7b2, 0)) + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if (@c91 = 0) begin set @a53 = 'Invalid schema name ''' + substring (@7b2, charindex('.', @7b2, 0) + 1, len(@7b2) - charindex('.', @7b2, 0)) + ''' for parameter @7b2 specified.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end end end else begin set @a53 = 'Parameter @save_to_database can be specified only when ''SAVE'' option for parameter @session is specified or when @datetime is specified.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end else begin set @bb0 = db_id() end if (@b6d = 1 and @e82 = 0) begin set @a53 = 'When @sessions option ''NODDL'' is specified, option ''SAVE'' should also be specified' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if (@ad4 = 1 and @e82 = 0 and @datetime is NULL) begin set @a53 = 'When @sessions option ''NOOUTPUT'' is specified, option ''SAVE'' should also be specified or @datetime should not be NULL' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if (@datetime is NULL and @datetime_to is not NULL) begin set @a53 = 'When @datetime is NULL, @datetime_to should be NULL' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end create table #cd8 (c009 int identity, c85c nvarchar(max)) declare @306 nvarchar(max) declare @404 xml declare @8e3 bit set @8e3 = 0 set @306 = replace(replace(replace(@columns, char(13), ' '), char(10), ' '), '	', ' ') while (charindex('  ', @306) <> 0) set @306 = replace(@306, '  ', ' ') if (@306 = ' ') set @columns = NULL if (@columns is not NULL) begin set @columns = replace(replace(replace(@columns, char(13), ' '), char(10), ' '), '	', ' ') set @404 = N'<r>' + replace(@columns, ',', '</r><r>') + '</r>' insert into #cd8 select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @404.nodes('r') as t(c) delete #cd8 where c85c is NULL or c85c = '' if exists (select c85c from #cd8) begin if exists (select c85c from #cd8 where lower(c85c) not in ('r.transaction_id', 'text_query_plan', 'wait_time', 's.reads', 'query_profiles_read_ahead_count', 'r.transaction_isolation_level', 'statement_context_id', 'r.query_memory_grants_granted_memory_kb', 's.original_login_name', 's.arithabort', 'original_login_name', 'waiting_tasks_wait_types', 'r.ansi_warnings', 'r.concat_null_yields_null', 'r.input_buffer_checksum', 'r.is_dead_locked', 'statement_end_offset', 'input_buffer_valid_flag', 's.deadlock_priority', 's.total_scheduled_time', 'r.text', 'last_write', 'writes', 'net_packet_size', 'r.input_buffer_valid_flag', 'r.lock_owner_id', 'ansi_null_dflt_on', 'local_tcp_port', 'r.quoted_identifier', 's.group_id', 'text', 'r.task_max_tempdb_usage_kb', 's.ansi_null_dflt_on', 'endpoint_id', 'encrypt_option', 'waiting_tasks_max_wait_duration_ms', 'is_blocker', 'custom_info', 'context_info', 's.blocked_session_ids', 'r.tasks_pending_io', 'ansi_padding', 'waiting_tasks_blocking_session_ids', 'parent_connection_id', 'r.text_size', 'r.reads', 'memory_usage', 's.input_buffer_checksum', 'row_count', 'c.num_reads', 'tasks_pending_io', 'nest_level', 'num_writes', 'query_memory_grants_ideal_memory_kb', 's.authenticating_database_id', 'r.database_id', 'cpu_time', 'c.text', 'c.last_read', 'r.open_resultset_count', 'r.blocker_session_ids', 'r.trigger_stats_info', 'r.task_tempdb_usage_info', 'r.tasks_info', 'client_net_address', 'group_id', 'r.statement_sql_handle', 'r.text_query_plan_as_text', 'r.tasks_context_switches', 's.transaction_isolation_level', 'query_plan_text_checksum', 'ansi_warnings', 'input_buffer_checksum', 'c.connect_time', 'r.ansi_null_dflt_on', 'workers_info', 'database_id', 's.cpu_time', 'session_id', 's.endpoint_id', 's.quoted_identifier', 'r.head_blocker_session_ids', 'r.sql_handle', 'wait_resource_info', 'last_request_start_time', 's.waiting_tasks_valid_flag', 'session_tempdb_usage_info', 'sql_handle', 's.ansi_nulls', 's.unsuccessful_logons', 's.cursor_count', 'r.locks_info', 'endpoint_id', 's.database_id', 'date_first', 's.input_buffer_valid_flag', 'task_tempdb_usage_info', 'node_affinity', 'connection_id', 'is_user_process', 'ansi_nulls', 's.transaction_info', 'c.local_tcp_port', 'tasks_ios_per_second', 'connect_time', 'r.servername', 'r.query_plan_checksum', 's.context_info', 'cursors_info', 's.writes', 'open_resultset_count', 'waiting_tasks_info', 'query_memory_grants_wait_time_ms', 'r.query_memory_grants_requested_memory_kb', 'task_max_tempdb_usage_kb', 'language', 's.job_info', 'r.nest_level', 'language', 'head_blocker_session_ids', 'status', 'query_stats_info', 'r.query_profiles_physical_read_count', 'total_scheduled_time', 's.lock_timeout', 'r.transaction_info', 's.max_cursor_dormant_duration', 's.open_transaction_count', 'r.input_buffer', 'statement', 'protocol_type', 'c.last_write', 'protocol_version', 'session_id', 'session_id', 'r.cpu_time', 'r.command', 'ansi_null_dflt_on', 'r.cached_plans_info', 'ansi_defaults', 'plan_handle', 'lock_timeout', 'lock_owner_id', 'service_broker_info', 's.transaction_begin_time', 'full_text_query_plan', 's.locks_info', 'r.user_id', 'writes', 'query_plan', 'c.client_tcp_port', 'login_name', 'threads_info', 'tasks_info', 'c.ctime', 'r.workers_info', 'last_successful_logon', 's.program_name', 's.security_id', 'group_id', 'query_profiles_info', 's.client_interface_name', 'r.ansi_padding', 's.host_name', 'session_id', 'text_size', 'r.estimated_completion_time', 'r.ctime', 's.is_user_process', 'c.node_affinity', 's.session_tempdb_usage_info', 'procedure_stats_info', 'r.wait_type', 'total_elapsed_time', 'arithabort', 's.login_time', 'r.lock_timeout', 's.prev_error', 'original_security_id', 'deadlock_priority', 'client_version', 'locks_info', 'r.last_wait_type', 'trigger_stats_info', 'transaction_id', 'r.tasks_io_size_kb', 's.text_size', 'reads', 'text_query_plan_as_text', 'c.most_recent_sql_handle', 'quoted_identifier', 'session_max_tempdb_usage_kb', 'r.date_first', 'ctime', 'concat_null_yields_null', 'is_head_blocker', 's.cursors_info', 'last_wait_type', 'c.protocol_version', 's.last_request_end_time', 'r.custom_info', 'r.request_id', 'r.language', 'lock_count', 's.status', 'transaction_info', 'r.open_transaction_count', 'c.most_recent_session_id', 'r.query_profiles_write_page_count', 'last_unsuccessful_logon', 's.nt_domain', 'open_transaction_count', 's.language', 'percent_complete', 'transaction_begin_time', 'r.task_tempdb_usage_kb', 'statement_sql_handle', 'query_memory_grants_used_memory_kb', 'text_object_name', 's.session_max_tempdb_usage_kb', 'transaction_info', 'r.query_profiles_cpu_time_ms', 's.date_format', 'r.tasks_count', 'r.arithabort', 'transaction_isolation_level', 'r.query_plan_text_checksum', 'c.procedure_stats_info', 'transaction_log_bytes_used', 'user_id', 'r.query_profiles_read_ahead_count', 'most_recent_sql_handle', 'statement_object_name', 'r.text_query_plan', 'row_count', 'session_tempdb_usage_kb', 'r.query_memory_grants_ideal_memory_kb', 'reads', 'query_profiles_physical_read_count', 'r.query_stats_info', 'r.granted_query_memory', 's.login_name', 'c.protocol_type', 'lock_count', 's.service_broker_info', 'servername', 'client_tcp_port', 'is_dead_locked', 's.lock_owner_id', 'total_elapsed_time', 'tasks_io_size_kb', 's.custom_info', 's.last_unsuccessful_logon', 'r.plan_attributes_info', 'task_address', 'request_id', 'ansi_padding', 's.original_security_id', 's.logical_reads', 'executing_managed_code', 'query_profiles_cpu_time_ms', 'connection_id', 'login_time', 'query_memory_grants_max_used_memory_kb', 'task_tempdb_usage_kb', 'r.logical_reads', 's.is_blocker', 'num_reads', 'most_recent_session_id', 'ansi_defaults', 'context_info', 'r.statement_context_id', 'unsuccessful_logons', 's.host_process_id', 'last_request_end_time', 's.waiting_tasks_wait_types', 'sp_whopro_inputparameters', 'r.scheduler_id', 'max_cursor_dormant_duration', 's.servername', 'statement_start_offset', 'r.tasks_ios_per_second', 'deadlock_priority', 'c.text_object_name', 'wait_type', 's.client_version', 'r.query_profiles_logical_read_count', 'input_buffer_checksum', 's.ansi_defaults', 'cpu_time', 'connection_id', 'r.wait_resource_info', 'logical_reads', 'c.session_id', 'c.client_net_address', 'authenticating_database_id', 'date_format', 'full_text_query_plan_as_text', 's.row_count', 'tasks_context_switches', 'r.task_address', 'r.total_elapsed_time', 'input_buffer', 'cursor_count', 'r.query_hash', 'local_net_address', 'r.text_object_name', 'blocker_session_ids', 'prev_error', 'query_plan_hash', 'input_buffer_valid_flag', 'c.net_packet_size', 'r.connection_id', 'c.connection_id', 'r.wait_resource', 'query_memory_grants_requested_memory_kb', 'nt_user_name', 's.ansi_warnings', 'c.local_net_address', 'host_name', 'start_time', 's.transaction_log_bytes_used', 'r.wait_time', 'r.context_info', 's.transaction_log_record_count', 'connection_id', 'c.parent_connection_id', 'r.blocking_session_id', 'r.plan_handle', 'c.endpoint_id', 'c.net_transport', 'blocked_session_ids', 'r.percent_complete', 'custom_info', 'waiting_tasks_valid_flag', 'c.servername', 'r.query_memory_grants_used_memory_kb', 'r.statement', 'r.date_format', 'query_memory_grants_info', 'r.writes', 's.sp_whopro_inputparameters', 'transaction_log_record_count', 'r.query_memory_grants_info', 'security_id', 'r.prev_error', 'date_format', 'ansi_warnings', 'session_id', 'read_bytes_per_second', 's.session_tempdb_usage_kb', 'r.executing_managed_code', 'r.session_id', 'r.read_bytes_per_second', 's.date_first', 'r.query_plan_hash', 'estimated_completion_time', 'r.query_memory_grants_max_used_memory_kb', 'r.deadlock_priority', 'text_size', 'quoted_identifier', 'plan_attributes_info', 'c.trigger_stats_info', 'r.statement_object_name', 'query_hash', 'r.query_plan', 'r.threads_info', 's.lock_count', 'transaction_begin_time', 'r.query_memory_grants_wait_time_ms', 's.waiting_tasks_max_wait_duration_ms', 'arithabort', 'r.group_id', 'r.ansi_nulls', 'query_stats_info', 'c.encrypt_option', 'status', 'open_transaction_count', 'r.statement_end_offset', 'r.start_time', 'scheduler_id', 'c.num_writes', 'cached_plans_info', 'auth_scheme', 'request_id', 'c.auth_scheme', 'transaction_isolation_level', 'trigger_stats_info', 'client_interface_name', 'r.statement_start_offset', 'lock_timeout', 's.session_id', 'r.row_count', 'blocking_session_id', 'query_profiles_logical_read_count', 's.ansi_padding', 'ansi_nulls', 'r.procedure_stats_info', 'wait_resource', 's.is_head_blocker', 'net_transport', 'r.status', 's.last_request_start_time', 's.ctime', 'locks_info', 's.memory_usage', 'database_id', 'query_memory_grants_granted_memory_kb', 'command', 's.input_buffer', 'prev_error', 'session_id', 's.waiting_tasks_info', 'date_first', 's.total_elapsed_time', 'last_read', 'r.is_blocked', 's.concat_null_yields_null', 'is_blocked', 'query_plan_checksum', 'tasks_count', 'r.lock_count', 's.last_successful_logon', 'concat_null_yields_null', 'nt_domain', 'lock_owner_id', 'granted_query_memory', 's.nt_user_name', 'query_profiles_write_page_count', 'r.full_text_query_plan_as_text', 'program_name', 'r.transaction_begin_time', 'r.ansi_defaults', 'host_process_id', 's.waiting_tasks_blocking_session_ids', 'procedure_stats_info', 'r.query_profiles_info', 'r.full_text_query_plan', 'job_info', 'c.query_stats_info', 'logical_reads') and upper(c85c) not in ('QUERY_PROFILE', 'BLOCKING_DETAILED', 'PLANS', 'SQL', 'THREAD_DETAILED', 'SQL_DETAILED', 'LOCKS_DETAILED', 'CURSORS', 'NETWORK_DETAILED', 'DEFAULT', 'TRANSACTION_DETAILED', 'DETAILED', 'TRANSACTION', 'PROCESSOR_DETAILED', 'THREAD', 'PLAN', 'NETWORK', 'QUERY_PROFILES_DETAILED', 'LOCKS', 'CUSTOM_DETAILED', 'IO', 'BLOCKED', 'PLAN_ATTRIBUTE', 'PLAN_ATTRIBUTES_DETAILED', 'TASK', 'LIMITED', 'WORKERS_DETAILED', 'SESSIONS', 'REQUEST_DETAILED', 'CPU_DETAILED', 'THREADS_DETAILED', 'PLAN_ATTRIBUTES', 'WAITS_DETAILED', 'REQUEST', 'STATISTICS_DETAILED', 'LOCK_DETAILED', 'WAITS', 'WORKERS', 'TRANSACTIONS', 'CONNECTIONS', 'TRAN_DETAILED', 'INPUTPARAMETERS', 'TRANSACTIONS_DETAILED', 'TEMPDB', 'QUERY_PROFILE_DETAILED', 'LOCK', 'TRANS', 'DISK', 'TASKS_DETAILED', 'ALL', 'BLOCKED_DETAILED', 'CUSTOM', 'SESSION', 'CURSORS_DETAILED', 'WORKER', 'TRANS_DETAILED', 'IO_DETAILED', 'REQUESTS', 'STORAGE', 'QUERY_PROFILES', 'STATS', 'STORAGE_DETAILED', 'PLAN_ATTRIBUTE_DETAILED', 'WORKER_DETAILED', 'PLAN_DETAILED', 'MEMORY', 'ALLIO', 'WAIT_DETAILED', 'SQLASTEXT', 'TASK_DETAILED', 'CONNECTIONS_DETAILED', 'SESSIONS_DETAILED', 'CONNECTION_DETAILED', 'DISK_DETAILED', 'TEMPDB_DETAILED', 'CONNECTION', 'REQUESTS_DETAILED', 'CPU', 'BLOCK_DETAILED', 'BLOCKING', 'SESSION_DETAILED', 'STATISTICS', 'TASKS', 'WAIT', 'CURSOR', 'STATS_DETAILED', 'THREADS', 'CURSOR_DETAILED', 'ALLLOCKS_DETAILED', 'INPUTPARAMETER', 'MEMORY_DETAILED', 'TRAN', 'ALLLOCKS', 'PROCESSOR', 'BLOCK', 'PLANS_DETAILED')) begin set @a53 = 'Invalid option ''' + (select c85c + case row_number() over (order by c009) when count(*) over () then '''' else ''', ''' end from #cd8 where lower(c85c) not in ('s.ansi_padding', 'c.local_net_address', 'concat_null_yields_null', 'statement_sql_handle', 's.locks_info', 'r.cpu_time', 'statement_object_name', 'ansi_nulls', 's.login_time', 'encrypt_option', 'open_resultset_count', 'task_address', 's.row_count', 'logical_reads', 'r.executing_managed_code', 'statement_context_id', 'full_text_query_plan_as_text', 'transaction_begin_time', 'last_wait_type', 'r.statement_sql_handle', 'r.open_transaction_count', 's.lock_timeout', 's.status', 'local_tcp_port', 'input_buffer_valid_flag', 'transaction_isolation_level', 'trigger_stats_info', 'c.auth_scheme', 'open_transaction_count', 'r.wait_type', 'r.servername', 'c.text', 'r.tasks_context_switches', 's.transaction_log_record_count', 'task_tempdb_usage_kb', 'is_user_process', 'ansi_padding', 'net_transport', 'query_plan', 'login_time', 'r.query_memory_grants_requested_memory_kb', 'c.client_tcp_port', 'r.query_profiles_cpu_time_ms', 'blocker_session_ids', 'r.nest_level', 'query_profiles_write_page_count', 'text_query_plan', 'context_info', 'transaction_id', 's.security_id', 'r.last_wait_type', 's.service_broker_info', 's.writes', 'query_plan_text_checksum', 'r.session_id', 'session_id', 'query_profiles_read_ahead_count', 'lock_count', 's.transaction_log_bytes_used', 'date_first', 'deadlock_priority', 'original_login_name', 'procedure_stats_info', 'r.wait_resource', 'max_cursor_dormant_duration', 'c.client_net_address', 's.is_user_process', 'auth_scheme', 'ansi_warnings', 'r.text', 'r.full_text_query_plan', 's.is_head_blocker', 'row_count', 'client_version', 'wait_type', 'cursors_info', 'r.statement_start_offset', 's.original_security_id', 'r.input_buffer_valid_flag', 'statement_start_offset', 'nest_level', 's.date_format', 'session_tempdb_usage_kb', 'date_format', 's.reads', 'r.tasks_pending_io', 'is_blocker', 'r.head_blocker_session_ids', 'login_name', 'language', 'locks_info', 'estimated_completion_time', 'transaction_isolation_level', 'r.plan_attributes_info', 'logical_reads', 's.transaction_info', 'lock_timeout', 's.original_login_name', 'r.deadlock_priority', 'query_memory_grants_granted_memory_kb', 'r.transaction_info', 'query_memory_grants_max_used_memory_kb', 'total_elapsed_time', 's.max_cursor_dormant_duration', 'session_tempdb_usage_info', 's.open_transaction_count', 'node_affinity', 'user_id', 's.sp_whopro_inputparameters', 's.authenticating_database_id', 'r.is_dead_locked', 'last_request_start_time', 'cursor_count', 's.date_first', 'c.connection_id', 'r.statement_end_offset', 'r.user_id', 'granted_query_memory', 'transaction_info', 'quoted_identifier', 'r.query_stats_info', 'sp_whopro_inputparameters', 'open_transaction_count', 'r.task_tempdb_usage_info', 'query_memory_grants_used_memory_kb', 'c.parent_connection_id', 'original_security_id', 'client_interface_name', 'r.lock_timeout', 'tasks_pending_io', 'query_profiles_cpu_time_ms', 'transaction_begin_time', 'c.servername', 's.text_size', 's.program_name', 'r.lock_count', 'query_hash', 'group_id', 'security_id', 'is_dead_locked', 'lock_timeout', 'r.read_bytes_per_second', 'r.connection_id', 'r.query_profiles_logical_read_count', 'authenticating_database_id', 's.total_elapsed_time', 'last_unsuccessful_logon', 'cached_plans_info', 'r.tasks_count', 'connection_id', 'r.date_format', 'r.blocking_session_id', 'r.ctime', 'r.granted_query_memory', 's.input_buffer', 'r.query_hash', 'database_id', 'r.ansi_null_dflt_on', 'arithabort', 's.concat_null_yields_null', 'c.last_write', 'trigger_stats_info', 'r.procedure_stats_info', 'c.most_recent_sql_handle', 'transaction_info', 'last_read', 's.ansi_defaults', 's.input_buffer_checksum', 'c.ctime', 'r.context_info', 'r.statement_context_id', 'connect_time', 's.database_id', 'c.last_read', 's.session_id', 'ansi_null_dflt_on', 'ansi_defaults', 's.language', 'most_recent_session_id', 'lock_owner_id', 'context_info', 'c.trigger_stats_info', 'r.transaction_isolation_level', 'r.is_blocked', 'r.ansi_warnings', 'status', 'is_blocked', 'r.query_memory_grants_used_memory_kb', 'r.arithabort', 'ansi_padding', 'workers_info', 'r.text_object_name', 's.lock_count', 'text_object_name', 'nt_user_name', 'procedure_stats_info', 's.transaction_begin_time', 'waiting_tasks_blocking_session_ids', 'session_id', 'local_net_address', 'row_count', 'database_id', 'r.wait_time', 'custom_info', 's.context_info', 'writes', 'r.ansi_defaults', 'r.row_count', 'c.session_id', 'c.net_packet_size', 'transaction_log_record_count', 's.waiting_tasks_valid_flag', 'r.tasks_ios_per_second', 'deadlock_priority', 's.custom_info', 'r.status', 'connection_id', 'r.threads_info', 'query_plan_checksum', 'client_tcp_port', 's.arithabort', 'full_text_query_plan', 'num_writes', 'last_request_end_time', 'query_memory_grants_requested_memory_kb', 'r.prev_error', 'r.reads', 'writes', 'job_info', 'r.task_address', 'program_name', 's.lock_owner_id', 'plan_handle', 's.input_buffer_valid_flag', 'net_packet_size', 'r.statement_object_name', 's.host_name', 's.ansi_warnings', 'waiting_tasks_max_wait_duration_ms', 'c.local_tcp_port', 'r.request_id', 'r.logical_reads', 'session_id', 'service_broker_info', 'r.cached_plans_info', 'statement', 'client_net_address', 'query_plan_hash', 'date_first', 'num_reads', 'query_memory_grants_wait_time_ms', 'r.text_query_plan_as_text', 'memory_usage', 'session_max_tempdb_usage_kb', 'r.query_memory_grants_ideal_memory_kb', 'c.procedure_stats_info', 'r.query_plan_checksum', 'most_recent_sql_handle', 's.session_tempdb_usage_kb', 'last_successful_logon', 'scheduler_id', 'date_format', 'waiting_tasks_wait_types', 's.prev_error', 'r.command', 'r.transaction_id', 'input_buffer_checksum', 'tasks_io_size_kb', 'custom_info', 'waiting_tasks_info', 'lock_count', 'statement_end_offset', 'tasks_ios_per_second', 's.client_version', 's.cursors_info', 'last_write', 'query_profiles_physical_read_count', 'head_blocker_session_ids', 'r.total_elapsed_time', 'r.sql_handle', 'r.query_profiles_read_ahead_count', 'r.estimated_completion_time', 'r.ansi_nulls', 'reads', 'r.plan_handle', 'blocking_session_id', 'c.num_reads', 's.group_id', 'protocol_type', 'r.writes', 'r.query_plan_hash', 'text', 'r.concat_null_yields_null', 'cpu_time', 's.ansi_nulls', 'connection_id', 'c.protocol_type', 'host_name', 'plan_attributes_info', 'language', 'input_buffer', 'group_id', 'prev_error', 'c.node_affinity', 'r.task_tempdb_usage_kb', 'r.locks_info', 'endpoint_id', 'r.query_memory_grants_wait_time_ms', 'r.custom_info', 'task_max_tempdb_usage_kb', 's.unsuccessful_logons', 's.deadlock_priority', 'r.workers_info', 's.last_unsuccessful_logon', 'r.query_memory_grants_max_used_memory_kb', 'r.start_time', 'r.date_first', 'percent_complete', 'r.query_profiles_write_page_count', 's.ansi_null_dflt_on', 'concat_null_yields_null', 'connection_id', 'task_tempdb_usage_info', 'executing_managed_code', 'command', 's.waiting_tasks_info', 's.ctime', 'status', 'r.blocker_session_ids', 's.session_max_tempdb_usage_kb', 'session_id', 's.blocked_session_ids', 'r.open_resultset_count', 'r.lock_owner_id', 'locks_info', 'session_id', 's.memory_usage', 'c.encrypt_option', 'r.query_memory_grants_granted_memory_kb', 's.login_name', 'nt_domain', 'quoted_identifier', 's.servername', 'query_stats_info', 's.session_tempdb_usage_info', 'r.wait_resource_info', 'text_query_plan_as_text', 'r.quoted_identifier', 'threads_info', 'request_id', 's.transaction_isolation_level', 'r.tasks_info', 's.cursor_count', 'r.statement', 'unsuccessful_logons', 's.last_request_start_time', 'r.scheduler_id', 'r.language', 's.nt_domain', 's.endpoint_id', 'text_size', 'ansi_nulls', 's.last_successful_logon', 'blocked_session_ids', 'tasks_count', 'c.most_recent_session_id', 'host_process_id', 'waiting_tasks_valid_flag', 'ansi_defaults', 'query_stats_info', 'r.database_id', 's.total_scheduled_time', 's.cpu_time', 'r.full_text_query_plan_as_text', 'c.endpoint_id', 'r.tasks_io_size_kb', 's.waiting_tasks_wait_types', 'total_scheduled_time', 'request_id', 'r.text_size', 's.host_process_id', 'query_memory_grants_info', 's.nt_user_name', 'r.text_query_plan', 'servername', 'sql_handle', 'c.connect_time', 'query_profiles_logical_read_count', 's.last_request_end_time', 'query_profiles_info', 'ctime', 'prev_error', 's.client_interface_name', 's.quoted_identifier', 'query_memory_grants_ideal_memory_kb', 'r.input_buffer_checksum', 'wait_resource_info', 'reads', 'ansi_null_dflt_on', 'r.group_id', 'r.input_buffer', 'is_head_blocker', 'transaction_log_bytes_used', 'r.percent_complete', 'lock_owner_id', 'c.num_writes', 'read_bytes_per_second', 's.job_info', 'r.ansi_padding', 'wait_resource', 'c.net_transport', 'session_id', 'start_time', 'c.text_object_name', 'r.task_max_tempdb_usage_kb', 'ansi_warnings', 'tasks_context_switches', 'total_elapsed_time', 'r.query_memory_grants_info', 's.logical_reads', 'r.trigger_stats_info', 'c.protocol_version', 'parent_connection_id', 'input_buffer_checksum', 'r.transaction_begin_time', 'c.query_stats_info', 'wait_time', 'r.query_plan', 's.is_blocker', 's.waiting_tasks_blocking_session_ids', 'tasks_info', 'r.query_profiles_info', 'r.query_plan_text_checksum', 'cpu_time', 'protocol_version', 'input_buffer_valid_flag', 'endpoint_id', 'text_size', 'r.query_profiles_physical_read_count', 'arithabort', 's.waiting_tasks_max_wait_duration_ms') and upper(c85c) not in ('NETWORK_DETAILED', 'STORAGE_DETAILED', 'TRANSACTION_DETAILED', 'QUERY_PROFILE', 'REQUESTS', 'WAITS_DETAILED', 'STORAGE', 'INPUTPARAMETER', 'BLOCK', 'TASKS', 'TRANS_DETAILED', 'BLOCKING', 'IO', 'TRANSACTIONS', 'CURSORS', 'MEMORY', 'WORKER_DETAILED', 'QUERY_PROFILES', 'TRAN_DETAILED', 'PLANS', 'BLOCKED', 'WORKERS', 'IO_DETAILED', 'ALL', 'PLAN_ATTRIBUTE', 'WORKER', 'LOCKS_DETAILED', 'PROCESSOR_DETAILED', 'THREADS_DETAILED', 'WORKERS_DETAILED', 'CONNECTION', 'TEMPDB_DETAILED', 'SQL_DETAILED', 'TASK_DETAILED', 'WAITS', 'CURSORS_DETAILED', 'SESSIONS_DETAILED', 'INPUTPARAMETERS', 'STATISTICS', 'PLAN_DETAILED', 'PLAN_ATTRIBUTES_DETAILED', 'ALLIO', 'LIMITED', 'PLAN', 'CURSOR_DETAILED', 'THREADS', 'CONNECTIONS_DETAILED', 'DEFAULT', 'QUERY_PROFILE_DETAILED', 'REQUEST_DETAILED', 'SQL', 'BLOCKED_DETAILED', 'PLANS_DETAILED', 'LOCK', 'WAIT_DETAILED', 'LOCK_DETAILED', 'DETAILED', 'DISK', 'BLOCKING_DETAILED', 'BLOCK_DETAILED', 'CONNECTIONS', 'ALLLOCKS_DETAILED', 'PLAN_ATTRIBUTES', 'ALLLOCKS', 'TRANSACTIONS_DETAILED', 'CONNECTION_DETAILED', 'REQUESTS_DETAILED', 'CUSTOM', 'TASKS_DETAILED', 'CPU_DETAILED', 'WAIT', 'THREAD_DETAILED', 'CPU', 'CUSTOM_DETAILED', 'STATS', 'TEMPDB', 'SESSION_DETAILED', 'THREAD', 'DISK_DETAILED', 'NETWORK', 'CURSOR', 'MEMORY_DETAILED', 'STATISTICS_DETAILED', 'QUERY_PROFILES_DETAILED', 'PLAN_ATTRIBUTE_DETAILED', 'REQUEST', 'SESSION', 'TRANS', 'PROCESSOR', 'TRAN', 'SQLASTEXT', 'SESSIONS', 'TRANSACTION', 'LOCKS', 'STATS_DETAILED', 'TASK') order by c009 for xml path ('')) + ' for parameter @columns specified' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if exists (select c85c from #cd8 where lower(c85c) in ('text_query_plan_as_text', 'full_text_query_plan_as_text', 'r.text_query_plan_as_text', 'r.full_text_query_plan_as_text')) begin set @8e3 = 1 update #cd8 set c85c = 'text_query_plan' where lower(c85c) = 'text_query_plan_as_text' update #cd8 set c85c = 'full_text_query_plan' where lower(c85c) = 'full_text_query_plan_as_text' update #cd8 set c85c = 'r.text_query_plan' where lower(c85c) = 'r.text_query_plan_as_text' update #cd8 set c85c = 'r.full_text_query_plan' where lower(c85c) = 'r.full_text_query_plan_as_text' end end end create table #936 (c009 int identity, c010 nvarchar(max), cfe5 bit default 0) declare @4c6 nvarchar(max) declare @2d4 bit set @2d4 = 0 declare @360 bit set @360 = 0 declare @4c9 bit set @4c9 = 0 if ((exists (select c85c from #cd8 where upper(c85c) = 'DEFAULT') and not exists (select c85c from #cd8 where upper(c85c) <> 'DEFAULT')) or (not exists (select c85c from #cd8))) begin insert into #cd8 values ('SQL') insert into #cd8 values ('WAITS') insert into #cd8 values ('BLOCK') insert into #cd8 values ('STATISTICS') insert into #cd8 values ('CPU') insert into #cd8 values ('IO') insert into #cd8 values ('MEMORY') insert into #cd8 values ('LIMITED') end if (exists (select c85c from #cd8 where upper(c85c) = 'DETAILED') and not exists (select c85c from #cd8 where upper(c85c) <> 'DETAILED')) begin insert into #cd8 values ('SQL_DETAILED') insert into #cd8 values ('WAITS_DETAILED') insert into #cd8 values ('BLOCK_DETAILED') insert into #cd8 values ('LOCKS_DETAILED') insert into #cd8 values ('ALLLOCKS_DETAILED') insert into #cd8 values ('TRANSACTIONS_DETAILED') insert into #cd8 values ('PLAN_DETAILED') insert into #cd8 values ('QUERY_PROFILES_DETAILED') insert into #cd8 values ('STATISTICS_DETAILED') insert into #cd8 values ('CPU_DETAILED') insert into #cd8 values ('IO_DETAILED') insert into #cd8 values ('ALLIO') insert into #cd8 values ('TEMPDB_DETAILED') insert into #cd8 values ('MEMORY_DETAILED') insert into #cd8 values ('NETWORK_DETAILED') insert into #cd8 values ('PLAN_ATTRIBUTES_DETAILED') insert into #cd8 values ('CUSTOM_DETAILED') insert into #cd8 values ('CURSORS_DETAILED') insert into #cd8 values ('SESSIONS_DETAILED') insert into #cd8 values ('CONNECTIONS_DETAILED') insert into #cd8 values ('REQUESTS_DETAILED') insert into #cd8 values ('TASKS_DETAILED') insert into #cd8 values ('DETAILED') insert into #936 (c010) values ('c13_sp_whopro_inputparameters') end if (exists (select c85c from #cd8 where upper(c85c) = 'ALL')) begin insert into #cd8 values ('SQL_DETAILED') insert into #cd8 values ('WAITS_DETAILED') insert into #cd8 values ('BLOCK_DETAILED') insert into #cd8 values ('LOCKS_DETAILED') insert into #cd8 values ('ALLLOCKS_DETAILED') insert into #cd8 values ('TRANSACTIONS_DETAILED') insert into #cd8 values ('PLAN_DETAILED') insert into #cd8 values ('QUERY_PROFILES_DETAILED') insert into #cd8 values ('STATISTICS_DETAILED') insert into #cd8 values ('CPU_DETAILED') insert into #cd8 values ('IO_DETAILED') insert into #cd8 values ('ALLIO') insert into #cd8 values ('TEMPDB_DETAILED') insert into #cd8 values ('MEMORY_DETAILED') insert into #cd8 values ('NETWORK_DETAILED') insert into #cd8 values ('PLAN_ATTRIBUTES_DETAILED') insert into #cd8 values ('TASKS_DETAILED') insert into #cd8 values ('WORKERS_DETAILED') insert into #cd8 values ('THREADS_DETAILED') insert into #cd8 values ('CUSTOM_DETAILED') insert into #cd8 values ('CURSORS_DETAILED') insert into #cd8 values ('SESSIONS_DETAILED') insert into #cd8 values ('CONNECTIONS_DETAILED') insert into #cd8 values ('REQUESTS_DETAILED') insert into #cd8 values ('TASKS_DETAILED') insert into #cd8 values ('DETAILED') insert into #936 (c010) values ('c13_sp_whopro_inputparameters') end if (exists (select c85c from #cd8 where upper(c85c) = 'LIMITED') and not exists (select c85c from #cd8 where upper(c85c) <> 'LIMITED')) begin insert into #936 (c010) values ('c6e_login_time') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c6e_program_name') insert into #936 (c010) values ('c13_job_info') insert into #936 (c010) values ('c6e_login_name') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('cb6_status') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('c5f_most_recent_sql_handle') insert into #936 (c010) values ('input_buffer') insert into #936 (c010) values ('text_object_name') insert into #936 (c010) values ('text') insert into #936 (c010) values ('statement') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('cb6_transaction_isolation_level') end else begin declare @873 bit select @873 = case when count(*) > 0 then 1 else 0 end from #cd8 where upper(c85c) = 'DETAILED' declare c4ce cursor for select c85c from #cd8 order by c009 open c4ce fetch next from c4ce into @4c6 while (@@fetch_status = 0) begin
	if (upper(@4c6) in ('CPU', 'CPU_DETAILED', 'PROCESSOR', 'PROCESSOR_DETAILED')) begin if ((upper(@4c6) not in ('CPU_DETAILED', 'PROCESSOR_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_total_elapsed_time') end else begin insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('c0d_tasks_context_switches') insert into #936 (c010) values ('cb6_scheduler_id') insert into #936 (c010) values ('c5f_node_affinity') insert into #936 (c010) values ('c6e_cpu_time') insert into #936 (c010) values ('c6e_total_scheduled_time') insert into #936 (c010) values ('c6e_total_elapsed_time') end end
	else if (upper(@4c6) in ('IO', 'IO_DETAILED', 'DISK', 'DISK_DETAILED', 'STORAGE', 'STORAGE_DETAILED', 'ALLIO', 'ALLIO_DETAILED')) begin if ((upper(@4c6) not in ('IO_DETAILED', 'DISK_DETAILED', 'STORAGE_DETAILED', 'ALLIO_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_logical_reads') end else begin insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_writes') insert into #936 (c010) values ('c0d_tasks_pending_io') insert into #936 (c010) values ('c0d_tasks_io_size_kb') insert into #936 (c010) values ('c0d_read_bytes_per_second') insert into #936 (c010) values ('c0d_tasks_ios_per_second') insert into #936 (c010) values ('c6e_reads') insert into #936 (c010) values ('c6e_writes') insert into #936 (c010) values ('c6e_logical_reads') insert into #936 (c010) values ('cb6_row_count') insert into #936 (c010) values ('c6e_row_count') end if (upper(@4c6) in ('ALLIO', 'ALLIO_DETAILED')) begin set @4c9 = 1 end end
	else if (upper(@4c6) in ('MEMORY', 'MEMORY_DETAILED')) begin if ((upper(@4c6) not in ('MEMORY_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('c0d_query_memory_grants_granted_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_max_used_memory_kb') end else begin insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('c0d_query_memory_grants_requested_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_granted_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_used_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_max_used_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_wait_time_ms') insert into #936 (c010) values ('c0d_query_memory_grants_ideal_memory_kb')insert into #936 (c010) values ('c0d_query_memory_grants_info') end end
	else if (upper(@4c6) in ('NETWORK', 'NETWORK_DETAILED')) begin if ((upper(@4c6) not in ('NETWORK_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c5f_net_transport') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c5f_num_reads') insert into #936 (c010) values ('c5f_num_writes') end else begin insert into #936 (c010) values ('c5f_net_transport') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c5f_num_reads') insert into #936 (c010) values ('c5f_num_writes') insert into #936 (c010) values ('c5f_last_read') insert into #936 (c010) values ('c5f_last_write') insert into #936 (c010) values ('c5f_net_packet_size') insert into #936 (c010) values ('c5f_client_net_address') insert into #936 (c010) values ('c5f_connect_time') end end
	else if (upper(@4c6) in ('WAIT', 'WAIT_DETAILED', 'WAITS', 'WAITS_DETAILED')) begin if ((upper(@4c6) not in ('WAIT_DETAILED', 'WAITS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_wait_resource') insert into #936 (c010) values ('c0d_wait_resource_info') insert into #936 (c010) values ('c13_waiting_tasks_wait_types') insert into #936 (c010) values ('c13_waiting_tasks_max_wait_duration_ms') end else begin insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_wait_resource') insert into #936 (c010) values ('c0d_wait_resource_info') insert into #936 (c010) values ('c13_waiting_tasks_wait_types') insert into #936 (c010) values ('c13_waiting_tasks_max_wait_duration_ms') insert into #936 (c010) values ('c13_waiting_tasks_info') end end
	else if (upper(@4c6) in ('BLOCK', 'BLOCK_DETAILED', 'BLOCKED', 'BLOCKED_DETAILED', 'BLOCKING', 'BLOCKING_DETAILED')) begin if ((upper(@4c6) not in ('BLOCK_DETAILED', 'BLOCKED_DETAILED', 'BLOCKING_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('c13_waiting_tasks_blocking_session_ids') end else begin insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('c13_waiting_tasks_blocking_session_ids') insert into #936 (c010) values ('c13_is_blocker') insert into #936 (c010) values ('c13_is_head_blocker') insert into #936 (c010) values ('c0d_is_blocked') insert into #936 (c010) values ('c0d_is_dead_locked') insert into #936 (c010) values ('c13_blocked_session_ids') insert into #936 (c010) values ('c0d_blocker_session_ids') insert into #936 (c010) values ('c0d_head_blocker_session_ids') insert into #936 (c010) values ('c13_waiting_tasks_blocking_session_ids') insert into #936 (c010) values ('c13_waiting_tasks_info') end end
	else if (upper(@4c6) in ('LOCK', 'LOCK_DETAILED', 'LOCKS', 'LOCKS_DETAILED', 'ALLLOCKS', 'ALLLOCKS_DETAILED')) begin if ((upper(@4c6) not in ('LOCK_DETAILED', 'LOCKS_DETAILED', 'ALLLOCKS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c0d_lock_count') insert into #936 (c010) values ('c13_lock_count') insert into #936 (c010) values ('c0d_locks_info') insert into #936 (c010) values ('c13_locks_info') end else begin insert into #936 (c010) values ('c0d_lock_count') insert into #936 (c010) values ('c13_lock_count') insert into #936 (c010) values ('c0d_locks_info') insert into #936 (c010) values ('c13_locks_info') insert into #936 (c010) values ('cb6_transaction_id') insert into #936 (c010) values ('c0d_lock_owner_id') insert into #936 (c010) values ('c13_lock_owner_id') end if (upper(@4c6) in ('ALLLOCKS', 'ALLLOCKS_DETAILED')) begin insert into #936 (c010) values ('c13_waiting_tasks_blocking_session_ids') set @2d4 = 1 end end
	else if (upper(@4c6) in ('TRAN', 'TRAN_DETAILED', 'TRANS', 'TRANS_DETAILED', 'TRANSACTION', 'TRANSACTION_DETAILED', 'TRANSACTIONS', 'TRANSACTIONS_DETAILED')) begin if ((upper(@4c6) not in ('TRAN_DETAILED', 'TRANS_DETAILED', 'TRANSACTION_DETAILED', 'TRANSACTIONS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c0d_transaction_begin_time') insert into #936 (c010) values ('c13_transaction_begin_time') insert into #936 (c010) values ('c13_transaction_log_record_count') insert into #936 (c010) values ('c13_transaction_log_bytes_used') end else begin insert into #936 (c010) values ('c0d_transaction_begin_time') insert into #936 (c010) values ('c13_transaction_begin_time') insert into #936 (c010) values ('c13_transaction_log_record_count') insert into #936 (c010) values ('c13_transaction_log_bytes_used') insert into #936 (c010) values ('cb6_transaction_isolation_level') insert into #936 (c010) values ('c6e_transaction_isolation_level') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('c6e_open_transaction_count') insert into #936 (c010) values ('c0d_transaction_info') insert into #936 (c010) values ('c13_transaction_info') insert into #936 (c010) values ('cb6_transaction_id') insert into #936 (c010) values ('c0d_lock_owner_id') insert into #936 (c010) values ('c13_lock_owner_id') end end
	else if (upper(@4c6) in ('SQL', 'SQL_DETAILED')) begin if ((upper(@4c6) not in ('SQL_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('input_buffer') insert into #936 (c010) values ('c0d_input_buffer_checksum') insert into #936 (c010) values ('c13_input_buffer_checksum') insert into #936 (c010) values ('text_object_name') insert into #936 (c010) values ('text') insert into #936 (c010) values ('statement') insert into #936 (c010) values ('cb6_command') end else begin insert into #936 (c010) values ('input_buffer') insert into #936 (c010) values ('c0d_input_buffer_checksum') insert into #936 (c010) values ('c13_input_buffer_checksum') insert into #936 (c010) values ('text_object_name') insert into #936 (c010) values ('text') insert into #936 (c010) values ('statement') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('c5f_most_recent_sql_handle') insert into #936 (c010) values ('cb6_query_hash') insert into #936 (c010) values ('c0d_input_buffer_valid_flag') insert into #936 (c010) values ('c13_input_buffer_valid_flag') end end else if (upper(@4c6) in ('SQLASTEXT')) begin set @360 = 1 end
	else if (upper(@4c6) in ('PLAN', 'PLAN_DETAILED', 'PLANS', 'PLANS_DETAILED')) begin if ((upper(@4c6) not in ('PLAN_DETAILED', 'PLANS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('query_plan') insert into #936 (c010) values ('text_query_plan') end else begin insert into #936 (c010) values ('query_plan') insert into #936 (c010) values ('text_query_plan') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('cb6_query_plan_hash') end end
	else if (upper(@4c6) in ('QUERY_PROFILES', 'QUERY_PROFILES_DETAILED', 'QUERY_PROFILE', 'QUERY_PROFILE_DETAILED')) begin if ((upper(@4c6) not in ('QUERY_PROFILES_DETAILED', 'QUERY_PROFILE_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c0d_query_profiles_cpu_time_ms') insert into #936 (c010) values ('c0d_query_profiles_logical_read_count') insert into #936 (c010) values ('c0d_query_profiles_physical_read_count') insert into #936 (c010) values ('c0d_query_profiles_read_ahead_count') end else begin insert into #936 (c010) values ('c0d_query_profiles_cpu_time_ms') insert into #936 (c010) values ('c0d_query_profiles_logical_read_count') insert into #936 (c010) values ('c0d_query_profiles_physical_read_count') insert into #936 (c010) values ('c0d_query_profiles_read_ahead_count') insert into #936 (c010) values ('c0d_query_profiles_write_page_count') insert into #936 (c010) values ('c0d_query_profiles_info') end end
	else if (upper(@4c6) in ('STATS', 'STATS_DETAILED', 'STATISTICS', 'STATISTICS_DETAILED')) begin if ((upper(@4c6) not in ('STATS_DETAILED', 'STATISTICS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c0d_query_stats_info') insert into #936 (c010) values ('cc2_query_stats_info') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('cb6_database_id') end else begin insert into #936 (c010) values ('c0d_query_stats_info') insert into #936 (c010) values ('cc2_query_stats_info') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('c0d_procedure_stats_info') insert into #936 (c010) values ('cc2_procedure_stats_info') insert into #936 (c010) values ('c0d_trigger_stats_info') insert into #936 (c010) values ('cc2_trigger_stats_info') insert into #936 (c010) values ('c0d_cached_plans_info') end end
	else if (upper(@4c6) in ('TEMPDB', 'TEMPDB_DETAILED')) begin if ((upper(@4c6) not in ('TEMPDB_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c13_session_tempdb_usage_kb') insert into #936 (c010) values ('c0d_task_tempdb_usage_kb') end else begin insert into #936 (c010) values ('c13_session_tempdb_usage_kb') insert into #936 (c010) values ('c0d_task_tempdb_usage_kb') insert into #936 (c010) values ('c13_session_max_tempdb_usage_kb') insert into #936 (c010) values ('c13_session_tempdb_usage_info') insert into #936 (c010) values ('c0d_task_max_tempdb_usage_kb') insert into #936 (c010) values ('c0d_task_tempdb_usage_info') end end else if (upper(@4c6) in ('CURSOR', 'CURSOR_DETAILED', 'CURSORS', 'CURSORS_DETAILED')) begin insert into #936 (c010) values ('c13_cursor_count') insert into #936 (c010) values ('c13_max_cursor_dormant_duration') insert into #936 (c010) values ('c13_cursors_info') end
	else if (upper(@4c6) in ('TASK', 'TASK_DETAILED', 'TASKS', 'TASKS_DETAILED')) begin if ((upper(@4c6) not in ('TASK_DETAILED', 'TASKS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c0d_tasks_count') insert into #936 (c010) values ('c0d_tasks_context_switches') insert into #936 (c010) values ('c0d_tasks_pending_io') insert into #936 (c010) values ('c0d_tasks_io_size_kb') insert into #936 (c010) values ('c0d_read_bytes_per_second') insert into #936 (c010) values ('c0d_tasks_ios_per_second') end else begin insert into #936 (c010) values ('c0d_tasks_count') insert into #936 (c010) values ('c0d_tasks_context_switches') insert into #936 (c010) values ('c0d_tasks_pending_io') insert into #936 (c010) values ('c0d_tasks_io_size_kb') insert into #936 (c010) values ('c0d_read_bytes_per_second') insert into #936 (c010) values ('c0d_tasks_ios_per_second') insert into #936 (c010) values ('c0d_tasks_info') insert into #936 (c010) values ('c13_waiting_tasks_wait_types') insert into #936 (c010) values ('c13_waiting_tasks_max_wait_duration_ms') insert into #936 (c010) values ('c13_waiting_tasks_blocking_session_ids') insert into #936 (c010) values ('c13_waiting_tasks_valid_flag') insert into #936 (c010) values ('c13_waiting_tasks_info') end end else if (upper(@4c6) in ('WORKER', 'WORKER_DETAILED', 'WORKERS', 'WORKERS_DETAILED')) begin insert into #936 (c010) values ('c0d_workers_info') end else if (upper(@4c6) in ('THREAD', 'THREAD_DETAILED', 'THREADS', 'THREADS_DETAILED')) begin insert into #936 (c010) values ('c0d_threads_info') end else if (upper(@4c6) in ('SESSION', 'SESSION_DETAILED', 'SESSIONS', 'SESSIONS_DETAILED')) begin if ((upper(@4c6) not in ('SESSION_DETAILED', 'SESSIONS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c6e_login_time') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c6e_program_name') insert into #936 (c010) values ('c13_job_info') insert into #936 (c010) values ('c13_service_broker_info') insert into #936 (c010) values ('c6e_login_name') insert into #936 (c010) values ('c6e_status') insert into #936 (c010) values ('c6e_is_user_process') insert into #936 (c010) values ('c6e_transaction_isolation_level') insert into #936 (c010) values ('c6e_row_count') insert into #936 (c010) values ('c6e_group_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('c6e_open_transaction_count') end else begin insert into #936 (c010) values ('c6e_login_time') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c6e_program_name') insert into #936 (c010) values ('c13_job_info') insert into #936 (c010) values ('c13_service_broker_info') insert into #936 (c010) values ('c6e_login_name') insert into #936 (c010) values ('c6e_status') insert into #936 (c010) values ('c6e_is_user_process') insert into #936 (c010) values ('c6e_transaction_isolation_level') insert into #936 (c010) values ('c6e_row_count') insert into #936 (c010) values ('c6e_group_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('c6e_open_transaction_count') insert into #936 (c010) values ('c6e_host_process_id') insert into #936 (c010) values ('c6e_nt_domain') insert into #936 (c010) values ('c6e_nt_user_name') insert into #936 (c010) values ('c6e_context_info') insert into #936 (c010) values ('c6e_cpu_time') insert into #936 (c010) values ('c6e_total_scheduled_time') insert into #936 (c010) values ('c6e_total_elapsed_time') insert into #936 (c010) values ('c6e_reads') insert into #936 (c010) values ('c6e_writes') insert into #936 (c010) values ('c6e_logical_reads') end end else if (upper(@4c6) in ('CONNECTION', 'CONNECTION_DETAILED', 'CONNECTIONS', 'CONNECTIONS_DETAILED')) begin if ((upper(@4c6) not in ('CONNECTION_DETAILED', 'CONNECTIONS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('c5f_connect_time') insert into #936 (c010) values ('c5f_net_transport') insert into #936 (c010) values ('c5f_node_affinity') insert into #936 (c010) values ('c5f_num_reads') insert into #936 (c010) values ('c5f_num_writes') insert into #936 (c010) values ('c5f_client_net_address') insert into #936 (c010) values ('c5f_c5f_most_recent_sql_handle') end else begin insert into #936 (c010) values ('c5f_connect_time') insert into #936 (c010) values ('c5f_net_transport') insert into #936 (c010) values ('c5f_node_affinity') insert into #936 (c010) values ('c5f_num_reads') insert into #936 (c010) values ('c5f_num_writes') insert into #936 (c010) values ('c5f_client_net_address') insert into #936 (c010) values ('c5f_c5f_most_recent_sql_handle') insert into #936 (c010) values ('c5f_last_read') insert into #936 (c010) values ('c5f_last_write') insert into #936 (c010) values ('c5f_net_packet_size') end end else if (upper(@4c6) in ('REQUEST', 'REQUEST_DETAILED', 'REQUESTS', 'REQUESTS_DETAILED')) begin if ((upper(@4c6) not in ('REQUEST_DETAILED', 'REQUESTS_DETAILED')) and (@873 = 0)) begin insert into #936 (c010) values ('cb6_status') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_last_wait_type') insert into #936 (c010) values ('cb6_wait_resource') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('cb6_transaction_id') insert into #936 (c010) values ('cb6_percent_complete') insert into #936 (c010) values ('cb6_estimated_completion_time') insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('cb6_scheduler_id') insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_writes') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_transaction_isolation_level') insert into #936 (c010) values ('cb6_row_count') insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('cb6_group_id') insert into #936 (c010) values ('cb6_query_hash') insert into #936 (c010) values ('cb6_query_plan_hash') end else begin insert into #936 (c010) values ('cb6_status') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_last_wait_type') insert into #936 (c010) values ('cb6_wait_resource') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('cb6_transaction_id') insert into #936 (c010) values ('cb6_percent_complete') insert into #936 (c010) values ('cb6_estimated_completion_time') insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('cb6_scheduler_id') insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_writes') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_transaction_isolation_level') insert into #936 (c010) values ('cb6_row_count') insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('cb6_group_id') insert into #936 (c010) values ('cb6_query_hash') insert into #936 (c010) values ('cb6_query_plan_hash') insert into #936 (c010) values ('cb6_open_resultset_count') insert into #936 (c010) values ('cb6_context_info') insert into #936 (c010) values ('cb6_nest_level') insert into #936 (c010) values ('cb6_executing_managed_code') end end else if (upper(@4c6) in ('PLAN_ATTRIBUTE', 'PLAN_ATTRIBUTE_DETAILED', 'PLAN_ATTRIBUTES', 'PLAN_ATTRIBUTES_DETAILED')) begin insert into #936 (c010) values ('plan_attributes_info') end else if (upper(@4c6) in ('INPUTPARAMETER', 'INPUTPARAMETERS')) begin insert into #936 (c010) values ('c13_sp_whopro_inputparameters') end else if (upper(@4c6) in ('CUSTOM', 'CUSTOM_DETAILED')) begin insert into #936 (c010) values ('c13_custom_info') insert into #936 (c010) values ('c0d_custom_info') end else if (upper(@4c6) in ('DEFAULT')) begin insert into #936 (c010) values ('c6e_login_time') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c6e_program_name') insert into #936 (c010) values ('c13_job_info') insert into #936 (c010) values ('c6e_login_name') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('cb6_status') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('c5f_most_recent_sql_handle') insert into #936 (c010) values ('input_buffer') insert into #936 (c010) values ('text_object_name') insert into #936 (c010) values ('text')insert into #936 (c010) values ('statement') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('cb6_transaction_isolation_level') end else if (upper(@4c6) in ('LIMITED')) begin insert into #936 (c010) values ('c6e_login_time') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c6e_program_name') insert into #936 (c010) values ('c13_job_info') insert into #936 (c010) values ('c6e_login_name') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('cb6_status') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('c5f_most_recent_sql_handle') insert into #936 (c010) values ('input_buffer') insert into #936 (c010) values ('text_object_name') insert into #936 (c010) values ('text')insert into #936 (c010) values ('statement') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('cb6_transaction_isolation_level') end else if (lower(@4c6) in ('open_transaction_count', 'scheduler_id', 'client_version', 'text_object_name', 'local_tcp_port', 'node_affinity', 'tasks_io_size_kb', 'logical_reads', 'last_write', 'connection_id', 'user_id', 'cursors_info', 'connection_id', 'cursor_count', 'date_first', 'max_cursor_dormant_duration', 'query_stats_info', 'client_interface_name', 'query_plan_checksum', 'query_memory_grants_max_used_memory_kb', 'locks_info', 'ansi_warnings', 'security_id', 'group_id', 'row_count', 'prev_error', 'custom_info', 'procedure_stats_info', 'total_scheduled_time', 'query_plan', 'nt_user_name', 'connection_id', 'ansi_null_dflt_on', 'statement_object_name', 'query_memory_grants_wait_time_ms', 'trigger_stats_info', 'ansi_padding', 'protocol_version', 'most_recent_sql_handle', 'status', 'num_reads', 'cached_plans_info', 'wait_type', 'text', 'transaction_info', 'session_id', 'database_id', 'session_max_tempdb_usage_kb', 'wait_resource', 'query_hash', 'executing_managed_code', 'encrypt_option', 'nest_level', 'total_elapsed_time', 'login_time', 'context_info', 'session_tempdb_usage_info', 'last_wait_type', 'session_id', 'connection_id', 'arithabort', 'transaction_log_bytes_used', 'last_read', 'group_id', 'read_bytes_per_second', 'ansi_nulls', 'net_transport', 'parent_connection_id', 'database_id', 'text_size', 'reads', 'prev_error', 'date_format', 'query_memory_grants_info', 'lock_owner_id', 'lock_timeout', 'date_first', 'endpoint_id', 'waiting_tasks_valid_flag', 'threads_info', 'cpu_time', 'session_id', 'job_info', 'plan_handle', 'sql_handle', 'query_profiles_physical_read_count', 'waiting_tasks_wait_types', 'tasks_info', 'full_text_query_plan', 'lock_count', 'session_id', 'query_stats_info', 'plan_attributes_info', 'query_memory_grants_requested_memory_kb', 'estimated_completion_time', 'quoted_identifier', 'waiting_tasks_blocking_session_ids', 'tasks_context_switches', 'custom_info', 'lock_timeout', 'task_tempdb_usage_info', 'input_buffer_valid_flag', 'local_net_address', 'query_plan_hash', 'input_buffer_checksum', 'query_memory_grants_used_memory_kb', 'reads', 'servername', 'wait_time', 'query_plan_text_checksum', 'start_time', 'query_profiles_read_ahead_count', 'connect_time', 'task_max_tempdb_usage_kb', 'session_id', 'granted_query_memory', 'task_tempdb_usage_kb', 'waiting_tasks_max_wait_duration_ms', 'writes', 'row_count', 'query_memory_grants_granted_memory_kb', 'client_tcp_port', 'total_elapsed_time', 'date_format', 'transaction_log_record_count', 'last_request_end_time', 'wait_resource_info', 'lock_owner_id', 'num_writes', 'transaction_isolation_level', 'query_profiles_cpu_time_ms', 'ansi_null_dflt_on', 'sp_whopro_inputparameters', 'blocker_session_ids', 'trigger_stats_info', 'input_buffer', 'is_blocker', 'service_broker_info', 'ansi_defaults', 'session_tempdb_usage_kb', 'task_address', 'transaction_begin_time', 'statement_end_offset', 'input_buffer_checksum', 'deadlock_priority', 'statement_sql_handle', 'statement_context_id', 'open_transaction_count', 'percent_complete', 'last_request_start_time', 'is_head_blocker', 'host_process_id', 'is_blocked', 'arithabort', 'protocol_type', 'writes', 'lock_count', 'program_name', 'nt_domain', 'is_dead_locked', 'head_blocker_session_ids', 'text_size', 'command', 'request_id', 'concat_null_yields_null', 'ansi_nulls', 'unsuccessful_logons', 'transaction_info', 'waiting_tasks_info', 'most_recent_session_id', 'memory_usage', 'ansi_defaults', 'tasks_pending_io', 'query_memory_grants_ideal_memory_kb', 'authenticating_database_id', 'workers_info', 'tasks_count', 'concat_null_yields_null', 'query_profiles_info', 'ansi_warnings', 'procedure_stats_info', 'ctime', 'language', 'statement', 'is_user_process', 'transaction_begin_time', 'cpu_time', 'host_name', 'quoted_identifier', 'locks_info', 'original_login_name', 'tasks_ios_per_second', 'deadlock_priority', 'context_info', 'query_profiles_logical_read_count', 'endpoint_id', 'transaction_id', 'last_unsuccessful_logon', 'query_profiles_write_page_count', 'open_resultset_count', 'statement_start_offset', 'login_name', 'request_id', 'original_security_id', 'language', 'input_buffer_valid_flag', 'blocked_session_ids', 'auth_scheme', 'session_id', 'transaction_isolation_level', 'blocking_session_id', 'ansi_padding', 'status', 'text_query_plan', 'net_packet_size', 'client_net_address', 'logical_reads', 'last_successful_logon')) begin if (lower(@4c6) in ('transaction_begin_time', 'max_cursor_dormant_duration', 'waiting_tasks_valid_flag', 'lock_owner_id', 'input_buffer_valid_flag', 'session_max_tempdb_usage_kb', 'is_blocker', 'session_id', 'service_broker_info', 'input_buffer_checksum', 'job_info', 'blocked_session_ids', 'waiting_tasks_max_wait_duration_ms', 'cursor_count', 'lock_count', 'transaction_log_record_count', 'session_tempdb_usage_kb', 'waiting_tasks_info', 'waiting_tasks_blocking_session_ids', 'waiting_tasks_wait_types', 'cursors_info', 'session_tempdb_usage_info', 'transaction_info', 'custom_info', 'transaction_log_bytes_used', 'sp_whopro_inputparameters', 'is_head_blocker', 'locks_info') and lower(@4c6) not in ('session_id')) insert into #936 (c010, cfe5) values ('c13_' + lower(@4c6), 1) if (lower(@4c6) in ('procedure_stats_info', 'trigger_stats_info', 'session_id', 'query_stats_info', 'connection_id') and lower(@4c6) not in ('session_id', 'connection_id')) insert into #936 (c010, cfe5) values ('cc2_' + lower(@4c6), 1) if (lower(@4c6) in ('read_bytes_per_second', 'blocker_session_ids', 'query_profiles_read_ahead_count', 'query_memory_grants_used_memory_kb', 'procedure_stats_info', 'query_memory_grants_granted_memory_kb', 'input_buffer_checksum', 'tasks_info', 'query_profiles_physical_read_count', 'task_tempdb_usage_kb', 'trigger_stats_info', 'query_profiles_logical_read_count', 'tasks_pending_io', 'session_id', 'query_profiles_info', 'cached_plans_info', 'tasks_ios_per_second', 'query_plan_text_checksum', 'tasks_io_size_kb', 'transaction_info', 'query_profiles_cpu_time_ms', 'transaction_begin_time', 'request_id', 'query_memory_grants_requested_memory_kb', 'query_memory_grants_info', 'query_memory_grants_ideal_memory_kb', 'locks_info', 'is_dead_locked', 'wait_resource_info', 'query_memory_grants_wait_time_ms', 'task_tempdb_usage_info', 'workers_info', 'threads_info', 'query_stats_info', 'task_max_tempdb_usage_kb', 'lock_count', 'is_blocked', 'tasks_context_switches', 'head_blocker_session_ids', 'connection_id', 'query_memory_grants_max_used_memory_kb', 'query_profiles_write_page_count', 'lock_owner_id', 'custom_info', 'tasks_count', 'input_buffer_valid_flag') and lower(@4c6) not in ('session_id', 'request_id', 'connection_id')) insert into #936 (c010, cfe5) values ('c0d_' + lower(@4c6), 1) if (lower(@4c6) in ('text_size', 'logical_reads', 'ansi_nulls', 'lock_timeout', 'writes', 'last_request_end_time', 'date_first', 'session_id', 'date_format', 'last_request_start_time', 'is_user_process', 'security_id', 'concat_null_yields_null', 'ansi_defaults', 'client_version', 'client_interface_name', 'total_scheduled_time', 'nt_domain', 'original_security_id', 'cpu_time', 'login_name', 'open_transaction_count', 'unsuccessful_logons', 'host_process_id', 'last_successful_logon', 'ansi_null_dflt_on', 'total_elapsed_time', 'group_id', 'status', 'host_name', 'deadlock_priority', 'program_name', 'transaction_isolation_level', 'nt_user_name', 'original_login_name', 'database_id', 'login_time', 'ansi_padding', 'ansi_warnings', 'reads', 'authenticating_database_id', 'context_info', 'row_count', 'quoted_identifier', 'arithabort', 'language', 'memory_usage', 'endpoint_id', 'prev_error', 'last_unsuccessful_logon')) insert into #936 (c010, cfe5) values ('c6e_' + lower(@4c6), 1) if (lower(@4c6) in ('num_reads', 'most_recent_sql_handle', 'parent_connection_id', 'encrypt_option', 'protocol_version', 'net_packet_size', 'protocol_type', 'last_write', 'connection_id', 'local_tcp_port', 'most_recent_session_id', 'node_affinity', 'connect_time', 'net_transport', 'endpoint_id', 'local_net_address', 'num_writes', 'last_read', 'auth_scheme', 'client_tcp_port', 'client_net_address', 'session_id') and lower(@4c6) not in ('session_id')) insert into #936 (c010, cfe5) values ('c5f_' + lower(@4c6), 1) if (lower(@4c6) in ('prev_error', 'ansi_nulls', 'request_id', 'reads', 'deadlock_priority', 'ansi_null_dflt_on', 'connection_id', 'lock_timeout', 'statement_context_id', 'quoted_identifier', 'nest_level', 'wait_resource', 'group_id', 'session_id', 'open_resultset_count', 'logical_reads', 'scheduler_id', 'arithabort', 'sql_handle', 'executing_managed_code', 'wait_time', 'wait_type', 'date_format', 'cpu_time', 'context_info', 'estimated_completion_time', 'last_wait_type', 'command', 'ansi_defaults', 'plan_handle', 'database_id', 'row_count', 'date_first', 'writes', 'transaction_isolation_level', 'task_address', 'concat_null_yields_null', 'language', 'start_time', 'granted_query_memory', 'ansi_padding', 'percent_complete', 'query_hash', 'text_size', 'statement_sql_handle', 'user_id', 'open_transaction_count', 'transaction_id', 'status', 'total_elapsed_time', 'statement_start_offset', 'statement_end_offset', 'blocking_session_id', 'ansi_warnings', 'query_plan_hash') and lower(@4c6) not in ('session_id', 'connection_id')) insert into #936 (c010, cfe5) values ('cb6_' + lower(@4c6), 1) if (lower(@4c6) in ('input_buffer', 'text_object_name', 'text', 'statement_object_name', 'statement', 'query_plan', 'query_plan_checksum', 'text_query_plan', 'full_text_query_plan', 'plan_attributes_info')) insert into #936 (c010, cfe5) values (lower(@4c6), 1) if (lower(@4c6) in ('ctime')) begin insert into #936 (c010, cfe5) values ('c6e_ctime', 1) insert into #936 (c010, cfe5) values ('c5f_ctime', 1) insert into #936 (c010, cfe5) values ('cb6_ctime', 1) end if (lower(@4c6) in ('servername')) begin insert into #936 (c010, cfe5) values ('c6e_servername', 1) insert into #936 (c010, cfe5) values ('c5f_servername', 1) insert into #936 (c010, cfe5) values ('cb6_servername', 1) end end else if (lower(@4c6) in ('s.quoted_identifier', 's.nt_user_name', 's.logical_reads', 's.concat_null_yields_null', 's.context_info', 's.ansi_defaults', 's.row_count', 's.ansi_padding', 's.last_successful_logon', 's.ansi_warnings', 's.is_user_process', 's.last_request_start_time', 's.memory_usage', 's.client_interface_name', 's.program_name', 's.login_name', 's.unsuccessful_logons', 's.language', 's.date_first', 's.ansi_null_dflt_on', 's.total_scheduled_time', 's.status', 's.session_id', 's.last_unsuccessful_logon', 's.host_name', 's.arithabort', 's.lock_timeout', 's.database_id', 's.original_security_id', 's.cpu_time', 's.date_format', 's.login_time', 's.transaction_isolation_level', 's.deadlock_priority', 's.client_version', 's.input_buffer', 's.host_process_id', 's.original_login_name', 's.group_id', 's.total_elapsed_time', 's.security_id', 's.nt_domain', 's.endpoint_id', 's.text_size', 's.ansi_nulls', 's.ctime', 's.writes', 's.prev_error', 's.reads', 's.open_transaction_count', 's.last_request_end_time', 's.servername', 's.authenticating_database_id')) begin insert into #936 (c010, cfe5) values (replace(lower(@4c6), 's.', 'c6e_'), 1) end else if (lower(@4c6) in ('c.node_affinity', 'c.num_writes', 'c.session_id', 'c.text_object_name', 'c.net_packet_size', 'c.num_reads', 'c.client_tcp_port', 'c.local_tcp_port', 'c.most_recent_sql_handle', 'c.last_read', 'c.endpoint_id', 'c.local_net_address', 'c.servername', 'c.most_recent_session_id', 'c.auth_scheme', 'c.encrypt_option', 'c.connection_id', 'c.protocol_version', 'c.connect_time', 'c.last_write', 'c.parent_connection_id', 'c.protocol_type', 'c.text', 'c.ctime', 'c.client_net_address', 'c.net_transport')) begin insert into #936 (c010, cfe5) values (replace(lower(@4c6), 'c.', 'c5f_'), 1) end else if (lower(@4c6) in ('r.wait_type', 'r.granted_query_memory', 'r.connection_id', 'r.statement_start_offset', 'r.ansi_nulls', 'r.ctime', 'r.total_elapsed_time', 'r.query_plan_checksum', 'r.text', 'r.row_count', 'r.date_format', 'r.language', 'r.sql_handle', 'r.open_resultset_count', 'r.arithabort', 'r.scheduler_id', 'r.context_info', 'r.transaction_isolation_level', 'r.last_wait_type', 'r.text_query_plan', 'r.query_hash', 'r.statement_object_name', 'r.cpu_time', 'r.deadlock_priority', 'r.query_plan', 'r.task_address', 'r.user_id', 'r.blocking_session_id', 'r.input_buffer', 'r.ansi_padding', 'r.wait_time', 'r.ansi_defaults', 'r.open_transaction_count', 'r.ansi_null_dflt_on', 'r.command', 'r.text_object_name', 'r.prev_error', 'r.quoted_identifier', 'r.nest_level', 'r.ansi_warnings', 'r.writes', 'r.request_id', 'r.wait_resource', 'r.executing_managed_code', 'r.transaction_id', 'r.concat_null_yields_null', 'r.query_plan_hash', 'r.statement', 'r.start_time', 'r.plan_attributes_info', 'r.statement_context_id', 'r.estimated_completion_time', 'r.statement_sql_handle', 'r.date_first', 'r.statement_end_offset', 'r.database_id', 'r.servername', 'r.plan_handle', 'r.session_id', 'r.text_size', 'r.full_text_query_plan', 'r.logical_reads', 'r.lock_timeout', 'r.percent_complete', 'r.status', 'r.group_id', 'r.reads')) begin insert into #936 (c010, cfe5) values (replace(lower(@4c6), 'r.', 'cb6_'), 1) end else if (lower(@4c6) in ('s.input_buffer_checksum', 's.service_broker_info', 's.job_info', 's.transaction_begin_time', 's.session_max_tempdb_usage_kb', 's.max_cursor_dormant_duration', 's.lock_owner_id', 's.waiting_tasks_max_wait_duration_ms', 's.sp_whopro_inputparameters', 's.is_blocker', 's.lock_count', 's.blocked_session_ids', 's.session_tempdb_usage_info', 's.waiting_tasks_wait_types', 's.custom_info', 's.waiting_tasks_info', 's.session_tempdb_usage_kb', 's.waiting_tasks_valid_flag', 's.cursor_count', 's.locks_info', 's.waiting_tasks_blocking_session_ids', 's.transaction_log_record_count', 's.transaction_log_bytes_used', 's.input_buffer_valid_flag', 's.cursors_info', 's.is_head_blocker', 's.transaction_info')) begin insert into #936 (c010, cfe5) values (replace(lower(@4c6), 's.', 'c13_'), 1) end else if (lower(@4c6) in ('c.trigger_stats_info', 'c.procedure_stats_info', 'c.query_stats_info')) begin insert into #936 (c010, cfe5) values (replace(lower(@4c6), 'c.', 'cc2_'), 1) end else if (lower(@4c6) in ('r.query_memory_grants_used_memory_kb', 'r.head_blocker_session_ids', 'r.query_profiles_read_ahead_count', 'r.lock_owner_id', 'r.query_profiles_cpu_time_ms', 'r.task_tempdb_usage_info', 'r.query_memory_grants_requested_memory_kb', 'r.input_buffer_checksum', 'r.query_memory_grants_ideal_memory_kb', 'r.wait_resource_info', 'r.query_plan_text_checksum', 'r.tasks_pending_io', 'r.query_profiles_logical_read_count', 'r.cached_plans_info', 'r.procedure_stats_info', 'r.query_profiles_info', 'r.query_profiles_write_page_count', 'r.workers_info', 'r.task_max_tempdb_usage_kb', 'r.transaction_info', 'r.query_memory_grants_wait_time_ms', 'r.tasks_info', 'r.query_memory_grants_max_used_memory_kb', 'r.tasks_context_switches', 'r.query_memory_grants_info', 'r.read_bytes_per_second', 'r.transaction_begin_time', 'r.tasks_count', 'r.tasks_io_size_kb', 'r.tasks_ios_per_second', 'r.custom_info', 'r.is_blocked', 'r.locks_info', 'r.query_profiles_physical_read_count', 'r.trigger_stats_info', 'r.query_stats_info', 'r.lock_count', 'r.is_dead_locked', 'r.query_memory_grants_granted_memory_kb', 'r.input_buffer_valid_flag', 'r.threads_info', 'r.task_tempdb_usage_kb', 'r.blocker_session_ids')) begin insert into #936 (c010, cfe5) values (replace(lower(@4c6), 'r.', 'c0d_'), 1) end else if (upper(@4c6) not in ('DETAILED', 'ALL')) begin set @a53 = 'Invalid option ''' + @4c6 + ''' for parameter @columns specified' raiserror (@a53, 17, 1) set @datetime = NULL close c4ce deallocate c4ce return 1 end fetch next from c4ce into @4c6 end close c4ce deallocate c4ce end if (exists (select c010 from #936 where c010 in ('c6e_ctime', 'c5f_ctime', 'cb6_ctime')) and @e82 = 0 and @datetime is NULL) begin set @a53 = 'Invalid option ''ctime'' for parameter @columns specified, invalid without @sessions option ''SAVE'' or @datetime is NULL.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if (exists (select c010 from #936 where c010 in ('c6e_servername', 'c5f_servername', 'cb6_servername')) and @e82 = 0 and @datetime is NULL) begin set @a53 = 'Invalid option ''servername'' for parameter @columns specified, invalid without @sessions option ''SAVE'' or @datetime is NULL.' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if exists (select c85c from #cd8 where upper(c85c) = 'ALL') begin insert into #936 (c010) values ('c13_job_info') insert into #936 (c010) values ('c13_is_blocker') insert into #936 (c010) values ('c13_is_head_blocker') insert into #936 (c010) values ('c13_blocked_session_ids') insert into #936 (c010) values ('c13_input_buffer_checksum') insert into #936 (c010) values ('c13_input_buffer_valid_flag') insert into #936 (c010) values ('c13_lock_count') insert into #936 (c010) values ('c13_lock_owner_id') insert into #936 (c010) values ('c13_locks_info') insert into #936 (c010) values ('c13_transaction_begin_time') insert into #936 (c010) values ('c13_transaction_log_record_count') insert into #936 (c010) values ('c13_transaction_log_bytes_used') insert into #936 (c010) values ('c13_transaction_info') insert into #936 (c010) values ('c13_session_tempdb_usage_kb') insert into #936 (c010) values ('c13_session_max_tempdb_usage_kb') insert into #936 (c010) values ('c13_session_tempdb_usage_info') insert into #936 (c010) values ('c13_cursor_count') insert into #936 (c010) values ('c13_max_cursor_dormant_duration') insert into #936 (c010) values ('c13_cursors_info') insert into #936 (c010) values ('c13_waiting_tasks_wait_types') insert into #936 (c010) values ('c13_waiting_tasks_max_wait_duration_ms') insert into #936 (c010) values ('c13_waiting_tasks_blocking_session_ids') insert into #936 (c010) values ('c13_waiting_tasks_valid_flag') insert into #936 (c010) values ('c13_waiting_tasks_info') insert into #936 (c010) values ('c13_service_broker_info') insert into #936 (c010) values ('c13_sp_whopro_inputparameters') insert into #936 (c010) values ('c13_custom_info') insert into #936 (c010) values ('cc2_query_stats_info') insert into #936 (c010) values ('cc2_procedure_stats_info') insert into #936 (c010) values ('cc2_trigger_stats_info') insert into #936 (c010) values ('c0d_is_blocked') insert into #936 (c010) values ('c0d_is_dead_locked') insert into #936 (c010) values ('c0d_blocker_session_ids') insert into #936 (c010) values ('c0d_head_blocker_session_ids') insert into #936 (c010) values ('c0d_input_buffer_checksum') insert into #936 (c010) values ('c0d_input_buffer_valid_flag') insert into #936 (c010) values ('c0d_wait_resource_info') insert into #936 (c010) values ('c0d_lock_count') insert into #936 (c010) values ('c0d_lock_owner_id') insert into #936 (c010) values ('c0d_locks_info') insert into #936 (c010) values ('c0d_transaction_begin_time') insert into #936 (c010) values ('c0d_transaction_info') insert into #936 (c010) values ('c0d_task_tempdb_usage_kb') insert into #936 (c010) values ('c0d_task_max_tempdb_usage_kb') insert into #936 (c010) values ('c0d_task_tempdb_usage_info') insert into #936 (c010) values ('c0d_query_memory_grants_requested_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_granted_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_used_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_max_used_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_wait_time_ms') insert into #936 (c010) values ('c0d_query_memory_grants_ideal_memory_kb') insert into #936 (c010) values ('c0d_query_memory_grants_info') insert into #936 (c010) values ('c0d_query_profiles_cpu_time_ms') insert into #936 (c010) values ('c0d_query_profiles_logical_read_count') insert into #936 (c010) values ('c0d_query_profiles_physical_read_count') insert into #936 (c010) values ('c0d_query_profiles_read_ahead_count') insert into #936 (c010) values ('c0d_query_profiles_write_page_count') insert into #936 (c010) values ('c0d_query_profiles_info') insert into #936 (c010) values ('c0d_query_stats_info') insert into #936 (c010) values ('c0d_procedure_stats_info') insert into #936 (c010) values ('c0d_trigger_stats_info') insert into #936 (c010) values ('c0d_cached_plans_info') insert into #936 (c010) values ('c0d_tasks_count') insert into #936 (c010) values ('c0d_tasks_context_switches') insert into #936 (c010) values ('c0d_tasks_pending_io') insert into #936 (c010) values ('c0d_tasks_io_size_kb') insert into #936 (c010) values ('c0d_read_bytes_per_second') insert into #936 (c010) values ('c0d_tasks_ios_per_second') insert into #936 (c010) values ('c0d_tasks_info') insert into #936 (c010) values ('c0d_workers_info') insert into #936 (c010) values ('c0d_threads_info') insert into #936 (c010) values ('c0d_custom_info') insert into #936 (c010) values ('c6e_login_time') insert into #936 (c010) values ('c6e_host_name') insert into #936 (c010) values ('c6e_program_name') insert into #936 (c010) values ('c6e_host_process_id') insert into #936 (c010) values ('c6e_client_version') insert into #936 (c010) values ('c6e_client_interface_name') insert into #936 (c010) values ('c6e_security_id') insert into #936 (c010) values ('c6e_login_name') insert into #936 (c010) values ('c6e_nt_domain') insert into #936 (c010) values ('c6e_nt_user_name') insert into #936 (c010) values ('c6e_status') insert into #936 (c010) values ('c6e_context_info') insert into #936 (c010) values ('c6e_cpu_time') insert into #936 (c010) values ('c6e_memory_usage') insert into #936 (c010) values ('c6e_total_scheduled_time') insert into #936 (c010) values ('c6e_total_elapsed_time') insert into #936 (c010) values ('c6e_endpoint_id') insert into #936 (c010) values ('c6e_last_request_start_time') insert into #936 (c010) values ('c6e_last_request_end_time') insert into #936 (c010) values ('c6e_reads') insert into #936 (c010) values ('c6e_writes') insert into #936 (c010) values ('c6e_logical_reads') insert into #936 (c010) values ('c6e_is_user_process') insert into #936 (c010) values ('c6e_text_size') insert into #936 (c010) values ('c6e_language') insert into #936 (c010) values ('c6e_date_format') insert into #936 (c010) values ('c6e_date_first') insert into #936 (c010) values ('c6e_quoted_identifier') insert into #936 (c010) values ('c6e_arithabort') insert into #936 (c010) values ('c6e_ansi_null_dflt_on') insert into #936 (c010) values ('c6e_ansi_defaults') insert into #936 (c010) values ('c6e_ansi_warnings') insert into #936 (c010) values ('c6e_ansi_padding') insert into #936 (c010) values ('c6e_ansi_nulls') insert into #936 (c010) values ('c6e_concat_null_yields_null') insert into #936 (c010) values ('c6e_transaction_isolation_level') insert into #936 (c010) values ('c6e_lock_timeout') insert into #936 (c010) values ('c6e_deadlock_priority') insert into #936 (c010) values ('c6e_row_count') insert into #936 (c010) values ('c6e_prev_error') insert into #936 (c010) values ('c6e_original_security_id') insert into #936 (c010) values ('c6e_original_login_name') insert into #936 (c010) values ('c6e_last_successful_logon') insert into #936 (c010) values ('c6e_last_unsuccessful_logon') insert into #936 (c010) values ('c6e_unsuccessful_logons') insert into #936 (c010) values ('c6e_group_id') insert into #936 (c010) values ('c6e_database_id') insert into #936 (c010) values ('c6e_authenticating_database_id') insert into #936 (c010) values ('c6e_open_transaction_count') insert into #936 (c010) values ('c5f_most_recent_session_id') insert into #936 (c010) values ('c5f_connect_time') insert into #936 (c010) values ('c5f_net_transport') insert into #936 (c010) values ('c5f_protocol_type') insert into #936 (c010) values ('c5f_protocol_version') insert into #936 (c010) values ('c5f_endpoint_id') insert into #936 (c010) values ('c5f_encrypt_option') insert into #936 (c010) values ('c5f_auth_scheme') insert into #936 (c010) values ('c5f_node_affinity') insert into #936 (c010) values ('c5f_num_reads') insert into #936 (c010) values ('c5f_num_writes') insert into #936 (c010) values ('c5f_last_read') insert into #936 (c010) values ('c5f_last_write') insert into #936 (c010) values ('c5f_net_packet_size') insert into #936 (c010) values ('c5f_client_net_address') insert into #936 (c010) values ('c5f_client_tcp_port') insert into #936 (c010) values ('c5f_local_net_address') insert into #936 (c010) values ('c5f_local_tcp_port') insert into #936 (c010) values ('c5f_parent_connection_id') insert into #936 (c010) values ('c5f_most_recent_sql_handle') insert into #936 (c010) values ('cb6_start_time') insert into #936 (c010) values ('cb6_status') insert into #936 (c010) values ('cb6_command') insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_database_id') insert into #936 (c010) values ('cb6_user_id') insert into #936 (c010) values ('cb6_blocking_session_id') insert into #936 (c010) values ('cb6_wait_type') insert into #936 (c010) values ('cb6_wait_time') insert into #936 (c010) values ('cb6_last_wait_type') insert into #936 (c010) values ('cb6_wait_resource') insert into #936 (c010) values ('cb6_open_transaction_count') insert into #936 (c010) values ('cb6_open_resultset_count') insert into #936 (c010) values ('cb6_transaction_id') insert into #936 (c010) values ('cb6_context_info') insert into #936 (c010) values ('cb6_percent_complete') insert into #936 (c010) values ('cb6_estimated_completion_time') insert into #936 (c010) values ('cb6_cpu_time') insert into #936 (c010) values ('cb6_total_elapsed_time') insert into #936 (c010) values ('cb6_scheduler_id') insert into #936 (c010) values ('cb6_task_address') insert into #936 (c010) values ('cb6_reads') insert into #936 (c010) values ('cb6_writes') insert into #936 (c010) values ('cb6_logical_reads') insert into #936 (c010) values ('cb6_text_size') insert into #936 (c010) values ('cb6_language') insert into #936 (c010) values ('cb6_date_format') insert into #936 (c010) values ('cb6_date_first') insert into #936 (c010) values ('cb6_quoted_identifier') insert into #936 (c010) values ('cb6_arithabort') insert into #936 (c010) values ('cb6_ansi_null_dflt_on') insert into #936 (c010) values ('cb6_ansi_defaults') insert into #936 (c010) values ('cb6_ansi_warnings') insert into #936 (c010) values ('cb6_ansi_padding') insert into #936 (c010) values ('cb6_ansi_nulls') insert into #936 (c010) values ('cb6_concat_null_yields_null') insert into #936 (c010) values ('cb6_transaction_isolation_level') insert into #936 (c010) values ('cb6_lock_timeout') insert into #936 (c010) values ('cb6_deadlock_priority') insert into #936 (c010) values ('cb6_row_count') insert into #936 (c010) values ('cb6_prev_error') insert into #936 (c010) values ('cb6_nest_level') insert into #936 (c010) values ('cb6_granted_query_memory') insert into #936 (c010) values ('cb6_executing_managed_code') insert into #936 (c010) values ('cb6_group_id') insert into #936 (c010) values ('cb6_query_hash') insert into #936 (c010) values ('cb6_query_plan_hash') insert into #936 (c010) values ('cb6_statement_sql_handle') insert into #936 (c010) values ('cb6_statement_context_id') end delete from #936 where (c010 like 'c6e[_]%' and c010 not in ('c6e_session_id', 'c6e_login_time', 'c6e_host_name', 'c6e_program_name', 'c6e_host_process_id', 'c6e_client_version', 'c6e_client_interface_name', 'c6e_security_id', 'c6e_login_name', 'c6e_nt_domain', 'c6e_nt_user_name', 'c6e_status', 'c6e_context_info', 'c6e_cpu_time', 'c6e_memory_usage', 'c6e_total_scheduled_time', 'c6e_total_elapsed_time', 'c6e_endpoint_id', 'c6e_last_request_start_time', 'c6e_last_request_end_time', 'c6e_reads', 'c6e_writes', 'c6e_logical_reads', 'c6e_is_user_process', 'c6e_text_size', 'c6e_language', 'c6e_date_format', 'c6e_date_first', 'c6e_quoted_identifier', 'c6e_arithabort', 'c6e_ansi_null_dflt_on', 'c6e_ansi_defaults', 'c6e_ansi_warnings', 'c6e_ansi_padding', 'c6e_ansi_nulls', 'c6e_concat_null_yields_null', 'c6e_transaction_isolation_level', 'c6e_lock_timeout', 'c6e_deadlock_priority', 'c6e_row_count', 'c6e_prev_error', 'c6e_original_security_id', 'c6e_original_login_name', 'c6e_last_successful_logon', 'c6e_last_unsuccessful_logon', 'c6e_unsuccessful_logons', 'c6e_group_id', 'c6e_database_id', 'c6e_authenticating_database_id', 'c6e_open_transaction_count', 'c6e_ctime', 'c6e_servername', 'c6e_input_buffer')) delete from #936 where (c010 like 'c5f[_]%' and c010 not in ('c5f_session_id', 'c5f_most_recent_session_id', 'c5f_connect_time', 'c5f_net_transport', 'c5f_protocol_type', 'c5f_protocol_version', 'c5f_endpoint_id', 'c5f_encrypt_option', 'c5f_auth_scheme', 'c5f_node_affinity', 'c5f_num_reads', 'c5f_num_writes', 'c5f_last_read', 'c5f_last_write', 'c5f_net_packet_size', 'c5f_client_net_address', 'c5f_client_tcp_port', 'c5f_local_net_address', 'c5f_local_tcp_port', 'c5f_connection_id', 'c5f_parent_connection_id', 'c5f_most_recent_sql_handle', 'c5f_ctime', 'c5f_servername', 'c5f_text_object_name', 'c5f_text')) delete from #936 where (c010 like 'cb6[_]%' and c010 not in ('cb6_session_id', 'cb6_request_id', 'cb6_start_time', 'cb6_status', 'cb6_command', 'cb6_sql_handle', 'cb6_statement_start_offset', 'cb6_statement_end_offset', 'cb6_plan_handle', 'cb6_database_id', 'cb6_user_id', 'cb6_connection_id', 'cb6_blocking_session_id', 'cb6_wait_type', 'cb6_wait_time', 'cb6_last_wait_type', 'cb6_wait_resource', 'cb6_open_transaction_count', 'cb6_open_resultset_count', 'cb6_transaction_id', 'cb6_context_info', 'cb6_percent_complete', 'cb6_estimated_completion_time', 'cb6_cpu_time', 'cb6_total_elapsed_time', 'cb6_scheduler_id', 'cb6_task_address', 'cb6_reads', 'cb6_writes', 'cb6_logical_reads', 'cb6_text_size', 'cb6_language', 'cb6_date_format', 'cb6_date_first', 'cb6_quoted_identifier', 'cb6_arithabort', 'cb6_ansi_null_dflt_on', 'cb6_ansi_defaults', 'cb6_ansi_warnings', 'cb6_ansi_padding', 'cb6_ansi_nulls', 'cb6_concat_null_yields_null', 'cb6_transaction_isolation_level', 'cb6_lock_timeout', 'cb6_deadlock_priority', 'cb6_row_count', 'cb6_prev_error', 'cb6_nest_level', 'cb6_granted_query_memory', 'cb6_executing_managed_code', 'cb6_group_id', 'cb6_query_hash', 'cb6_query_plan_hash', 'cb6_statement_sql_handle', 'cb6_statement_context_id', 'cb6_ctime', 'cb6_servername', 'cb6_input_buffer', 'cb6_text_object_name', 'cb6_text', 'cb6_statement_object_name', 'cb6_statement', 'cb6_query_plan', 'cb6_query_plan_checksum', 'cb6_text_query_plan', 'cb6_full_text_query_plan', 'cb6_plan_attributes_info')) if exists (select c010 from #936 where c010 in ('input_buffer')) begin if not exists (select c010 from #936 where c010 in ('c13_input_buffer_checksum')) insert into #936 (c010) values ('c13_input_buffer_checksum') if not exists (select c010 from #936 where c010 in ('c0d_input_buffer_checksum')) insert into #936 (c010) values ('c0d_input_buffer_checksum') end if exists (select c010 from #936 where c010 in ('c6e_input_buffer')) if not exists (select c010 from #936 where c010 in ('c13_input_buffer_checksum')) insert into #936 (c010) values ('c13_input_buffer_checksum') if exists (select c010 from #936 where c010 in ('cb6_input_buffer')) if not exists (select c010 from #936 where c010 in ('c0d_input_buffer_checksum')) insert into #936 (c010) values ('c0d_input_buffer_checksum') if exists (select c010 from #936 where c010 in ('query_plan_checksum', 'cb6_query_plan_checksum')) begin insert into #936 (c010) values ('c0d_query_plan_text_checksum') end if @e82 = 1 begin if exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text')) begin insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('c5f_most_recent_sql_handle') end if exists (select c010 from #936 where c010 in ('statement_object_name', 'statement', 'cb6_statement_object_name', 'cb6_statement')) begin insert into #936 (c010) values ('cb6_sql_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') end if exists (select c010 from #936 where c010 in ('query_plan', 'cb6_query_plan', 'query_plan_checksum', 'cb6_query_plan_checksum')) begin insert into #936 (c010) values ('cb6_plan_handle') end if exists (select c010 from #936 where c010 in ('text_query_plan', 'cb6_text_query_plan', 'full_text_query_plan', 'cb6_full_text_query_plan')) begin insert into #936 (c010) values ('cb6_plan_handle') insert into #936 (c010) values ('cb6_statement_start_offset') insert into #936 (c010) values ('cb6_statement_end_offset') end if exists (select c010 from #936 where c010 in ('plan_attributes_info', 'cb6_plan_attributes_info')) insert into #936 (c010) values ('cb6_plan_handle') end if exists (select c010 from #936 where c010 in ('c13_blocked_session_ids')) if not exists (select c010 from #936 where c010 in ('c13_is_blocker')) insert into #936 (c010) values ('c13_is_blocker') if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) if not exists (select c010 from #936 where c010 in ('c0d_wait_resource')) insert into #936 (c010) values ('c0d_wait_resource_info') if exists (select c010 from #936 where c010 in ('c0d_is_dead_locked', 'c0d_blocker_session_ids', 'c0d_head_blocker_session_ids')) if not exists (select c010 from #936 where c010 in ('c0d_is_blocked')) insert into #936 (c010) values ('c0d_is_blocked') if exists (select c010 from #936 where c010 in ('c13_is_head_blocker')) if not exists (select c010 from #936 where c010 in ('c0d_is_dead_locked')) insert into #936 (c010) values ('c0d_is_dead_locked') if exists (select c010 from #936 where c010 in ('c0d_head_blocker_session_ids')) if not exists (select c010 from #936 where c010 in ('c13_is_head_blocker')) insert into #936 (c010) values ('c13_is_head_blocker') select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'Parsing parameter took ' + cast(@bc7 as nvarchar(256)) + ' ms' declare @9d5 bit set @9d5 = 0 if (@datetime is not NULL) begin if (exists (select c010 from #235) or @e82 = 1 or @acb = 1) begin set @a53 = 'When @datetime is passed, @sessions has to be NULL or can only have option ''NOOUTPUT''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @9d5 = 1 end else begin select @4e4 = getdate() create table #3fb (session_id smallint, request_id int, start_time datetime, status nvarchar(30), command nvarchar(32), sql_handle varbinary(64), statement_start_offset int, statement_end_offset int, plan_handle varbinary(64), database_id smallint, user_id int, connection_id uniqueidentifier, blocking_session_id smallint, wait_type nvarchar(60), wait_time int, last_wait_type nvarchar(60), wait_resource nvarchar(256), open_transaction_count int, open_resultset_count int, transaction_id bigint, context_info varbinary(128), percent_complete real, estimated_completion_time bigint, cpu_time int, total_elapsed_time int, scheduler_id int, task_address varbinary(8), reads bigint, writes bigint, logical_reads bigint, text_size int, language nvarchar(128), date_format nvarchar(3), date_first smallint, quoted_identifier bit, arithabort bit, ansi_null_dflt_on bit, ansi_defaults bit, ansi_warnings bit, ansi_padding bit, ansi_nulls bit, concat_null_yields_null bit, transaction_isolation_level smallint, lock_timeout int, deadlock_priority int, row_count bigint, prev_error int, nest_level int, granted_query_memory int, executing_managed_code bit, group_id int, query_hash binary(8), query_plan_hash binary(8), statement_sql_handle varbinary(64), statement_context_id bigint, ctime datetime, primary key (session_id, request_id))
	if exists (select c010 from #936 where c010 in ('input_buffer', 'c6e_input_buffer', 'cb6_input_buffer', 'c13_input_buffer_checksum', 'c0d_input_buffer_checksum', 'c13_input_buffer_valid_flag', 'c0d_input_buffer_valid_flag')) begin create table #838 (checksum int, EventType nvarchar(30), Parameters smallint, EventInfo nvarchar(4000), ctime datetime, rcount smallint, primary key (checksum)) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_input_buffer'') create table [' + schema_name(@c91) + '].sqlws_input_buffer (servername nvarchar(256), checksum int, EventType nvarchar(30), Parameters smallint, EventInfo nvarchar(4000), ctime datetime, rtime datetime, rcount bigint, primary key (servername, checksum)) if not exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_input_buffer'' and c.name = ''ctime'') alter table [' + schema_name(@c91) + '].sqlws_input_buffer add ctime datetime, rtime datetime, rcount bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_input_buffer failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end create table #455 (cd6f smallint, c9be int, c3e5 int, c15a datetime, c0b7 datetime) create table #301 (c6f1 nvarchar(30), c326 smallint, cce3 nvarchar(4000)) end
	if exists (select c010 from #936 where c010 in ('cc2_trigger_stats_info', 'c0d_trigger_stats_info')) create table #9f8 (cfba int, c1c7 int, c3a7 char(2), cea2 nvarchar(60), c5a0 varbinary(64), c005 varbinary(64), ca64 datetime, ceaf datetime, c6da bigint, ca8d bigint, c59d bigint, c470 bigint, c188 bigint, c142 bigint, ceef bigint, c969 bigint, c331 bigint, c27e bigint, cecb bigint, cac0 bigint, c36f bigint, cbc9 bigint, ca81 bigint, c05d bigint, ca98 bigint, c4c5 bigint, ca22 bigint, c1f5 bigint, c8d3 bigint)
	if exists (select c010 from #936 where c010 in ('c0d_threads_info')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) create table #60b (c535 varbinary(8), cf0f bit, c3ae int, c6a4 int, ce3f varbinary(8), c176 datetime, c1f2 bigint, c454 bigint, cde2 varbinary(8), c4df varbinary(8), c5ee int, c7c7 int, c46f bigint, ca4c int, c72b int, c400 varbinary(8), cc99 int, ca09 int, c318 varbinary(8), c3e2 varbinary(8), cd90 varbinary(8), c0e5 varbinary(8), cb5d varbinary(8), cc52 varbinary(8), c94a varbinary(8), c797 smallint, c15a datetime) create table #22c (session_id int, most_recent_session_id int, connect_time datetime, net_transport nvarchar(40), protocol_type nvarchar(40), protocol_version int, endpoint_id int, encrypt_option nvarchar(40), auth_scheme nvarchar(40), node_affinity smallint, num_reads int, num_writes int, last_read datetime, last_write datetime, net_packet_size int, client_net_address varchar(48), client_tcp_port int, local_net_address varchar(48), local_tcp_port int, connection_id uniqueidentifier, parent_connection_id uniqueidentifier, most_recent_sql_handle varbinary(64), ctime datetime, primary key (session_id, connection_id))
	if exists (select c010 from #936 where c010 in ('c13_cursor_count', 'c13_max_cursor_dormant_duration', 'c13_cursors_info')) create table #807 (cd6f int, c98f int, c905 nvarchar(128), c79d nvarchar(128), c5a0 varbinary(64), c040 int, cd08 int, c154 bigint, c176 datetime, c1e6 bit, c1c7 bit, cdca bit, c874 int, c4ab int, c8c1 int, c798 int, cda9 bigint, cdc2 bigint, c7d3 bigint, cb4f bigint, ca12 varbinary(64), cf49 bigint, cd91 datetime)
	if exists (select c010 from #936 where c010 in ('c0d_query_profiles_cpu_time_ms', 'c0d_query_profiles_logical_read_count', 'c0d_query_profiles_physical_read_count', 'c0d_query_profiles_read_ahead_count', 'c0d_query_profiles_write_page_count', 'c0d_query_profiles_info')) create table #4d5 (cd6f smallint, c9be int, c5a0 varbinary(64), c005 varbinary(64), c721 nvarchar(256), c806 int, cd3a int, c848 varbinary(8), c490 bigint, c3b3 bigint, c34b bigint, cd67 bigint, c8d9 bigint, c70d bigint, cc26 bigint, c074 bigint, ce3c bigint, c63d bigint, cb21 bigint, c740 bigint, c24d bigint, cfba smallint, c1c7 int, ca0d int, c248 bigint, c3e8 bigint, cebb bigint, c053 bigint, cfcc bigint, c2a1 bigint, cef4 bigint, c6af bigint, ce73 int, c7b2 int, c15a datetime) create table #3ec (session_id smallint, job_info xml, is_blocker bit, is_head_blocker bit, blocked_session_ids nvarchar(max), input_buffer_checksum int, input_buffer_valid_flag bit, lock_count int, lock_owner_id bigint, locks_info xml, transaction_begin_time datetime, transaction_log_record_count int, transaction_log_bytes_used bigint, transaction_info xml, session_tempdb_usage_kb int, session_max_tempdb_usage_kb int, session_tempdb_usage_info xml, cursor_count int, max_cursor_dormant_duration bigint, cursors_info xml, waiting_tasks_wait_types nvarchar(max), waiting_tasks_max_wait_duration_ms bigint, waiting_tasks_blocking_session_ids nvarchar(max), waiting_tasks_valid_flag bit, waiting_tasks_info xml, service_broker_info xml, sp_whopro_inputparameters nvarchar(max), custom_info nvarchar(max), primary key (session_id))
	if exists (select c010 from #936 where c010 in ('c13_transaction_begin_time', 'c0d_transaction_begin_time', 'c13_transaction_log_record_count', 'c13_transaction_log_bytes_used', 'c13_transaction_info', 'c0d_transaction_info')) create table #4e4 (cd6f int, c010 bigint, cbbb binary(8), c0f8 int, c6c6 bit, c8ce bit, cf2e bit, cfa6 bit, c905 int, cd91 datetime)
	if exists (select c010 from #936 where c010 in ('query_plan_checksum', 'cb6_query_plan_checksum', 'c0d_query_plan_text_checksum')) begin create table #965 (checksum int, plan_handle varbinary(64), query_plan_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, query_plan xml, ctime datetime, rcount smallint, primary key (checksum)) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_query_plan_checksum'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum (servername nvarchar(256), checksum int, plan_handle varbinary(64), query_plan_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, query_plan xml, ctime datetime, rtime datetime, rcount bigint, primary key (servername, checksum)) if not exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_query_plan_checksum'' and c.name = ''ctime'') alter table [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum add ctime datetime, rtime datetime, rcount bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end
	if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_requested_memory_kb', 'c0d_query_memory_grants_granted_memory_kb', 'c0d_query_memory_grants_used_memory_kb', 'c0d_query_memory_grants_max_used_memory_kb', 'c0d_query_memory_grants_wait_time_ms', 'c0d_query_memory_grants_ideal_memory_kb', 'c0d_query_memory_grants_info')) create table #a31 (cd6f smallint, c9be int, c9f5 int, cf91 smallint, c956 datetime, c25e datetime, c40a bigint, c8d8 bigint, cdd1 bigint, cbf7 bigint, c03c bigint, cf5e float, cccd int, cab5 smallint, c0dc smallint, cff6 int, c9e2 bit, c4b8 bigint, c005 varbinary(64), c5a0 varbinary(64), c670 int, ca93 int, c154 bit, cda4 bigint, c15a datetime)
	if exists (select c010 from #936 where c010 in ('c0d_workers_info')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) create table #370 (cb5d varbinary(8), c6a4 int, c324 bit, c194 bit, c6c7 bit, c952 bit, cfe2 bit, ca9d bit, c218 bit, cde7 int, c523 int, c153 bigint, c447 int, c9b2 bigint, c168 bigint, c86b bigint, c4da bigint, c667 int, c3b1 int, c1d5 varbinary(8), c46f bigint, c80c nvarchar(60), c452 bigint, c1f6 bigint, cf03 nvarchar(60), ce79 int, c467 bigint, c107 bigint, c756 int, c9d9 int, cb6e varbinary(8), c848 varbinary(8), c50d varbinary(8), c535 varbinary(8), c9e3 varbinary(8), c0e5 varbinary(8), c797 smallint, c15a datetime)
	if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_wait_types', 'c13_waiting_tasks_max_wait_duration_ms', 'c13_waiting_tasks_blocking_session_ids', 'c13_waiting_tasks_valid_flag', 'c13_waiting_tasks_info', 'c13_lock_count', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_lock_owner_id', 'c13_locks_info', 'c0d_locks_info', 'c13_is_blocker', 'c13_is_head_blocker', 'c0d_is_blocked', 'c0d_is_dead_locked', 'c13_blocked_session_ids', 'c0d_blocker_session_ids', 'c0d_head_blocker_session_ids')) create table #560 (c50a varbinary(8), cd6f smallint, cb85 int, cdef bigint, c819 nvarchar(60), cba7 varbinary(8), c109 varbinary(8), c33d smallint, caf8 int, ca11 nvarchar(3072), c839 int, c9ae int, cf03 bigint, c001 nvarchar(max), cd91 datetime)
	if exists (select c010 from #936 where c010 in ('c13_session_tempdb_usage_kb', 'c13_session_max_tempdb_usage_kb', 'c13_session_tempdb_usage_info')) create table #3fa (cd6f smallint, cfba int, c8b9 bigint, cbb8 bigint, c559 bigint, c2ca bigint, cd3d bigint, cd91 datetime)
	if exists (select c010 from #936 where c010 in ('c13_transaction_log_record_count', 'c13_transaction_log_bytes_used', 'c13_transaction_info', 'c0d_transaction_info')) create table #43a (c010 bigint, cfba int, c590 datetime, cfc2 int, c104 int, c756 int, ca06 int, cb0a bigint, c3b4 int, c31f bigint, cc47 bigint, ce03 int, cbad int, c536 numeric(25, 0), c729 numeric(25, 0), ca44 numeric(25, 0), c6cb numeric(25, 0), c5ed numeric(25, 0), cff5 numeric(25, 0))
	if exists (select c010 from #936 where c010 in ('cc2_query_stats_info', 'c0d_query_stats_info')) create table #0c5 (c5a0 varbinary(64), c040 int, cd08 int, c154 bigint, c005 varbinary(64), c176 datetime, ceaf datetime, c6da bigint, ca8d bigint, c59d bigint, c470 bigint, c188 bigint, c142 bigint, ceef bigint, c969 bigint, c331 bigint, c27e bigint, cecb bigint, cac0 bigint, c36f bigint, cbc9 bigint, ca81 bigint, c05d bigint, ca98 bigint, cfbf bigint, cb67 bigint, c439 bigint, ccdb bigint, c4c5 bigint, ca22 bigint, c1f5 bigint, c8d3 bigint, c0cf binary(8), c118 binary(8), c2e8 bigint, c635 bigint, ccae bigint, cbd8 bigint, ca12 varbinary(64), cf49 bigint)
	if exists (select c010 from #936 where c010 in ('text_query_plan', 'cb6_text_query_plan', 'full_text_query_plan', 'cb6_full_text_query_plan')) begin create table #484 (plan_handle varbinary(64), statement_start_offset int, statement_end_offset int, text_query_plan_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, query_plan nvarchar(max), ctime datetime, rcount smallint, primary key (plan_handle, statement_start_offset, statement_end_offset)) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_text_query_plan'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan (servername nvarchar(256), plan_handle varbinary(64), statement_start_offset int, statement_end_offset int, text_query_plan_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, query_plan nvarchar(max), ctime datetime, rtime datetime, rcount bigint, primary key (servername, plan_handle, statement_start_offset, statement_end_offset)) if not exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_text_query_plan'' and c.name = ''ctime'') alter table [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan add ctime datetime, rtime datetime, rcount bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end
	if exists (select c010 from #936 where c010 in ('query_plan', 'cb6_query_plan')) begin create table #4d2 (plan_handle varbinary(64), query_plan_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, query_plan xml, ctime datetime, rcount smallint, primary key (plan_handle)) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_query_plan'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan (servername nvarchar(256), plan_handle varbinary(64), query_plan_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, query_plan xml, ctime datetime, rtime datetime, rcount bigint, primary key (servername, plan_handle)) if not exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_query_plan'' and c.name = ''ctime'') alter table [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan add ctime datetime, rtime datetime, rcount bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end create table #4d3 (session_id smallint, login_time datetime, host_name nvarchar(128), program_name nvarchar(128), host_process_id int, client_version int, client_interface_name nvarchar(32), security_id varbinary(85), login_name nvarchar(128), nt_domain nvarchar(128), nt_user_name nvarchar(128), status nvarchar(30), context_info varbinary(128), cpu_time int, memory_usage int, total_scheduled_time int, total_elapsed_time int, endpoint_id int, last_request_start_time datetime, last_request_end_time datetime, reads bigint, writes bigint, logical_reads bigint, is_user_process bit, text_size int, language nvarchar(128), date_format nvarchar(3), date_first smallint, quoted_identifier bit, arithabort bit, ansi_null_dflt_on bit, ansi_defaults bit, ansi_warnings bit, ansi_padding bit, ansi_nulls bit, concat_null_yields_null bit, transaction_isolation_level smallint, lock_timeout int, deadlock_priority int, row_count bigint, prev_error int, original_security_id varbinary(85), original_login_name nvarchar(128), last_successful_logon datetime, last_unsuccessful_logon datetime, unsuccessful_logons bigint, group_id int, database_id smallint, authenticating_database_id int, open_transaction_count int, ctime datetime, primary key (session_id))
	if exists (select c010 from #936 where c010 in ('c13_transaction_begin_time', 'c0d_transaction_begin_time', 'c13_transaction_log_record_count', 'c13_transaction_log_bytes_used', 'c13_transaction_info', 'c0d_transaction_info')) create table #715 (c010 bigint, c905 nvarchar(32), cd19 datetime, c8d0 int, cd76 uniqueidentifier, c133 int, c7dc int, cad9 int, ce6c int, c473 int, c529 int, c162 varbinary(128))
	if exists (select c010 from #936 where c010 in ('c0d_task_tempdb_usage_kb', 'c0d_task_max_tempdb_usage_kb', 'c0d_task_tempdb_usage_info')) create table #718 (c848 varbinary(8), c655 bit, cd6f smallint, c9be int, cb85 int, cfba int, c8b9 bigint, cbb8 bigint, c559 bigint, c2ca bigint, c15a datetime)
	if exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text', 'statement_object_name', 'statement', 'cb6_statement_object_name', 'cb6_statement', 'c13_cursors_info')) begin create table #d08 (sql_handle varbinary(64), sql_text_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, text nvarchar(max), ctime datetime, rcount smallint, primary key (sql_handle)) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_sql_text'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text (servername nvarchar(256), sql_handle varbinary(64), sql_text_info nvarchar(1024), dbid smallint, objectid int, number smallint, encrypted bit, text nvarchar(max), ctime datetime, rtime datetime, rcount bigint, primary key (servername, sql_handle)) if not exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sql_text'' and c.name = ''ctime'') alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text add ctime datetime, rtime datetime, rcount bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end
	if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) create table #445 (c848 varbinary(8), c894 nvarchar(60), cea3 int, c523 int, c153 bigint, c447 int, c9f5 int, cd6f smallint, cb85 int, c9be int, cb5d varbinary(8), c1ad varbinary(8), ccb0 varbinary(8), c15a datetime, ctime datetime) create table #bb0 (session_id smallint, connection_id uniqueidentifier, query_stats_info xml, procedure_stats_info xml, trigger_stats_info xml, primary key (session_id, connection_id)) create table #f6a (c6e_session_id smallint, c6e_login_time datetime, c6e_host_name nvarchar(128), c6e_program_name nvarchar(128), c6e_host_process_id int, c6e_client_version int, c6e_client_interface_name nvarchar(32), c6e_security_id varbinary(85), c6e_login_name nvarchar(128), c6e_nt_domain nvarchar(128), c6e_nt_user_name nvarchar(128), c6e_status nvarchar(30), c6e_context_info varbinary(128), c6e_cpu_time int, c6e_memory_usage int, c6e_total_scheduled_time int, c6e_total_elapsed_time int, c6e_endpoint_id int, c6e_last_request_start_time datetime, c6e_last_request_end_time datetime, c6e_reads bigint, c6e_writes bigint, c6e_logical_reads bigint, c6e_is_user_process bit, c6e_text_size int, c6e_language nvarchar(128), c6e_date_format nvarchar(3), c6e_date_first smallint, c6e_quoted_identifier bit, c6e_arithabort bit, c6e_ansi_null_dflt_on bit, c6e_ansi_defaults bit, c6e_ansi_warnings bit, c6e_ansi_padding bit, c6e_ansi_nulls bit, c6e_concat_null_yields_null bit, c6e_transaction_isolation_level smallint, c6e_lock_timeout int, c6e_deadlock_priority int, c6e_row_count bigint, c6e_prev_error int, c6e_original_security_id varbinary(85), c6e_original_login_name nvarchar(128), c6e_last_successful_logon datetime, c6e_last_unsuccessful_logon datetime, c6e_unsuccessful_logons bigint, c6e_group_id int, c6e_database_id smallint, c6e_authenticating_database_id int, c6e_open_transaction_count int, c5f_session_id int, c5f_most_recent_session_id int, c5f_connect_time datetime, c5f_net_transport nvarchar(40), c5f_protocol_type nvarchar(40), c5f_protocol_version int, c5f_endpoint_id int, c5f_encrypt_option nvarchar(40), c5f_auth_scheme nvarchar(40), c5f_node_affinity smallint, c5f_num_reads int, c5f_num_writes int, c5f_last_read datetime, c5f_last_write datetime, c5f_net_packet_size int, c5f_client_net_address varchar(48), c5f_client_tcp_port int, c5f_local_net_address varchar(48), c5f_local_tcp_port int, c5f_connection_id uniqueidentifier, c5f_parent_connection_id uniqueidentifier, c5f_most_recent_sql_handle varbinary(64), cb6_session_id smallint, cb6_request_id int, cb6_start_time datetime, cb6_status nvarchar(30), cb6_command nvarchar(32), cb6_sql_handle varbinary(64), cb6_statement_start_offset int, cb6_statement_end_offset int, cb6_plan_handle varbinary(64), cb6_database_id smallint, cb6_user_id int, cb6_connection_id uniqueidentifier, cb6_blocking_session_id smallint, cb6_wait_type nvarchar(60), cb6_wait_time int, cb6_last_wait_type nvarchar(60), cb6_wait_resource nvarchar(256), cb6_open_transaction_count int, cb6_open_resultset_count int, cb6_transaction_id bigint, cb6_context_info varbinary(128), cb6_percent_complete real, cb6_estimated_completion_time bigint, cb6_cpu_time int, cb6_total_elapsed_time int, cb6_scheduler_id int, cb6_task_address varbinary(8), cb6_reads bigint, cb6_writes bigint, cb6_logical_reads bigint, cb6_text_size int, cb6_language nvarchar(128), cb6_date_format nvarchar(3), cb6_date_first smallint, cb6_quoted_identifier bit, cb6_arithabort bit, cb6_ansi_null_dflt_on bit, cb6_ansi_defaults bit, cb6_ansi_warnings bit, cb6_ansi_padding bit, cb6_ansi_nulls bit, cb6_concat_null_yields_null bit, cb6_transaction_isolation_level smallint, cb6_lock_timeout int, cb6_deadlock_priority int, cb6_row_count bigint, cb6_prev_error int, cb6_nest_level int, cb6_granted_query_memory int, cb6_executing_managed_code bit, cb6_group_id int, cb6_query_hash binary(8), cb6_query_plan_hash binary(8), cb6_statement_sql_handle varbinary(64), cb6_statement_context_id bigint, ctime datetime)
	if exists (select c010 from #936 where c010 in ('plan_attributes_info', 'cb6_plan_attributes_info')) begin create table #f6e (plan_handle varbinary(64), sql_handle varbinary(64), plan_attributes_info xml, plan_attributes_detail nvarchar(1024), ctime datetime, rcount smallint, primary key (plan_handle)) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_plan_attributes'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes (servername nvarchar(256), plan_handle varbinary(64), sql_handle varbinary(64), plan_attributes_info xml, plan_attributes_detail nvarchar(1024), ctime datetime, rtime datetime, rcount bigint, primary key (servername, plan_handle)) if not exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_plan_attributes'' and c.name = ''ctime'') alter table [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes add ctime datetime, rtime datetime, rcount bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end
	if exists (select c010 from #936 where c010 in ('c0d_cached_plans_info')) create table #f08 (ce7c int, cc8f int, c573 int, c873 int, c50d varbinary(8), cc86 nvarchar(50), c838 nvarchar(20), c005 varbinary(64), ca93 int, c66e varbinary(64))
	if exists (select c010 from #936 where c010 in ('c13_lock_count', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_lock_owner_id', 'c13_locks_info', 'c0d_locks_info')) create table #29d (c9f7 nvarchar(60), c247 nvarchar(60), ce16 int, cdac bigint, c9ef int, cc3d nvarchar(60), c33c nvarchar(60), ccd3 nvarchar(60), c078 smallint, cf45 int, c28f int, c844 int, c93a int, c8b3 nvarchar(60), c042 bigint, c802 uniqueidentifier, c521 nvarchar(32), c881 varbinary(8), c3a9 int, cd91 datetime)
	if exists (select c010 from #936 where c010 in ('cc2_procedure_stats_info', 'c0d_procedure_stats_info')) create table #6c8 (cfba int, c1c7 int, c3a7 char(2), cea2 nvarchar(60), c5a0 varbinary(64), c005 varbinary(64), ca64 datetime, ceaf datetime, c6da bigint, ca8d bigint, c59d bigint, c470 bigint, c188 bigint, c142 bigint, ceef bigint, c969 bigint, c331 bigint, c27e bigint, cecb bigint, cac0 bigint, c36f bigint, cbc9 bigint, ca81 bigint, c05d bigint, ca98 bigint, c4c5 bigint, ca22 bigint, c1f5 bigint, c8d3 bigint) create table #8db (session_id smallint, request_id int, connection_id uniqueidentifier, is_blocked bit, is_dead_locked bit, blocker_session_ids nvarchar(max), head_blocker_session_ids nvarchar(max), input_buffer_checksum int, input_buffer_valid_flag bit, wait_resource_info nvarchar(max), lock_count int, lock_owner_id bigint, locks_info xml, transaction_begin_time datetime, transaction_info xml, task_tempdb_usage_kb int, task_max_tempdb_usage_kb int, task_tempdb_usage_info xml, query_memory_grants_requested_memory_kb bigint, query_memory_grants_granted_memory_kb bigint, query_memory_grants_used_memory_kb bigint, query_memory_grants_max_used_memory_kb bigint, query_memory_grants_wait_time_ms bigint, query_memory_grants_ideal_memory_kb bigint, query_memory_grants_info xml, query_profiles_cpu_time_ms bigint, query_profiles_logical_read_count bigint, query_profiles_physical_read_count bigint, query_profiles_read_ahead_count bigint, query_profiles_write_page_count bigint, query_profiles_info xml, query_stats_info xml, procedure_stats_info xml, trigger_stats_info xml, cached_plans_info xml, tasks_count int, tasks_context_switches int, tasks_pending_io int, tasks_io_size_kb int, read_bytes_per_second int, tasks_ios_per_second int, tasks_info xml, workers_info xml, threads_info xml, query_plan_text_checksum int, custom_info nvarchar(max), primary key (session_id, request_id))
	if exists (select c010 from #936 where c010 in ('c13_service_broker_info')) create table #3af (c10e int, cfba smallint, c0dc int, c698 nvarchar(325), c11f int, cd91 datetime) create unique index c5f_session_connection_id on #f6a (c6e_session_id, cb6_request_id) with (ignore_dup_key = on) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'Creating temporary tables took ' + cast(@bc7 as nvarchar(256)) + ' ms' declare @fe7 smallint, @795 int, @7a4 varbinary(64), @103 varbinary(64), @3dd int, @484 int, @987 int create table #841 (cd6f smallint, c9be int) create table #265 (c625 varbinary(64)) create table #203 (c0dd varbinary(64)) create table #85a (c0dd varbinary(64), c375 int, c1fa int) select @datetime = getdate() select @4e4 = getdate() if (@741 = 0)
		insert into #f6a select s.session_id as c6e_session_id, s.login_time as c6e_login_time, s.host_name as c6e_host_name, s.program_name as c6e_program_name, s.host_process_id as c6e_host_process_id, s.client_version as c6e_client_version, s.client_interface_name as c6e_client_interface_name, s.security_id as c6e_security_id, s.login_name as c6e_login_name, s.nt_domain as c6e_nt_domain, s.nt_user_name as c6e_nt_user_name, s.status as c6e_status, s.context_info as c6e_context_info, s.cpu_time as c6e_cpu_time, s.memory_usage as c6e_memory_usage, s.total_scheduled_time as c6e_total_scheduled_time, s.total_elapsed_time as c6e_total_elapsed_time, s.endpoint_id as c6e_endpoint_id, s.last_request_start_time as c6e_last_request_start_time, s.last_request_end_time as c6e_last_request_end_time, s.reads as c6e_reads, s.writes as c6e_writes, s.logical_reads as c6e_logical_reads, s.is_user_process as c6e_is_user_process, s.text_size as c6e_text_size, s.language as c6e_language, s.date_format as c6e_date_format, s.date_first as c6e_date_first, s.quoted_identifier as c6e_quoted_identifier, s.arithabort as c6e_arithabort, s.ansi_null_dflt_on as c6e_ansi_null_dflt_on, s.ansi_defaults as c6e_ansi_defaults, s.ansi_warnings as c6e_ansi_warnings, s.ansi_padding as c6e_ansi_padding, s.ansi_nulls as c6e_ansi_nulls, s.concat_null_yields_null as c6e_concat_null_yields_null, s.transaction_isolation_level as c6e_transaction_isolation_level, s.lock_timeout as c6e_lock_timeout, s.deadlock_priority as c6e_deadlock_priority, s.row_count as c6e_row_count, s.prev_error as c6e_prev_error, s.original_security_id as c6e_original_security_id, s.original_login_name as c6e_original_login_name, s.last_successful_logon as c6e_last_successful_logon, s.last_unsuccessful_logon as c6e_last_unsuccessful_logon, s.unsuccessful_logons as c6e_unsuccessful_logons, s.group_id as c6e_group_id, s.database_id as c6e_database_id, s.authenticating_database_id as c6e_authenticating_database_id, s.open_transaction_count as c6e_open_transaction_count, c.session_id as c5f_session_id, c.most_recent_session_id as c5f_most_recent_session_id, c.connect_time as c5f_connect_time, c.net_transport as c5f_net_transport, c.protocol_type as c5f_protocol_type, c.protocol_version as c5f_protocol_version, c.endpoint_id as c5f_endpoint_id, c.encrypt_option as c5f_encrypt_option, c.auth_scheme as c5f_auth_scheme, c.node_affinity as c5f_node_affinity, c.num_reads as c5f_num_reads, c.num_writes as c5f_num_writes, c.last_read as c5f_last_read, c.last_write as c5f_last_write, c.net_packet_size as c5f_net_packet_size, c.client_net_address as c5f_client_net_address, c.client_tcp_port as c5f_client_tcp_port, c.local_net_address as c5f_local_net_address, c.local_tcp_port as c5f_local_tcp_port, c.connection_id as c5f_connection_id, c.parent_connection_id as c5f_parent_connection_id, c.most_recent_sql_handle as c5f_most_recent_sql_handle, r.session_id as cb6_session_id, r.request_id as cb6_request_id, r.start_time as cb6_start_time, r.status as cb6_status, r.command as cb6_command, r.sql_handle as cb6_sql_handle, r.statement_start_offset as cb6_statement_start_offset, r.statement_end_offset as cb6_statement_end_offset, r.plan_handle as cb6_plan_handle, r.database_id as cb6_database_id, r.user_id as cb6_user_id, r.connection_id as cb6_connection_id, r.blocking_session_id as cb6_blocking_session_id, r.wait_type as cb6_wait_type, r.wait_time as cb6_wait_time, r.last_wait_type as cb6_last_wait_type, r.wait_resource as cb6_wait_resource, r.open_transaction_count as cb6_open_transaction_count, r.open_resultset_count as cb6_open_resultset_count, r.transaction_id as cb6_transaction_id, r.context_info as cb6_context_info, r.percent_complete as cb6_percent_complete, r.estimated_completion_time as cb6_estimated_completion_time, r.cpu_time as cb6_cpu_time, r.total_elapsed_time as cb6_total_elapsed_time, r.scheduler_id as cb6_scheduler_id, r.task_address as cb6_task_address, r.reads as cb6_reads, r.writes as cb6_writes, r.logical_reads as cb6_logical_reads, r.text_size as cb6_text_size, r.language as cb6_language, r.date_format as cb6_date_format, r.date_first as cb6_date_first, r.quoted_identifier as cb6_quoted_identifier, r.arithabort as cb6_arithabort, r.ansi_null_dflt_on as cb6_ansi_null_dflt_on, r.ansi_defaults as cb6_ansi_defaults, r.ansi_warnings as cb6_ansi_warnings, r.ansi_padding as cb6_ansi_padding, r.ansi_nulls as cb6_ansi_nulls, r.concat_null_yields_null as cb6_concat_null_yields_null, r.transaction_isolation_level as cb6_transaction_isolation_level, r.lock_timeout as cb6_lock_timeout, r.deadlock_priority as cb6_deadlock_priority, r.row_count as cb6_row_count, r.prev_error as cb6_prev_error, r.nest_level as cb6_nest_level, r.granted_query_memory as cb6_granted_query_memory, r.executing_managed_code as cb6_executing_managed_code, r.group_id as cb6_group_id, r.query_hash as cb6_query_hash, r.query_plan_hash as cb6_query_plan_hash, r.statement_sql_handle as cb6_statement_sql_handle, r.statement_context_id as cb6_statement_context_id, getdate()
		from sys.dm_exec_sessions s left join sys.dm_exec_connections c on (s.session_id = c.session_id) left join sys.dm_exec_requests r on ((c.session_id = r.session_id and c.connection_id = r.connection_id) or (s.session_id = r.session_id and c.session_id is NULL))
		where (@acb = 1 or (s.is_user_process = 1 and s.session_id = r.session_id and (exists (select c010 from #235 where upper(c010) in ('ACTIVE')))) or
			(s.is_user_process = 1 and (s.session_id = r.session_id or s.session_id in (select r.blocking_session_id from sys.dm_exec_requests r union select wt.blocking_session_id from sys.dm_os_waiting_tasks wt)) and ((not exists (select c010 from #235 where c010 not in ('SAVE', 'NODDL', 'NOOUTPUT'))))) or
			(s.is_user_process = 1 and r.wait_type is not NULL and exists (select c010 from #235 where upper(c010) in ('WAIT'))) or
			(s.session_id = r.session_id and (r.blocking_session_id <> 0) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKED'))) or
			(s.session_id in (select r.blocking_session_id from sys.dm_exec_requests r) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKING'))) or
			(s.session_id in (select wt.session_id from sys.dm_os_waiting_tasks wt where wt.blocking_session_id <> 0) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKED'))) or
			(s.session_id in (select wt.blocking_session_id from sys.dm_os_waiting_tasks wt) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKING'))) or
			(s.session_id in (select @@spid where exists (select c010 from #235 where upper(c010) in ('SP_WHOPRO')))) or
			(s.session_id in (select c.session_id from sys.dm_exec_cursors(NULL) c where exists (select c010 from #235 where upper(c010) in ('CURSOR'))))) and (s.session_id not in (select @@spid where not exists (select c010 from #235 where upper(c010) in ('SP_WHOPRO')))) else if (((@6706_d46 = 0) and (@9056_d46 = 0) and (@d427_d46 = 0) and (@bf25_d46 = 0) and (@193c_d46 = 0) and (@e8f8_d46 = 0) and (@619e_d46 = 0) and (@1060_d46 = 0) and (@2b7a_d46 = 0) and (@33d0_d46 = 0) and (@4907_d46 = 0) and (@9f5c_d46 = 0) and (@8cc0_d46 = 0) and (@040a_d46 = 0) and (@0103_d46 = 0) and (@e21a_d46 = 0) and (@9bef_d46 = 0) and (@b270_d46 = 0) and (@d085_d46 = 0) and (@8724_d46 = 0) and (@19b8_d46 = 0) and (@0d6f_d46 = 0) and (@fefe_d46 = 0) and (@0197_d46 = 0) and (@28ed_d46 = 0) and 1=1) and ((@9bef_4ff = 0) and (@e21a_4ff = 0) and (@8cc0_4ff = 0) and (@bf25_4ff = 0) and (@28ed_4ff = 0) and (@0103_4ff = 0) and (@619e_4ff = 0) and (@fefe_4ff = 0) and (@2b7a_4ff = 0) and (@8724_4ff = 0) and (@6706_4ff = 0) and (@d085_4ff = 0) and (@33d0_4ff = 0) and (@b270_4ff = 0) and (@9f5c_4ff = 0) and (@0d6f_4ff = 0) and (@040a_4ff = 0) and (@e8f8_4ff = 0) and 1=1)) insert into #f6a select s.session_id as c6e_session_id, s.login_time as c6e_login_time, s.host_name as c6e_host_name, s.program_name as c6e_program_name, s.host_process_id as c6e_host_process_id, s.client_version as c6e_client_version, s.client_interface_name as c6e_client_interface_name, s.security_id as c6e_security_id, s.login_name as c6e_login_name, s.nt_domain as c6e_nt_domain, s.nt_user_name as c6e_nt_user_name, s.status as c6e_status, s.context_info as c6e_context_info, s.cpu_time as c6e_cpu_time, s.memory_usage as c6e_memory_usage, s.total_scheduled_time as c6e_total_scheduled_time, s.total_elapsed_time as c6e_total_elapsed_time, s.endpoint_id as c6e_endpoint_id, s.last_request_start_time as c6e_last_request_start_time, s.last_request_end_time as c6e_last_request_end_time, s.reads as c6e_reads, s.writes as c6e_writes, s.logical_reads as c6e_logical_reads, s.is_user_process as c6e_is_user_process, s.text_size as c6e_text_size, s.language as c6e_language, s.date_format as c6e_date_format, s.date_first as c6e_date_first, s.quoted_identifier as c6e_quoted_identifier, s.arithabort as c6e_arithabort, s.ansi_null_dflt_on as c6e_ansi_null_dflt_on, s.ansi_defaults as c6e_ansi_defaults, s.ansi_warnings as c6e_ansi_warnings, s.ansi_padding as c6e_ansi_padding, s.ansi_nulls as c6e_ansi_nulls, s.concat_null_yields_null as c6e_concat_null_yields_null, s.transaction_isolation_level as c6e_transaction_isolation_level, s.lock_timeout as c6e_lock_timeout, s.deadlock_priority as c6e_deadlock_priority, s.row_count as c6e_row_count, s.prev_error as c6e_prev_error, s.original_security_id as c6e_original_security_id, s.original_login_name as c6e_original_login_name, s.last_successful_logon as c6e_last_successful_logon, s.last_unsuccessful_logon as c6e_last_unsuccessful_logon, s.unsuccessful_logons as c6e_unsuccessful_logons, s.group_id as c6e_group_id, s.database_id as c6e_database_id, s.authenticating_database_id as c6e_authenticating_database_id, s.open_transaction_count as c6e_open_transaction_count, c.session_id as c5f_session_id, c.most_recent_session_id as c5f_most_recent_session_id, c.connect_time as c5f_connect_time, c.net_transport as c5f_net_transport, c.protocol_type as c5f_protocol_type, c.protocol_version as c5f_protocol_version, c.endpoint_id as c5f_endpoint_id, c.encrypt_option as c5f_encrypt_option, c.auth_scheme as c5f_auth_scheme, c.node_affinity as c5f_node_affinity, c.num_reads as c5f_num_reads, c.num_writes as c5f_num_writes, c.last_read as c5f_last_read, c.last_write as c5f_last_write, c.net_packet_size as c5f_net_packet_size, c.client_net_address as c5f_client_net_address, c.client_tcp_port as c5f_client_tcp_port, c.local_net_address as c5f_local_net_address, c.local_tcp_port as c5f_local_tcp_port, c.connection_id as c5f_connection_id, c.parent_connection_id as c5f_parent_connection_id, c.most_recent_sql_handle as c5f_most_recent_sql_handle, r.session_id as cb6_session_id, r.request_id as cb6_request_id, r.start_time as cb6_start_time, r.status as cb6_status, r.command as cb6_command, r.sql_handle as cb6_sql_handle, r.statement_start_offset as cb6_statement_start_offset, r.statement_end_offset as cb6_statement_end_offset, r.plan_handle as cb6_plan_handle, r.database_id as cb6_database_id, r.user_id as cb6_user_id, r.connection_id as cb6_connection_id, r.blocking_session_id as cb6_blocking_session_id, r.wait_type as cb6_wait_type, r.wait_time as cb6_wait_time, r.last_wait_type as cb6_last_wait_type, r.wait_resource as cb6_wait_resource, r.open_transaction_count as cb6_open_transaction_count, r.open_resultset_count as cb6_open_resultset_count, r.transaction_id as cb6_transaction_id, r.context_info as cb6_context_info, r.percent_complete as cb6_percent_complete, r.estimated_completion_time as cb6_estimated_completion_time, r.cpu_time as cb6_cpu_time, r.total_elapsed_time as cb6_total_elapsed_time, r.scheduler_id as cb6_scheduler_id, r.task_address as cb6_task_address, r.reads as cb6_reads, r.writes as cb6_writes, r.logical_reads as cb6_logical_reads, r.text_size as cb6_text_size, r.language as cb6_language, r.date_format as cb6_date_format, r.date_first as cb6_date_first, r.quoted_identifier as cb6_quoted_identifier, r.arithabort as cb6_arithabort, r.ansi_null_dflt_on as cb6_ansi_null_dflt_on, r.ansi_defaults as cb6_ansi_defaults, r.ansi_warnings as cb6_ansi_warnings, r.ansi_padding as cb6_ansi_padding, r.ansi_nulls as cb6_ansi_nulls, r.concat_null_yields_null as cb6_concat_null_yields_null, r.transaction_isolation_level as cb6_transaction_isolation_level, r.lock_timeout as cb6_lock_timeout, r.deadlock_priority as cb6_deadlock_priority, r.row_count as cb6_row_count, r.prev_error as cb6_prev_error, r.nest_level as cb6_nest_level, r.granted_query_memory as cb6_granted_query_memory, r.executing_managed_code as cb6_executing_managed_code, r.group_id as cb6_group_id, r.query_hash as cb6_query_hash, r.query_plan_hash as cb6_query_plan_hash, r.statement_sql_handle as cb6_statement_sql_handle, r.statement_context_id as cb6_statement_context_id, getdate() from sys.dm_exec_sessions s left join sys.dm_exec_connections c on (s.session_id = c.session_id) left join sys.dm_exec_requests r on ((c.session_id = r.session_id and c.connection_id = r.connection_id) or (s.session_id = r.session_id and c.session_id is NULL)) where (@acb = 1 or (s.is_user_process = 1 and s.session_id = r.session_id and (exists (select c010 from #235 where upper(c010) in ('ACTIVE')))) or (not exists (select c010 from #235 where c010 not in ('SAVE', 'NODDL', 'NOOUTPUT'))) or (s.is_user_process = 1 and r.wait_type is not NULL and exists (select c010 from #235 where upper(c010) in ('WAIT'))) or (s.session_id = r.session_id and (blocking_session_id <> 0) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKED'))) or (s.session_id in (select r.blocking_session_id from sys.dm_exec_requests r) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKING'))) or (s.session_id in (select wt.session_id from sys.dm_os_waiting_tasks wt where wt.blocking_session_id <> 0) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKED'))) or (s.session_id in (select wt.blocking_session_id from sys.dm_os_waiting_tasks wt) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKING'))) or (s.session_id in (select @@spid where exists (select c010 from #235 where upper(c010) in ('SP_WHOPRO')))) or (s.session_id in (select c.session_id from sys.dm_exec_cursors(NULL) c where exists (select c010 from #235 where upper(c010) in ('CURSOR'))))) and (not exists (select c8438 from #a1ac_cd0 where c307 = 1) or exists (select c8438 from #a1ac_cd0 where c307 = 1 and s.is_user_process = c8438 and @a1ac_d46 = 1)) and (not exists (select cad44 from #5a0b_cd0 where c307 = 1) or exists (select cad44 from #5a0b_cd0 where c307 = 1 and r.sql_handle = cad44 and @5a0b_d46 = 1)) and (not exists (select c523f from #0cf5_cd0 where c307 = 1) or exists (select c523f from #0cf5_cd0 where c307 = 1 and r.query_hash = c523f and @0cf5_d46 = 1)) and (not exists (select c05a7 from #fba3_cd0 where c307 = 1) or exists (select c05a7 from #fba3_cd0 where c307 = 1 and s.database_id = c05a7 and @fba3_d46 = 1)) and (not exists (select ca03c from #0057_cd0 where c307 = 1) or exists (select ca03c from #0057_cd0 where c307 = 1 and r.plan_handle = ca03c and @0057_d46 = 1)) and (not exists (select c86b4 from #6a44_cd0 where c307 = 1) or exists (select c86b4 from #6a44_cd0 where c307 = 1 and r.status = c86b4 and @6a44_d46 = 1)) and (not exists (select c66ea from #d6f4_cd0 where c307 = 1) or exists (select c66ea from #d6f4_cd0 where c307 = 1 and s.session_id = c66ea and @d6f4_d46 = 1)) and (not exists (select c6af1 from #1184_cd0 where c307 = 1) or exists (select c6af1 from #1184_cd0 where c307 = 1 and r.query_plan_hash = c6af1 and @1184_d46 = 1)) and (not exists (select cb27b from #dc22_cd0 where c2e6 = '=') or exists (select cb27b from #dc22_cd0 where c2e6 = '=' and r.reads = cb27b and @dc22_1a5 = 1)) and (not exists (select cb27b from #dc22_cd0 where c2e6 = '<') or exists (select cb27b from #dc22_cd0 where c2e6 = '<' and r.reads < cb27b and @dc22_95c = 1)) and (not exists (select cb27b from #dc22_cd0 where c2e6 = '>') or exists (select cb27b from #dc22_cd0 where c2e6 = '>' and r.reads > cb27b and @dc22_e9b = 1)) and (not exists (select c960b from #7d3d_cd0 where c2e6 = '=') or exists (select c960b from #7d3d_cd0 where c2e6 = '=' and r.writes = c960b and @7d3d_1a5 = 1)) and (not exists (select c960b from #7d3d_cd0 where c2e6 = '<') or exists (select c960b from #7d3d_cd0 where c2e6 = '<' and r.writes < c960b and @7d3d_95c = 1)) and (not exists (select c960b from #7d3d_cd0 where c2e6 = '>') or exists (select c960b from #7d3d_cd0 where c2e6 = '>' and r.writes > c960b and @7d3d_e9b = 1)) and (not exists (select cf89a from #d524_cd0 where c2e6 = '=') or exists (select cf89a from #d524_cd0 where c2e6 = '=' and r.logical_reads = cf89a and @d524_1a5 = 1)) and (not exists (select cf89a from #d524_cd0 where c2e6 = '<') or exists (select cf89a from #d524_cd0 where c2e6 = '<' and r.logical_reads < cf89a and @d524_95c = 1)) and (not exists (select cf89a from #d524_cd0 where c2e6 = '>') or exists (select cf89a from #d524_cd0 where c2e6 = '>' and r.logical_reads > cf89a and @d524_e9b = 1)) and (not exists (select c5e2b from #94b4_cd0 where c2e6 = '=') or exists (select c5e2b from #94b4_cd0 where c2e6 = '=' and r.wait_time = c5e2b and @94b4_1a5 = 1)) and (not exists (select c5e2b from #94b4_cd0 where c2e6 = '<') or exists (select c5e2b from #94b4_cd0 where c2e6 = '<' and r.wait_time < c5e2b and @94b4_95c = 1)) and (not exists (select c5e2b from #94b4_cd0 where c2e6 = '>') or exists (select c5e2b from #94b4_cd0 where c2e6 = '>' and r.wait_time > c5e2b and @94b4_e9b = 1)) and (not exists (select c2ab0 from #4c51_cd0 where c2e6 = '=') or exists (select c2ab0 from #4c51_cd0 where c2e6 = '=' and r.total_elapsed_time = c2ab0 and @4c51_1a5 = 1)) and (not exists (select c2ab0 from #4c51_cd0 where c2e6 = '<') or exists (select c2ab0 from #4c51_cd0 where c2e6 = '<' and r.total_elapsed_time < c2ab0 and @4c51_95c = 1)) and (not exists (select c2ab0 from #4c51_cd0 where c2e6 = '>') or exists (select c2ab0 from #4c51_cd0 where c2e6 = '>' and r.total_elapsed_time > c2ab0 and @4c51_e9b = 1)) and (not exists (select c23d3 from #2c56_cd0 where c2e6 = '=') or exists (select c23d3 from #2c56_cd0 where c2e6 = '=' and r.cpu_time = c23d3 and @2c56_1a5 = 1)) and (not exists (select c23d3 from #2c56_cd0 where c2e6 = '<') or exists (select c23d3 from #2c56_cd0 where c2e6 = '<' and r.cpu_time < c23d3 and @2c56_95c = 1)) and (not exists (select c23d3 from #2c56_cd0 where c2e6 = '>') or exists (select c23d3 from #2c56_cd0 where c2e6 = '>' and r.cpu_time > c23d3 and @2c56_e9b = 1)) and (not exists (select cab12 from #bc60_cd0 where c307 = 1) or exists (select cab12 from #bc60_cd0 where s.program_name like cab12 and c307 = 1 and @bc60_d46 = 1)) and (not exists (select c5bb1 from #b46b_cd0 where c307 = 1) or exists (select c5bb1 from #b46b_cd0 where s.login_name like c5bb1 and c307 = 1 and @b46b_d46 = 1)) and (not exists (select c7d55 from #0209_cd0 where c307 = 1) or exists (select c7d55 from #0209_cd0 where s.host_name like c7d55 and c307 = 1 and @0209_d46 = 1)) and (not exists (select c8e79 from #8198_cd0 where c307 = 1) or exists (select c8e79 from #8198_cd0 where r.wait_type like c8e79 and c307 = 1 and @8198_d46 = 1)) and (not exists (select c32a0 from #07e1_cd0 where c307 = 1) or exists (select c32a0 from #07e1_cd0 where r.wait_resource like c32a0 and c307 = 1 and @07e1_d46 = 1)) and (not exists (select c66ea from #d6f4_cd0 where c307 = 0 and s.session_id = c66ea and @d6f4_4ff = 1)) and (not exists (select c6af1 from #1184_cd0 where c307 = 0 and r.query_plan_hash = c6af1 and @1184_4ff = 1)) and (not exists (select cad44 from #5a0b_cd0 where c307 = 0 and r.sql_handle = cad44 and @5a0b_4ff = 1)) and (not exists (select c86b4 from #6a44_cd0 where c307 = 0 and r.status = c86b4 and @6a44_4ff = 1)) and (not exists (select c05a7 from #fba3_cd0 where c307 = 0 and s.database_id = c05a7 and @fba3_4ff = 1)) and (not exists (select c523f from #0cf5_cd0 where c307 = 0 and r.query_hash = c523f and @0cf5_4ff = 1)) and (not exists (select c8438 from #a1ac_cd0 where c307 = 0 and s.is_user_process = c8438 and @a1ac_4ff = 1)) and (not exists (select ca03c from #0057_cd0 where c307 = 0 and r.plan_handle = ca03c and @0057_4ff = 1)) and (not exists (select cab12 from #bc60_cd0 where s.program_name like cab12 and c307 = 0 and @bc60_4ff = 1)) and (not exists (select c32a0 from #07e1_cd0 where r.wait_resource like c32a0 and c307 = 0 and @07e1_4ff = 1)) and (not exists (select c8e79 from #8198_cd0 where r.wait_type like c8e79 and c307 = 0 and @8198_4ff = 1)) and (not exists (select c7d55 from #0209_cd0 where s.host_name like c7d55 and c307 = 0 and @0209_4ff = 1)) and (not exists (select c5bb1 from #b46b_cd0 where s.login_name like c5bb1 and c307 = 0 and @b46b_4ff = 1)) and (s.session_id not in (select @@spid where not exists (select c010 from #235 where upper(c010) in ('SP_WHOPRO')))) else insert into #f6a select s.session_id as c6e_session_id, s.login_time as c6e_login_time, s.host_name as c6e_host_name, s.program_name as c6e_program_name, s.host_process_id as c6e_host_process_id, s.client_version as c6e_client_version, s.client_interface_name as c6e_client_interface_name, s.security_id as c6e_security_id, s.login_name as c6e_login_name, s.nt_domain as c6e_nt_domain, s.nt_user_name as c6e_nt_user_name, s.status as c6e_status, s.context_info as c6e_context_info, s.cpu_time as c6e_cpu_time, s.memory_usage as c6e_memory_usage, s.total_scheduled_time as c6e_total_scheduled_time, s.total_elapsed_time as c6e_total_elapsed_time, s.endpoint_id as c6e_endpoint_id, s.last_request_start_time as c6e_last_request_start_time, s.last_request_end_time as c6e_last_request_end_time, s.reads as c6e_reads, s.writes as c6e_writes, s.logical_reads as c6e_logical_reads, s.is_user_process as c6e_is_user_process, s.text_size as c6e_text_size, s.language as c6e_language, s.date_format as c6e_date_format, s.date_first as c6e_date_first, s.quoted_identifier as c6e_quoted_identifier, s.arithabort as c6e_arithabort, s.ansi_null_dflt_on as c6e_ansi_null_dflt_on, s.ansi_defaults as c6e_ansi_defaults, s.ansi_warnings as c6e_ansi_warnings, s.ansi_padding as c6e_ansi_padding, s.ansi_nulls as c6e_ansi_nulls, s.concat_null_yields_null as c6e_concat_null_yields_null, s.transaction_isolation_level as c6e_transaction_isolation_level, s.lock_timeout as c6e_lock_timeout, s.deadlock_priority as c6e_deadlock_priority, s.row_count as c6e_row_count, s.prev_error as c6e_prev_error, s.original_security_id as c6e_original_security_id, s.original_login_name as c6e_original_login_name, s.last_successful_logon as c6e_last_successful_logon, s.last_unsuccessful_logon as c6e_last_unsuccessful_logon, s.unsuccessful_logons as c6e_unsuccessful_logons, s.group_id as c6e_group_id, s.database_id as c6e_database_id, s.authenticating_database_id as c6e_authenticating_database_id, s.open_transaction_count as c6e_open_transaction_count, c.session_id as c5f_session_id, c.most_recent_session_id as c5f_most_recent_session_id, c.connect_time as c5f_connect_time, c.net_transport as c5f_net_transport, c.protocol_type as c5f_protocol_type, c.protocol_version as c5f_protocol_version, c.endpoint_id as c5f_endpoint_id, c.encrypt_option as c5f_encrypt_option, c.auth_scheme as c5f_auth_scheme, c.node_affinity as c5f_node_affinity, c.num_reads as c5f_num_reads, c.num_writes as c5f_num_writes, c.last_read as c5f_last_read, c.last_write as c5f_last_write, c.net_packet_size as c5f_net_packet_size, c.client_net_address as c5f_client_net_address, c.client_tcp_port as c5f_client_tcp_port, c.local_net_address as c5f_local_net_address, c.local_tcp_port as c5f_local_tcp_port, c.connection_id as c5f_connection_id, c.parent_connection_id as c5f_parent_connection_id, c.most_recent_sql_handle as c5f_most_recent_sql_handle, r.session_id as cb6_session_id, r.request_id as cb6_request_id, r.start_time as cb6_start_time, r.status as cb6_status, r.command as cb6_command, r.sql_handle as cb6_sql_handle, r.statement_start_offset as cb6_statement_start_offset, r.statement_end_offset as cb6_statement_end_offset, r.plan_handle as cb6_plan_handle, r.database_id as cb6_database_id, r.user_id as cb6_user_id, r.connection_id as cb6_connection_id, r.blocking_session_id as cb6_blocking_session_id, r.wait_type as cb6_wait_type, r.wait_time as cb6_wait_time, r.last_wait_type as cb6_last_wait_type, r.wait_resource as cb6_wait_resource, r.open_transaction_count as cb6_open_transaction_count, r.open_resultset_count as cb6_open_resultset_count, r.transaction_id as cb6_transaction_id, r.context_info as cb6_context_info, r.percent_complete as cb6_percent_complete, r.estimated_completion_time as cb6_estimated_completion_time, r.cpu_time as cb6_cpu_time, r.total_elapsed_time as cb6_total_elapsed_time, r.scheduler_id as cb6_scheduler_id, r.task_address as cb6_task_address, r.reads as cb6_reads, r.writes as cb6_writes, r.logical_reads as cb6_logical_reads, r.text_size as cb6_text_size, r.language as cb6_language, r.date_format as cb6_date_format, r.date_first as cb6_date_first, r.quoted_identifier as cb6_quoted_identifier, r.arithabort as cb6_arithabort, r.ansi_null_dflt_on as cb6_ansi_null_dflt_on, r.ansi_defaults as cb6_ansi_defaults, r.ansi_warnings as cb6_ansi_warnings, r.ansi_padding as cb6_ansi_padding, r.ansi_nulls as cb6_ansi_nulls, r.concat_null_yields_null as cb6_concat_null_yields_null, r.transaction_isolation_level as cb6_transaction_isolation_level, r.lock_timeout as cb6_lock_timeout, r.deadlock_priority as cb6_deadlock_priority, r.row_count as cb6_row_count, r.prev_error as cb6_prev_error, r.nest_level as cb6_nest_level, r.granted_query_memory as cb6_granted_query_memory, r.executing_managed_code as cb6_executing_managed_code, r.group_id as cb6_group_id, r.query_hash as cb6_query_hash, r.query_plan_hash as cb6_query_plan_hash, r.statement_sql_handle as cb6_statement_sql_handle, r.statement_context_id as cb6_statement_context_id, getdate() from sys.dm_exec_sessions s left join sys.dm_exec_connections c on (s.session_id = c.session_id) left join sys.dm_exec_requests r on ((c.session_id = r.session_id and c.connection_id = r.connection_id) or (s.session_id = r.session_id and c.session_id is NULL)) where (@acb = 1 or (s.is_user_process = 1 and s.session_id = r.session_id and (exists (select c010 from #235 where upper(c010) in ('ACTIVE')))) or (not exists (select c010 from #235 where c010 not in ('SAVE', 'NODDL', 'NOOUTPUT'))) or (s.is_user_process = 1 and r.wait_type is not NULL and exists (select c010 from #235 where upper(c010) in ('WAIT'))) or (s.session_id = r.session_id and (blocking_session_id <> 0) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKED'))) or (s.session_id in (select r.blocking_session_id from sys.dm_exec_requests r) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKING'))) or (s.session_id in (select wt.session_id from sys.dm_os_waiting_tasks wt where wt.blocking_session_id <> 0) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKED'))) or (s.session_id in (select wt.blocking_session_id from sys.dm_os_waiting_tasks wt) and exists (select c010 from #235 where upper(c010) in ('BLOCK', 'BLOCKING'))) or (s.session_id in (select @@spid where exists (select c010 from #235 where upper(c010) in ('SP_WHOPRO')))) or (s.session_id in (select c.session_id from sys.dm_exec_cursors(NULL) c where exists (select c010 from #235 where upper(c010) in ('CURSOR'))))) and (not exists (select ceb01 from #9bef_cd0 where c307 = 1) or exists (select ceb01 from #9bef_cd0 where c307 = 1 and r.request_id = ceb01 and @9bef_d46 = 1)) and (not exists (select c05a7 from #fba3_cd0 where c307 = 1) or exists (select c05a7 from #fba3_cd0 where c307 = 1 and s.database_id = c05a7 and @fba3_d46 = 1)) and (not exists (select c7407 from #619e_cd0 where c307 = 1) or exists (select c7407 from #619e_cd0 where c307 = 1 and c.node_affinity = c7407 and @619e_d46 = 1)) and (not exists (select c66ea from #d6f4_cd0 where c307 = 1) or exists (select c66ea from #d6f4_cd0 where c307 = 1 and s.session_id = c66ea and @d6f4_d46 = 1)) and (not exists (select c86b4 from #6a44_cd0 where c307 = 1) or exists (select c86b4 from #6a44_cd0 where c307 = 1 and r.status = c86b4 and @6a44_d46 = 1)) and (not exists (select c478c from #0103_cd0 where c307 = 1) or exists (select c478c from #0103_cd0 where c307 = 1 and r.transaction_id = c478c and @0103_d46 = 1)) and (not exists (select c186e from #040a_cd0 where c307 = 1) or exists (select c186e from #040a_cd0 where c307 = 1 and r.statement_start_offset = c186e and @040a_d46 = 1)) and (not exists (select ca03c from #0057_cd0 where c307 = 1) or exists (select ca03c from #0057_cd0 where c307 = 1 and r.plan_handle = ca03c and @0057_d46 = 1)) and (not exists (select c9955 from #6706_cd0 where c307 = 1) or exists (select c9955 from #6706_cd0 where c307 = 1 and s.group_id = c9955 and @6706_d46 = 1)) and (not exists (select cad44 from #5a0b_cd0 where c307 = 1) or exists (select cad44 from #5a0b_cd0 where c307 = 1 and r.sql_handle = cad44 and @5a0b_d46 = 1)) and (not exists (select c2fb9 from #0d6f_cd0 where c307 = 1) or exists (select c2fb9 from #0d6f_cd0 where c307 = 1 and s.transaction_isolation_level = c2fb9 and @0d6f_d46 = 1)) and (not exists (select c7e60 from #b270_cd0 where c307 = 1) or exists (select c7e60 from #b270_cd0 where c307 = 1 and r.command = c7e60 and @b270_d46 = 1)) and (not exists (select c6af1 from #1184_cd0 where c307 = 1) or exists (select c6af1 from #1184_cd0 where c307 = 1 and r.query_plan_hash = c6af1 and @1184_d46 = 1)) and (not exists (select c8438 from #a1ac_cd0 where c307 = 1) or exists (select c8438 from #a1ac_cd0 where c307 = 1 and s.is_user_process = c8438 and @a1ac_d46 = 1)) and (not exists (select c523f from #0cf5_cd0 where c307 = 1) or exists (select c523f from #0cf5_cd0 where c307 = 1 and r.query_hash = c523f and @0cf5_d46 = 1)) and (not exists (select c855e from #8724_cd0 where c307 = 1) or exists (select c855e from #8724_cd0 where c307 = 1 and r.executing_managed_code = c855e and @8724_d46 = 1)) and (not exists (select c649f from #8cc0_cd0 where c307 = 1) or exists (select c649f from #8cc0_cd0 where c307 = 1 and c.most_recent_sql_handle = c649f and @8cc0_d46 = 1)) and (not exists (select c5c20 from #bf25_cd0 where c307 = 1) or exists (select c5c20 from #bf25_cd0 where c307 = 1 and s.host_process_id = c5c20 and @bf25_d46 = 1)) and (not exists (select c3505 from #2b7a_cd0 where c307 = 1) or exists (select c3505 from #2b7a_cd0 where c307 = 1 and s.context_info = c3505 and @2b7a_d46 = 1)) and (not exists (select c0a46 from #d085_cd0 where c307 = 1) or exists (select c0a46 from #d085_cd0 where c307 = 1 and r.statement_end_offset = c0a46 and @d085_d46 = 1)) and (not exists (select c1555 from #9f5c_cd0 where c307 = 1) or exists (select c1555 from #9f5c_cd0 where c307 = 1 and r.scheduler_id = c1555 and @9f5c_d46 = 1)) and (not exists (select c8114 from #fefe_cd0 where c307 = 1) or exists (select c8114 from #fefe_cd0 where c307 = 1 and c.connection_id = c8114 and @fefe_d46 = 1)) and (not exists (select c107d from #33d0_cd0 where c307 = 1) or exists (select c107d from #33d0_cd0 where c307 = 1 and r.blocking_session_id = c107d and @33d0_d46 = 1)) and (not exists (select c7860 from #193c_cd0 where c2e6 = '=') or exists (select c7860 from #193c_cd0 where c2e6 = '=' and r.granted_query_memory = c7860 and @193c_1a5 = 1)) and (not exists (select c7860 from #193c_cd0 where c2e6 = '<') or exists (select c7860 from #193c_cd0 where c2e6 = '<' and r.granted_query_memory < c7860 and @193c_95c = 1)) and (not exists (select c7860 from #193c_cd0 where c2e6 = '>') or exists (select c7860 from #193c_cd0 where c2e6 = '>' and r.granted_query_memory > c7860 and @193c_e9b = 1)) and (not exists (select c2ab0 from #4c51_cd0 where c2e6 = '=') or exists (select c2ab0 from #4c51_cd0 where c2e6 = '=' and r.total_elapsed_time = c2ab0 and @4c51_1a5 = 1)) and (not exists (select c2ab0 from #4c51_cd0 where c2e6 = '<') or exists (select c2ab0 from #4c51_cd0 where c2e6 = '<' and r.total_elapsed_time < c2ab0 and @4c51_95c = 1)) and (not exists (select c2ab0 from #4c51_cd0 where c2e6 = '>') or exists (select c2ab0 from #4c51_cd0 where c2e6 = '>' and r.total_elapsed_time > c2ab0 and @4c51_e9b = 1)) and (not exists (select c1ce7 from #d427_cd0 where c2e6 = '=') or exists (select c1ce7 from #d427_cd0 where c2e6 = '=' and c.num_reads = c1ce7 and @d427_1a5 = 1)) and (not exists (select c1ce7 from #d427_cd0 where c2e6 = '<') or exists (select c1ce7 from #d427_cd0 where c2e6 = '<' and c.num_reads < c1ce7 and @d427_95c = 1)) and (not exists (select c1ce7 from #d427_cd0 where c2e6 = '>') or exists (select c1ce7 from #d427_cd0 where c2e6 = '>' and c.num_reads > c1ce7 and @d427_e9b = 1)) and (not exists (select cf89a from #d524_cd0 where c2e6 = '=') or exists (select cf89a from #d524_cd0 where c2e6 = '=' and r.logical_reads = cf89a and @d524_1a5 = 1)) and (not exists (select cf89a from #d524_cd0 where c2e6 = '<') or exists (select cf89a from #d524_cd0 where c2e6 = '<' and r.logical_reads < cf89a and @d524_95c = 1)) and (not exists (select cf89a from #d524_cd0 where c2e6 = '>') or exists (select cf89a from #d524_cd0 where c2e6 = '>' and r.logical_reads > cf89a and @d524_e9b = 1)) and (not exists (select cb27b from #dc22_cd0 where c2e6 = '=') or exists (select cb27b from #dc22_cd0 where c2e6 = '=' and r.reads = cb27b and @dc22_1a5 = 1)) and (not exists (select cb27b from #dc22_cd0 where c2e6 = '<') or exists (select cb27b from #dc22_cd0 where c2e6 = '<' and r.reads < cb27b and @dc22_95c = 1)) and (not exists (select cb27b from #dc22_cd0 where c2e6 = '>') or exists (select cb27b from #dc22_cd0 where c2e6 = '>' and r.reads > cb27b and @dc22_e9b = 1)) and (not exists (select c0adb from #1060_cd0 where c2e6 = '=') or exists (select c0adb from #1060_cd0 where c2e6 = '=' and r.nest_level = c0adb and @1060_1a5 = 1)) and (not exists (select c0adb from #1060_cd0 where c2e6 = '<') or exists (select c0adb from #1060_cd0 where c2e6 = '<' and r.nest_level < c0adb and @1060_95c = 1)) and (not exists (select c0adb from #1060_cd0 where c2e6 = '>') or exists (select c0adb from #1060_cd0 where c2e6 = '>' and r.nest_level > c0adb and @1060_e9b = 1)) and (not exists (select c23d3 from #2c56_cd0 where c2e6 = '=') or exists (select c23d3 from #2c56_cd0 where c2e6 = '=' and r.cpu_time = c23d3 and @2c56_1a5 = 1)) and (not exists (select c23d3 from #2c56_cd0 where c2e6 = '<') or exists (select c23d3 from #2c56_cd0 where c2e6 = '<' and r.cpu_time < c23d3 and @2c56_95c = 1)) and (not exists (select c23d3 from #2c56_cd0 where c2e6 = '>') or exists (select c23d3 from #2c56_cd0 where c2e6 = '>' and r.cpu_time > c23d3 and @2c56_e9b = 1)) and (not exists (select c5e2b from #94b4_cd0 where c2e6 = '=') or exists (select c5e2b from #94b4_cd0 where c2e6 = '=' and r.wait_time = c5e2b and @94b4_1a5 = 1)) and (not exists (select c5e2b from #94b4_cd0 where c2e6 = '<') or exists (select c5e2b from #94b4_cd0 where c2e6 = '<' and r.wait_time < c5e2b and @94b4_95c = 1)) and (not exists (select c5e2b from #94b4_cd0 where c2e6 = '>') or exists (select c5e2b from #94b4_cd0 where c2e6 = '>' and r.wait_time > c5e2b and @94b4_e9b = 1)) and (not exists (select c62e7 from #9056_cd0 where c2e6 = '=') or exists (select c62e7 from #9056_cd0 where c2e6 = '=' and s.open_transaction_count = c62e7 and @9056_1a5 = 1)) and (not exists (select c62e7 from #9056_cd0 where c2e6 = '<') or exists (select c62e7 from #9056_cd0 where c2e6 = '<' and s.open_transaction_count < c62e7 and @9056_95c = 1)) and (not exists (select c62e7 from #9056_cd0 where c2e6 = '>') or exists (select c62e7 from #9056_cd0 where c2e6 = '>' and s.open_transaction_count > c62e7 and @9056_e9b = 1)) and (not exists (select cd617 from #19b8_cd0 where c2e6 = '=') or exists (select cd617 from #19b8_cd0 where c2e6 = '=' and c.num_writes = cd617 and @19b8_1a5 = 1)) and (not exists (select cd617 from #19b8_cd0 where c2e6 = '<') or exists (select cd617 from #19b8_cd0 where c2e6 = '<' and c.num_writes < cd617 and @19b8_95c = 1)) and (not exists (select cd617 from #19b8_cd0 where c2e6 = '>') or exists (select cd617 from #19b8_cd0 where c2e6 = '>' and c.num_writes > cd617 and @19b8_e9b = 1)) and (not exists (select cf2a4 from #0197_cd0 where c2e6 = '=') or exists (select cf2a4 from #0197_cd0 where c2e6 = '=' and s.login_time = cf2a4 and @0197_1a5 = 1)) and (not exists (select cf2a4 from #0197_cd0 where c2e6 = '<') or exists (select cf2a4 from #0197_cd0 where c2e6 = '<' and s.login_time < cf2a4 and @0197_95c = 1)) and (not exists (select cf2a4 from #0197_cd0 where c2e6 = '>') or exists (select cf2a4 from #0197_cd0 where c2e6 = '>' and s.login_time > cf2a4 and @0197_e9b = 1)) and (not exists (select ce5c9 from #4907_cd0 where c2e6 = '=') or exists (select ce5c9 from #4907_cd0 where c2e6 = '=' and r.row_count = ce5c9 and @4907_1a5 = 1)) and (not exists (select ce5c9 from #4907_cd0 where c2e6 = '<') or exists (select ce5c9 from #4907_cd0 where c2e6 = '<' and r.row_count < ce5c9 and @4907_95c = 1)) and (not exists (select ce5c9 from #4907_cd0 where c2e6 = '>') or exists (select ce5c9 from #4907_cd0 where c2e6 = '>' and r.row_count > ce5c9 and @4907_e9b = 1)) and (not exists (select c960b from #7d3d_cd0 where c2e6 = '=') or exists (select c960b from #7d3d_cd0 where c2e6 = '=' and r.writes = c960b and @7d3d_1a5 = 1)) and (not exists (select c960b from #7d3d_cd0 where c2e6 = '<') or exists (select c960b from #7d3d_cd0 where c2e6 = '<' and r.writes < c960b and @7d3d_95c = 1)) and (not exists (select c960b from #7d3d_cd0 where c2e6 = '>') or exists (select c960b from #7d3d_cd0 where c2e6 = '>' and r.writes > c960b and @7d3d_e9b = 1)) and (not exists (select c8e79 from #8198_cd0 where c307 = 1) or exists (select c8e79 from #8198_cd0 where r.wait_type like c8e79 and c307 = 1 and @8198_d46 = 1)) and (not exists (select c32a0 from #07e1_cd0 where c307 = 1) or exists (select c32a0 from #07e1_cd0 where r.wait_resource like c32a0 and c307 = 1 and @07e1_d46 = 1)) and (not exists (select cee19 from #28ed_cd0 where c307 = 1) or exists (select cee19 from #28ed_cd0 where s.nt_user_name like cee19 and c307 = 1 and @28ed_d46 = 1)) and (not exists (select c7d55 from #0209_cd0 where c307 = 1) or exists (select c7d55 from #0209_cd0 where s.host_name like c7d55 and c307 = 1 and @0209_d46 = 1)) and (not exists (select caf76 from #e8f8_cd0 where c307 = 1) or exists (select caf76 from #e8f8_cd0 where c.client_net_address like caf76 and c307 = 1 and @e8f8_d46 = 1)) and (not exists (select c0e20 from #e21a_cd0 where c307 = 1) or exists (select c0e20 from #e21a_cd0 where s.nt_domain like c0e20 and c307 = 1 and @e21a_d46 = 1)) and (not exists (select cab12 from #bc60_cd0 where c307 = 1) or exists (select cab12 from #bc60_cd0 where s.program_name like cab12 and c307 = 1 and @bc60_d46 = 1)) and (not exists (select c5bb1 from #b46b_cd0 where c307 = 1) or exists (select c5bb1 from #b46b_cd0 where s.login_name like c5bb1 and c307 = 1 and @b46b_d46 = 1)) and (not exists (select c9955 from #6706_cd0 where c307 = 0 and s.group_id = c9955 and @6706_4ff = 1)) and (not exists (select c478c from #0103_cd0 where c307 = 0 and r.transaction_id = c478c and @0103_4ff = 1)) and (not exists (select c649f from #8cc0_cd0 where c307 = 0 and c.most_recent_sql_handle = c649f and @8cc0_4ff = 1)) and (not exists (select c8438 from #a1ac_cd0 where c307 = 0 and s.is_user_process = c8438 and @a1ac_4ff = 1)) and (not exists (select c7407 from #619e_cd0 where c307 = 0 and c.node_affinity = c7407 and @619e_4ff = 1)) and (not exists (select c3505 from #2b7a_cd0 where c307 = 0 and s.context_info = c3505 and @2b7a_4ff = 1)) and (not exists (select c2fb9 from #0d6f_cd0 where c307 = 0 and s.transaction_isolation_level = c2fb9 and @0d6f_4ff = 1)) and (not exists (select c0a46 from #d085_cd0 where c307 = 0 and r.statement_end_offset = c0a46 and @d085_4ff = 1)) and (not exists (select c1555 from #9f5c_cd0 where c307 = 0 and r.scheduler_id = c1555 and @9f5c_4ff = 1)) and (not exists (select ceb01 from #9bef_cd0 where c307 = 0 and r.request_id = ceb01 and @9bef_4ff = 1)) and (not exists (select c5c20 from #bf25_cd0 where c307 = 0 and s.host_process_id = c5c20 and @bf25_4ff = 1)) and (not exists (select ca03c from #0057_cd0 where c307 = 0 and r.plan_handle = ca03c and @0057_4ff = 1)) and (not exists (select cad44 from #5a0b_cd0 where c307 = 0 and r.sql_handle = cad44 and @5a0b_4ff = 1)) and (not exists (select c855e from #8724_cd0 where c307 = 0 and r.executing_managed_code = c855e and @8724_4ff = 1)) and (not exists (select c05a7 from #fba3_cd0 where c307 = 0 and s.database_id = c05a7 and @fba3_4ff = 1)) and (not exists (select c523f from #0cf5_cd0 where c307 = 0 and r.query_hash = c523f and @0cf5_4ff = 1)) and (not exists (select c107d from #33d0_cd0 where c307 = 0 and r.blocking_session_id = c107d and @33d0_4ff = 1)) and (not exists (select c186e from #040a_cd0 where c307 = 0 and r.statement_start_offset = c186e and @040a_4ff = 1)) and (not exists (select c86b4 from #6a44_cd0 where c307 = 0 and r.status = c86b4 and @6a44_4ff = 1)) and (not exists (select c6af1 from #1184_cd0 where c307 = 0 and r.query_plan_hash = c6af1 and @1184_4ff = 1)) and (not exists (select c66ea from #d6f4_cd0 where c307 = 0 and s.session_id = c66ea and @d6f4_4ff = 1)) and (not exists (select c7e60 from #b270_cd0 where c307 = 0 and r.command = c7e60 and @b270_4ff = 1)) and (not exists (select c8114 from #fefe_cd0 where c307 = 0 and c.connection_id = c8114 and @fefe_4ff = 1)) and (not exists (select c8e79 from #8198_cd0 where r.wait_type like c8e79 and c307 = 0 and @8198_4ff = 1)) and (not exists (select cab12 from #bc60_cd0 where s.program_name like cab12 and c307 = 0 and @bc60_4ff = 1)) and (not exists (select cee19 from #28ed_cd0 where s.nt_user_name like cee19 and c307 = 0 and @28ed_4ff = 1)) and (not exists (select c0e20 from #e21a_cd0 where s.nt_domain like c0e20 and c307 = 0 and @e21a_4ff = 1)) and (not exists (select caf76 from #e8f8_cd0 where c.client_net_address like caf76 and c307 = 0 and @e8f8_4ff = 1)) and (not exists (select c7d55 from #0209_cd0 where s.host_name like c7d55 and c307 = 0 and @0209_4ff = 1)) and (not exists (select c32a0 from #07e1_cd0 where r.wait_resource like c32a0 and c307 = 0 and @07e1_4ff = 1)) and (not exists (select c5bb1 from #b46b_cd0 where s.login_name like c5bb1 and c307 = 0 and @b46b_4ff = 1)) and (s.session_id not in (select @@spid where not exists (select c010 from #235 where upper(c010) in ('SP_WHOPRO')))) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_sessions left join sys.dm_exec_connections left join sys.dm_exec_requests ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() insert into #3ec (session_id) select distinct c6e_session_id as session_id from #f6a insert into #4d3 select distinct c6e_session_id as session_id, c6e_login_time as login_time, c6e_host_name as host_name, c6e_program_name as program_name, c6e_host_process_id as host_process_id, c6e_client_version as client_version, c6e_client_interface_name as client_interface_name, c6e_security_id as security_id, c6e_login_name as login_name, c6e_nt_domain as nt_domain, c6e_nt_user_name as nt_user_name, c6e_status as status, c6e_context_info as context_info, c6e_cpu_time as cpu_time, c6e_memory_usage as memory_usage, c6e_total_scheduled_time as total_scheduled_time, c6e_total_elapsed_time as total_elapsed_time, c6e_endpoint_id as endpoint_id, c6e_last_request_start_time as last_request_start_time, c6e_last_request_end_time as last_request_end_time, c6e_reads as reads, c6e_writes as writes, c6e_logical_reads as logical_reads, c6e_is_user_process as is_user_process, c6e_text_size as text_size, c6e_language as language, c6e_date_format as date_format, c6e_date_first as date_first, c6e_quoted_identifier as quoted_identifier, c6e_arithabort as arithabort, c6e_ansi_null_dflt_on as ansi_null_dflt_on, c6e_ansi_defaults as ansi_defaults, c6e_ansi_warnings as ansi_warnings, c6e_ansi_padding as ansi_padding, c6e_ansi_nulls as ansi_nulls, c6e_concat_null_yields_null as concat_null_yields_null, c6e_transaction_isolation_level as transaction_isolation_level, c6e_lock_timeout as lock_timeout, c6e_deadlock_priority as deadlock_priority, c6e_row_count as row_count, c6e_prev_error as prev_error, c6e_original_security_id as original_security_id, c6e_original_login_name as original_login_name, c6e_last_successful_logon as last_successful_logon, c6e_last_unsuccessful_logon as last_unsuccessful_logon, c6e_unsuccessful_logons as unsuccessful_logons, c6e_group_id as group_id, c6e_database_id as database_id, c6e_authenticating_database_id as authenticating_database_id, c6e_open_transaction_count as open_transaction_count, ctime from #f6a select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_sessions ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() insert into #bb0 (session_id, connection_id) select distinct c5f_session_id as session_id, c5f_connection_id as connection_id from #f6a where c5f_session_id is not NULL insert into #22c select distinct c5f_session_id as session_id, c5f_most_recent_session_id as most_recent_session_id, c5f_connect_time as connect_time, c5f_net_transport as net_transport, c5f_protocol_type as protocol_type, c5f_protocol_version as protocol_version, c5f_endpoint_id as endpoint_id, c5f_encrypt_option as encrypt_option, c5f_auth_scheme as auth_scheme, c5f_node_affinity as node_affinity, c5f_num_reads as num_reads, c5f_num_writes as num_writes, c5f_last_read as last_read, c5f_last_write as last_write, c5f_net_packet_size as net_packet_size, c5f_client_net_address as client_net_address, c5f_client_tcp_port as client_tcp_port, c5f_local_net_address as local_net_address, c5f_local_tcp_port as local_tcp_port, c5f_connection_id as connection_id, c5f_parent_connection_id as parent_connection_id, c5f_most_recent_sql_handle as most_recent_sql_handle, ctime from #f6a where c5f_session_id is not NULL select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_connections ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() insert into #8db (session_id, request_id, connection_id) select distinct cb6_session_id as session_id, cb6_request_id as request_id, cb6_connection_id as connection_id from #f6a where cb6_session_id is not NULL insert into #3fb select distinct cb6_session_id as session_id, cb6_request_id as request_id, cb6_start_time as start_time, cb6_status as status, cb6_command as command, cb6_sql_handle as sql_handle, cb6_statement_start_offset as statement_start_offset, cb6_statement_end_offset as statement_end_offset, cb6_plan_handle as plan_handle, cb6_database_id as database_id, cb6_user_id as user_id, cb6_connection_id as connection_id, cb6_blocking_session_id as blocking_session_id, cb6_wait_type as wait_type, cb6_wait_time as wait_time, cb6_last_wait_type as last_wait_type, cb6_wait_resource as wait_resource, cb6_open_transaction_count as open_transaction_count, cb6_open_resultset_count as open_resultset_count, cb6_transaction_id as transaction_id, cb6_context_info as context_info, cb6_percent_complete as percent_complete, cb6_estimated_completion_time as estimated_completion_time, cb6_cpu_time as cpu_time, cb6_total_elapsed_time as total_elapsed_time, cb6_scheduler_id as scheduler_id, cb6_task_address as task_address, cb6_reads as reads, cb6_writes as writes, cb6_logical_reads as logical_reads, cb6_text_size as text_size, cb6_language as language, cb6_date_format as date_format, cb6_date_first as date_first, cb6_quoted_identifier as quoted_identifier, cb6_arithabort as arithabort, cb6_ansi_null_dflt_on as ansi_null_dflt_on, cb6_ansi_defaults as ansi_defaults, cb6_ansi_warnings as ansi_warnings, cb6_ansi_padding as ansi_padding, cb6_ansi_nulls as ansi_nulls, cb6_concat_null_yields_null as concat_null_yields_null, cb6_transaction_isolation_level as transaction_isolation_level, cb6_lock_timeout as lock_timeout, cb6_deadlock_priority as deadlock_priority, cb6_row_count as row_count, cb6_prev_error as prev_error, cb6_nest_level as nest_level, cb6_granted_query_memory as granted_query_memory, cb6_executing_managed_code as executing_managed_code, cb6_group_id as group_id, cb6_query_hash as query_hash, cb6_query_plan_hash as query_plan_hash, cb6_statement_sql_handle as statement_sql_handle, cb6_statement_context_id as statement_context_id, ctime from #f6a where cb6_session_id is not NULL select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_requests ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) insert into #445 select t.task_address as c848, t.task_state as c894, t.context_switches_count as cea3, t.pending_io_count as c523, t.pending_io_byte_count as c153, t.pending_io_byte_average as c447, t.scheduler_id as c9f5, t.session_id as cd6f, t.exec_context_id as cb85, t.request_id as c9be, t.worker_address as cb5d, t.host_address as c1ad, t.parent_task_address as ccb0, (select start_time from sys.dm_exec_requests where session_id = r.session_id and request_id = r.request_id) as c15a, getdate() as ctime from sys.dm_os_tasks t inner join #3fb r on (t.session_id = r.session_id and t.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_os_tasks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_wait_types', 'c13_waiting_tasks_max_wait_duration_ms', 'c13_waiting_tasks_blocking_session_ids', 'c13_waiting_tasks_valid_flag', 'c13_waiting_tasks_info', 'c13_lock_count', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_lock_owner_id', 'c13_locks_info', 'c0d_locks_info', 'c13_is_blocker', 'c13_is_head_blocker', 'c0d_is_blocked', 'c0d_is_dead_locked', 'c13_blocked_session_ids', 'c0d_blocker_session_ids', 'c0d_head_blocker_session_ids')) begin if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) insert into #560 (c50a, cd6f, cb85, cdef, c819, cba7, c109, c33d, caf8, ca11, cd91) select wt.waiting_task_address as c50a, wt.session_id as cd6f, wt.exec_context_id as cb85, wt.wait_duration_ms as cdef, wt.wait_type as c819, wt.resource_address as cba7, wt.blocking_task_address as c109, wt.blocking_session_id as c33d, wt.blocking_exec_context_id as caf8, wt.resource_description as ca11, (select login_time from sys.dm_exec_sessions where session_id = r.session_id) as cd91 from sys.dm_os_waiting_tasks wt inner join #445 t on (wt.waiting_task_address = t.c848) inner join #3fb r on (t.cd6f = r.session_id and t.c9be = r.request_id) else insert into #560 (c50a, cd6f, cb85, cdef, c819, cba7, c109, c33d, caf8, ca11, cd91) select wt.waiting_task_address as c50a, wt.session_id as cd6f, wt.exec_context_id as cb85, wt.wait_duration_ms as cdef, wt.wait_type as c819, wt.resource_address as cba7, wt.blocking_task_address as c109, wt.blocking_session_id as c33d, wt.blocking_exec_context_id as caf8, wt.resource_description as ca11, (select login_time from sys.dm_exec_sessions where session_id = s.session_id) as cd91 from sys.dm_os_waiting_tasks wt inner join #4d3 s on (wt.session_id = s.session_id) end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_os_waiting_tasks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_requested_memory_kb', 'c0d_query_memory_grants_granted_memory_kb', 'c0d_query_memory_grants_used_memory_kb', 'c0d_query_memory_grants_max_used_memory_kb', 'c0d_query_memory_grants_wait_time_ms', 'c0d_query_memory_grants_ideal_memory_kb', 'c0d_query_memory_grants_info')) insert into #a31 select qmg.session_id as cd6f, qmg.request_id as c9be, qmg.scheduler_id as c9f5, qmg.dop as cf91, qmg.request_time as c956, qmg.grant_time as c25e, qmg.requested_memory_kb as c40a, qmg.granted_memory_kb as c8d8, qmg.required_memory_kb as cdd1, qmg.used_memory_kb as cbf7, qmg.max_used_memory_kb as c03c, qmg.query_cost as cf5e, qmg.timeout_sec as cccd, qmg.resource_semaphore_id as cab5, qmg.queue_id as c0dc, qmg.wait_order as cff6, qmg.is_next_candidate as c9e2, qmg.wait_time_ms as c4b8, qmg.plan_handle as c005, qmg.sql_handle as c5a0, qmg.group_id as c670, qmg.pool_id as ca93, qmg.is_small as c154, qmg.ideal_memory_kb as cda4, (select start_time from sys.dm_exec_requests where session_id = r.session_id and request_id = r.request_id) as c15a from sys.dm_exec_query_memory_grants qmg inner join #3fb r on (qmg.session_id = r.session_id and qmg.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_query_memory_grants ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_cpu_time_ms', 'c0d_query_profiles_logical_read_count', 'c0d_query_profiles_physical_read_count', 'c0d_query_profiles_read_ahead_count', 'c0d_query_profiles_write_page_count', 'c0d_query_profiles_info')) insert into #4d5 select qp.session_id as cd6f, qp.request_id as c9be, qp.sql_handle as c5a0, qp.plan_handle as c005, qp.physical_operator_name as c721, qp.node_id as c806, qp.thread_id as cd3a, qp.task_address as c848, qp.row_count as c490, qp.rewind_count as c3b3, qp.rebind_count as c34b, qp.end_of_scan_count as cd67, qp.estimate_row_count as c8d9, qp.first_active_time as c70d, qp.last_active_time as cc26, qp.open_time as c074, qp.first_row_time as ce3c, qp.last_row_time as c63d, qp.close_time as cb21, qp.elapsed_time_ms as c740, qp.cpu_time_ms as c24d, qp.database_id as cfba, qp.object_id as c1c7, qp.index_id as ca0d, qp.scan_count as c248, qp.logical_read_count as c3e8, qp.physical_read_count as cebb, qp.read_ahead_count as c053, qp.write_page_count as cfcc, qp.lob_logical_read_count as c2a1, qp.lob_physical_read_count as cef4, qp.lob_read_ahead_count as c6af, qp.segment_read_count as ce73, qp.segment_skip_count as c7b2, (select start_time from sys.dm_exec_requests where session_id = r.session_id and request_id = r.request_id) as c15a from sys.dm_exec_query_profiles qp inner join #3fb r on (qp.session_id = r.session_id and qp.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_query_profiles ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_begin_time', 'c0d_transaction_begin_time', 'c13_transaction_log_record_count', 'c13_transaction_log_bytes_used', 'c13_transaction_info', 'c0d_transaction_info')) insert into #4e4 select tst.session_id as cd6f, tst.transaction_id as c010, tst.transaction_descriptor as cbbb, tst.enlist_count as c0f8, tst.is_user_transaction as c6c6, tst.is_local as c8ce, tst.is_enlisted as cf2e, tst.is_bound as cfa6, tst.open_transaction_count as c905, (select login_time from sys.dm_exec_sessions where session_id = s.session_id) as cd91 from sys.dm_tran_session_transactions tst inner join #4d3 s on (tst.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_tran_session_transactions ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_begin_time', 'c0d_transaction_begin_time', 'c13_transaction_log_record_count', 'c13_transaction_log_bytes_used', 'c13_transaction_info', 'c0d_transaction_info')) insert into #715 select tat.transaction_id as c010, tat.name as c905, tat.transaction_begin_time as cd19, tat.transaction_type as c8d0, tat.transaction_uow as cd76, tat.transaction_state as c133, tat.transaction_status as c7dc, tat.transaction_status2 as cad9, tat.dtc_state as ce6c, tat.dtc_status as c473, tat.dtc_isolation_level as c529, tat.filestream_transaction_id as c162 from sys.dm_tran_active_transactions tat select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_tran_active_transactions ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_log_record_count', 'c13_transaction_log_bytes_used', 'c13_transaction_info', 'c0d_transaction_info')) insert into #43a select tdt.transaction_id as c010, tdt.database_id as cfba, tdt.database_transaction_begin_time as c590, tdt.database_transaction_type as cfc2, tdt.database_transaction_state as c104, tdt.database_transaction_status as c756, tdt.database_transaction_status2 as ca06, tdt.database_transaction_log_record_count as cb0a, tdt.database_transaction_replicate_record_count as c3b4, tdt.database_transaction_log_bytes_used as c31f, tdt.database_transaction_log_bytes_reserved as cc47, tdt.database_transaction_log_bytes_used_system as ce03, tdt.database_transaction_log_bytes_reserved_system as cbad, tdt.database_transaction_begin_lsn as c536, tdt.database_transaction_last_lsn as c729, tdt.database_transaction_most_recent_savepoint_lsn as ca44, tdt.database_transaction_commit_lsn as c6cb, tdt.database_transaction_last_rollback_lsn as c5ed, tdt.database_transaction_next_undo_lsn as cff5 from sys.dm_tran_database_transactions tdt select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_tran_database_transactions ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	if exists (select c010 from #936 where c010 in ('input_buffer', 'c6e_input_buffer', 'cb6_input_buffer', 'c13_input_buffer_checksum', 'c0d_input_buffer_checksum', 'c13_input_buffer_valid_flag', 'c0d_input_buffer_valid_flag')) begin select @4e4 = getdate() insert into #841 select distinct r.session_id, r.request_id from #4d3 s inner join #3fb r on (s.session_id = r.session_id) where s.is_user_process = 1 insert into #841 select distinct s.session_id, NULL from #4d3 s where s.is_user_process = 1 and s.session_id not in (select cd6f from #841) declare c670 cursor for select cd6f, c9be from #841 open c670 fetch next from c670 into @fe7, @795 while (@@fetch_status = 0) begin delete #301 begin try if (@795 is not NULL and exists (select c010 from #936 where c010 in ('input_buffer', 'cb6_input_buffer', 'c0d_input_buffer_checksum', 'c0d_input_buffer_valid_flag'))) begin insert into #301 exec sp_executesql N'DBCC INPUTBUFFER (@fe7, @795) WITH NO_INFOMSGS', N'@fe7 smallint, @795 int', @fe7, @795 end else if exists (select c010 from #936 where c010 in ('input_buffer', 'c6e_input_buffer', 'c13_input_buffer_checksum', 'c13_input_buffer_valid_flag')) begin insert into #301 exec sp_executesql N'DBCC INPUTBUFFER (@fe7) WITH NO_INFOMSGS', N'@fe7 smallint', @fe7 end if exists (select cce3 from #301 where checksum(cce3) is not NULL and checksum(cce3) <> 2147483647) begin update #838 set rcount = rcount + 1 from #301 where EventInfo = cce3 and checksum(cce3) in (select checksum from #838) insert into #838 select checksum(cce3), c6f1, c326, cce3, @datetime, 1 from #301 where checksum(cce3) not in (select checksum from #838) if (@795 is not NULL) begin insert into #455 (cd6f, c9be, c3e5, c15a) select @fe7, @795, checksum(cce3), (select start_time from sys.dm_exec_requests where session_id = @fe7 and request_id = @795) from #301 end else begin insert into #455 (cd6f, c9be, c3e5, c0b7) select @fe7, @795, checksum(cce3), (select last_request_start_time from sys.dm_exec_sessions where session_id = @fe7) from #301 end end end try begin catch if (@795 is not NULL and exists (select c010 from #936 where c010 in ('c0d_input_buffer_checksum', 'c0d_input_buffer_valid_flag'))) print 'DBCC INPUTBUFFER(' + cast(@fe7 as varchar(5)) + ', ' + cast(@795 as varchar(5)) + ') returned error' else if exists (select c010 from #936 where c010 in ('c13_input_buffer_checksum', 'c13_input_buffer_valid_flag')) print 'DBCC INPUTBUFFER(' + cast(@fe7 as varchar(5)) + ') returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch fetch next from c670 into @fe7, @795 end close c670 deallocate c670 if (@e82 = 1) begin set @05b = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_input_buffer set rtime = ib.ctime, rcount = sqlwsib.rcount + ib.rcount from [' + schema_name(@c91) + '].sqlws_input_buffer sqlwsib inner join #838 ib on (sqlwsib.servername = @@servername and sqlwsib.checksum = ib.checksum)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_input_buffer failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_input_buffer select @@servername, checksum, EventType, Parameters, EventInfo, ctime, ctime, rcount from #838 where checksum not in (select checksum from [' + schema_name(@c91) + '].sqlws_input_buffer where servername = @@servername)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_input_buffer failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'DBCC INPUTBUFFER ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' end
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_lock_count', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_lock_owner_id', 'c13_locks_info', 'c0d_locks_info')) begin if (@2d4 = 1) insert into #29d select tl.resource_type as c9f7, tl.resource_subtype as c247, tl.resource_database_id as ce16, tl.resource_associated_entity_id as cdac, tl.resource_lock_partition as c9ef, tl.request_mode as cc3d, tl.request_type as c33c, tl.request_status as ccd3, tl.request_reference_count as c078, tl.request_lifetime as cf45, tl.request_session_id as c28f, tl.request_exec_context_id as c844, tl.request_request_id as c93a, tl.request_owner_type as c8b3, tl.request_owner_id as c042, tl.request_owner_guid as c802, tl.request_owner_lockspace_id as c521, tl.lock_owner_address as c881, count(*), (select login_time from sys.dm_exec_sessions where session_id = tl.request_session_id) as cd91 from sys.dm_tran_locks tl inner join #4d3 s on (tl.request_session_id = s.session_id) where @2d4 = 1 group by resource_type, resource_subtype, resource_database_id, resource_associated_entity_id, resource_lock_partition, request_mode, request_type, request_status, request_reference_count, request_lifetime, request_session_id, request_exec_context_id, request_request_id, request_owner_type, request_owner_id, request_owner_guid, request_owner_lockspace_id, lock_owner_address else insert into #29d select tl.resource_type as c9f7, tl.resource_subtype as c247, tl.resource_database_id as ce16, tl.resource_associated_entity_id as cdac, tl.resource_lock_partition as c9ef, tl.request_mode as cc3d, tl.request_type as c33c, tl.request_status as ccd3, tl.request_reference_count as c078, tl.request_lifetime as cf45, tl.request_session_id as c28f, tl.request_exec_context_id as c844, tl.request_request_id as c93a, tl.request_owner_type as c8b3, tl.request_owner_id as c042, tl.request_owner_guid as c802, tl.request_owner_lockspace_id as c521, tl.lock_owner_address as c881, count(*), (select login_time from sys.dm_exec_sessions where session_id = tl.request_session_id) as cd91 from sys.dm_tran_locks tl inner join #4d3 s on (tl.request_session_id = s.session_id) where s.session_id in (select distinct cd6f from #560 wt where c819 like 'LCK%' union select distinct c33d from #560 wt where c819 like 'LCK%') group by resource_type, resource_subtype, resource_database_id, resource_associated_entity_id, resource_lock_partition, request_mode, request_type, request_status, request_reference_count, request_lifetime, request_session_id, request_exec_context_id, request_request_id, request_owner_type, request_owner_id, request_owner_guid, request_owner_lockspace_id, lock_owner_address end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_tran_locks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	if exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text', 'statement_object_name', 'statement', 'cb6_statement_object_name', 'cb6_statement', 'c13_cursors_info')) begin select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) begin if exists (select c010 from #936 where c010 in ('c13_cursors_info')) insert into #265 (c625) select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg union select distinct c.c5a0 from #807 c else insert into #265 (c625) select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg end else if exists (select c010 from #936 where c010 in ('c13_cursors_info')) begin if not exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #265 (c625) select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct c.c5a0 from #807 c end else insert into #265 (c625) select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c declare c024 cursor for select c625 from #265 where c625 is not NULL and c625 <> 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 open c024 fetch next from c024 into @7a4 while (@@fetch_status = 0) begin begin try insert into #d08 select @7a4 as sql_handle, case when st.dbid is NULL then 'database_id = NULL' else 'database_id = ' + cast(st.dbid as nvarchar(256)) + case when db_name(st.dbid) is not NULL then '(' + db_name(st.dbid) + ')' else '' end end + case when st.objectid is NULL then ', object_id = NULL' else ', object_id = ' + cast(st.objectid as nvarchar(256)) + case when object_name(st.objectid, st.dbid) is not NULL then '(' + object_name(st.objectid, st.dbid) + ')' else '' end end as sql_text_info, st.dbid, st.objectid, st.number, st.encrypted, st.text, @datetime, (select count(*) from #22c c left outer join #3fb r on (c.session_id = r.session_id and c.connection_id = r.connection_id) where c.most_recent_sql_handle = @7a4 or r.sql_handle = @7a4) from sys.dm_exec_sql_text(@7a4) st where st.text is not NULL end try begin catch print 'select ... from sys.dm_exec_sql_text(' + sys.fn_varbintohexstr(cast(@7a4 as varbinary(64))) + ') returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch fetch next from c024 into @7a4 end close c024 deallocate c024 if (@e82 = 1) begin set @05b = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text set rtime = st.ctime, rcount = sqlwsst.rcount + st.rcount from [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text sqlwsst inner join #d08 st on (sqlwsst.servername = @@servername and sqlwsst.sql_handle = st.sql_handle)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text select @@servername, sql_handle, sql_text_info, st.dbid, st.objectid, st.number, st.encrypted, st.text, ctime, ctime, rcount from #d08 st where st.sql_handle not in (select sql_handle from [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text where servername = @@servername)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_sql_text ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' end if exists (select c010 from #936 where c010 in ('query_plan', 'cb6_query_plan')) begin select @4e4 = getdate() set lock_timeout 0 delete #203 if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #203 select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg else insert into #203 select distinct r.plan_handle from #3fb r declare cee9 cursor for select c0dd from #203 where c0dd is not NULL open cee9 fetch next from cee9 into @103 while (@@fetch_status = 0) begin begin try if not exists (select plan_handle from #4d2 where plan_handle = @103) insert into #4d2 select @103 as plan_handle, case when qp.dbid is NULL then 'database_id = NULL' else 'database_id = ' + cast(qp.dbid as nvarchar(256)) + case when db_name(qp.dbid) is not NULL then '(' + db_name(qp.dbid) + ')' else '' end end + case when qp.objectid is NULL then ', object_id = NULL' else ', object_id = ' + cast(qp.objectid as nvarchar(256)) + case when object_name(qp.objectid, qp.dbid) is not NULL then '(' + object_name(qp.objectid, qp.dbid) + ')' else '' end end as query_plan_info, qp.dbid, qp.objectid, qp.number, qp.encrypted, qp.query_plan, @datetime, (select count(*) from #3fb where plan_handle = @103) from sys.dm_exec_query_plan(@103) qp where qp.query_plan is not NULL end try begin catch print 'select ... from sys.dm_exec_exec_query_plan(' + sys.fn_varbintohexstr(cast(@103 as varbinary(64))) + ') returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch fetch next from cee9 into @103 end close cee9 deallocate cee9 set lock_timeout -1 if (@e82 = 1) begin set @05b = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan set rtime = qp.ctime, rcount = sqlwsqp.rcount + qp.rcount from [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan sqlwsqp inner join #4d2 qp on (sqlwsqp.servername = @@servername and sqlwsqp.plan_handle = qp.plan_handle)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan select @@servername, plan_handle, query_plan_info, qp.dbid, qp.objectid, qp.number, qp.encrypted, qp.query_plan, ctime, ctime, rcount from #4d2 qp where qp.plan_handle not in (select plan_handle from [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan where servername = @@servername)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_query_plan ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' end if exists (select c010 from #936 where c010 in ('query_plan_checksum', 'cb6_query_plan_checksum', 'c0d_query_plan_text_checksum')) begin select @4e4 = getdate() set lock_timeout 0 delete #203 if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #203 select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg else insert into #203 select distinct r.plan_handle from #3fb r declare cee9 cursor for select c0dd from #203 where c0dd is not NULL open cee9 fetch next from cee9 into @103 while (@@fetch_status = 0) begin begin try insert into #965 select checksum(cast(qp.query_plan as nvarchar(max))) as checksum, @103 as plan_handle, case when qp.dbid is NULL then 'database_id = NULL' else 'database_id = ' + cast(qp.dbid as nvarchar(256)) + case when db_name(qp.dbid) is not NULL then '(' + db_name(qp.dbid) + ')' else '' end end + case when qp.objectid is NULL then ', object_id = NULL' else ', object_id = ' + cast(qp.objectid as nvarchar(256)) + case when object_name(qp.objectid, qp.dbid) is not NULL then '(' + object_name(qp.objectid, qp.dbid) + ')' else '' end end as query_plan_info, qp.dbid, qp.objectid, qp.number, qp.encrypted, qp.query_plan, @datetime, (select count(*) from #3fb where plan_handle = @103) from sys.dm_exec_query_plan(@103) qp where checksum(cast(qp.query_plan as nvarchar(max))) <> 2147483647 and checksum(cast(qp.query_plan as nvarchar(max))) not in (select checksum from #965) end try begin catch print 'select ... from sys.dm_exec_exec_query_plan(' + sys.fn_varbintohexstr(cast(@103 as varbinary(64))) + ') returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch fetch next from cee9 into @103 end close cee9 deallocate cee9 set lock_timeout -1 if (@e82 = 1) begin set @05b = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum set rtime = qp.ctime, rcount = sqlwsqp.rcount + qp.rcount from [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum sqlwsqp inner join #965 qp on (sqlwsqp.servername = @@servername and sqlwsqp.checksum = qp.checksum)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum select @@servername, qp.checksum, qp.plan_handle, qp.query_plan_info, qp.dbid, qp.objectid, qp.number, qp.encrypted, qp.query_plan, ctime, ctime, rcount from #965 qp where qp.checksum not in (select checksum from [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum where servername = @@servername)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_query_plan ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' end if exists (select c010 from #936 where c010 in ('plan_attributes_info', 'cb6_plan_attributes_info')) begin select @4e4 = getdate() set lock_timeout 0 delete #203 if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #203 select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg else insert into #203 select distinct r.plan_handle from #3fb r declare cee9 cursor for select c0dd from #203 where c0dd is not NULL open cee9 fetch next from cee9 into @103 while (@@fetch_status = 0) begin begin try insert into #f6e select @103 as plan_handle, (select cast(plan_attributes.value as varbinary(64)) from sys.dm_exec_plan_attributes(@103) plan_attributes where plan_attributes.attribute = 'sql_handle') as sql_handle, (select plan_attributes_info.plan_attributes_info, plan_attributes.attribute, case plan_attributes.attribute when 'sql_handle' then sys.fn_varbintohexstr(cast(plan_attributes.value as varbinary(64))) else cast(plan_attributes.value as nvarchar(max)) end as value, plan_attributes.is_cache_key from (select null as plan_attributes_info) as plan_attributes_info cross join sys.dm_exec_plan_attributes(@103) plan_attributes for xml auto) as plan_attributes_info, (select case when cast(plan_attributes1.value as int) is NULL then 'database_id = NULL' else 'database_id = ' + cast(cast(plan_attributes1.value as int) as nvarchar(256)) + case when db_name(cast(plan_attributes1.value as int)) is not NULL then '(' + db_name(cast(plan_attributes1.value as int)) + ')' else '' end end + case when cast(plan_attributes.value as int) is NULL then ', object_id = NULL' else ', object_id = ' + cast(cast(plan_attributes.value as int) as nvarchar(256)) + case when object_name(cast(plan_attributes.value as int), cast(plan_attributes1.value as int)) is not NULL then '(' + object_name(cast(plan_attributes.value as int), cast(plan_attributes1.value as int)) + ')' else '' end end from sys.dm_exec_plan_attributes(@103) plan_attributes1 cross join sys.dm_exec_plan_attributes(@103) plan_attributes where plan_attributes1.attribute = 'dbid' and plan_attributes.attribute = 'objectid') as plan_attributes_detail, @datetime as ctime, (select count(*) from #3fb where plan_handle = @103) as rcount end try begin catch print 'select ... from sys.dm_exec_plan_attributes(' + sys.fn_varbintohexstr(cast(@103 as varbinary(64))) + ') returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch fetch next from cee9 into @103 end close cee9 deallocate cee9 set lock_timeout -1 if (@e82 = 1) begin set @05b = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes set rtime = pa.ctime, rcount = sqlwspa.rcount + pa.rcount from [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes sqlwspa inner join #f6e pa on (sqlwspa.servername = @@servername and sqlwspa.plan_handle = pa.plan_handle)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes select @@servername, plan_handle, sql_handle, plan_attributes_info, plan_attributes_detail, ctime, ctime, rcount from #f6e pa where pa.plan_handle not in (select plan_handle from [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes where servername = @@servername)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_plan_attributes ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' end if exists (select c010 from #936 where c010 in ('text_query_plan', 'cb6_text_query_plan', 'full_text_query_plan', 'cb6_full_text_query_plan')) begin select @4e4 = getdate() set lock_timeout 0 insert into #85a select distinct plan_handle, statement_start_offset, statement_end_offset from #3fb declare c157 cursor for select c0dd, c375, c1fa from #85a where c0dd is not NULL open c157 fetch next from c157 into @103, @3dd, @484 while (@@fetch_status = 0) begin begin try if exists (select c010 from #936 where c010 in ('text_query_plan', 'cb6_text_query_plan')) insert into #484 select @103 as plan_handle, @3dd as statement_start_offset, @484 as statement_end_offset, case when tqp.dbid is NULL then 'database_id = NULL' else 'database_id = ' + cast(tqp.dbid as nvarchar(256)) + case when db_name(tqp.dbid) is not NULL then '(' + db_name(tqp.dbid) + ')' else '' end end + case when tqp.objectid is NULL then ', object_id = NULL' else ', object_id = ' + cast(tqp.objectid as nvarchar(256)) + case when object_name(tqp.objectid, tqp.dbid) is not NULL then '(' + object_name(tqp.objectid, tqp.dbid) + ')' else '' end end as text_query_plan_info, tqp.dbid, tqp.objectid, tqp.number, tqp.encrypted, tqp.query_plan, @datetime, (select count(*) from #3fb where plan_handle = @103 and statement_start_offset = @3dd and statement_end_offset = @484) from sys.dm_exec_text_query_plan(@103, @3dd, @484) tqp where tqp.query_plan is not NULL end try begin catch print 'select ... from sys.dm_exec_text_query_plan(' + sys.fn_varbintohexstr(cast(@103 as varbinary(64))) + ', ' + cast(@3dd as sysname) + ', ' + cast(@3dd as sysname) + ') returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch begin try if exists (select c010 from #936 where c010 in ('full_text_query_plan', 'cb6_full_text_query_plan')) if not exists (select plan_handle from #484 where plan_handle = @103 and statement_start_offset = 0 and statement_end_offset = -1) insert into #484 select @103 as plan_handle, 0 as statement_start_offset, -1 as statement_end_offset, case when tqp.dbid is NULL then 'database_id = NULL' else 'database_id = ' + cast(tqp.dbid as nvarchar(256)) + case when db_name(tqp.dbid) is not NULL then '(' + db_name(tqp.dbid) + ')' else '' end end + case when tqp.objectid is NULL then ', object_id = NULL' else ', object_id = ' + cast(tqp.objectid as nvarchar(256)) + case when object_name(tqp.objectid, tqp.dbid) is not NULL then '(' + object_name(tqp.objectid, tqp.dbid) + ')' else '' end end as text_query_plan_info, tqp.dbid, tqp.objectid, tqp.number, tqp.encrypted, tqp.query_plan, @datetime, (select count(*) from #3fb where plan_handle = @103) from sys.dm_exec_text_query_plan(@103, 0, -1) tqp where tqp.query_plan is not NULL end try begin catch print 'select ... from sys.dm_exec_text_query_plan(' + sys.fn_varbintohexstr(cast(@103 as varbinary(64))) + ', 0, -1) returned error' print'ERROR_NUMBER = ' + cast(ERROR_NUMBER() as nvarchar(256)) + ', ERROR_SEVERITY = ' + cast(ERROR_SEVERITY() as nvarchar(256)) + ', ERROR_STATE = ' + cast(ERROR_STATE() as nvarchar(256)) + ', ERROR_PROCEDURE = ' + isnull(ERROR_PROCEDURE(), '') + ', ERROR_LINE = ' + cast(ERROR_LINE() as nvarchar(256)) + ', ERROR_MESSAGE = ' + ERROR_MESSAGE() end catch fetch next from c157 into @103, @3dd, @484 end close c157 deallocate c157 set lock_timeout -1 if (@e82 = 1) begin set @05b = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan set rtime = tqp.ctime, rcount = sqlwstqp.rcount + tqp.rcount from [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan sqlwstqp inner join #484 tqp on (sqlwstqp.servername = @@servername and sqlwstqp.plan_handle = tqp.plan_handle and sqlwstqp.statement_start_offset = tqp.statement_start_offset and sqlwstqp.statement_end_offset = tqp.statement_end_offset)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] update [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan select @@servername, plan_handle, statement_start_offset, statement_end_offset, text_query_plan_info, tqp.dbid, tqp.objectid, tqp.number, tqp.encrypted, tqp.query_plan, ctime, ctime, rcount from #484 tqp where not exists (select plan_handle from [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan where servername = @@servername and plan_handle = tqp.plan_handle and statement_start_offset = tqp.statement_start_offset and statement_end_offset = tqp.statement_end_offset)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_text_query_plan ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' end
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('cc2_query_stats_info', 'c0d_query_stats_info')) begin if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) begin if exists (select c010 from #936 where c010 in ('c13_cursors_info')) insert into #0c5 select qs.sql_handle as c5a0, qs.statement_start_offset as c040, qs.statement_end_offset as cd08, qs.plan_generation_num as c154, qs.plan_handle as c005, qs.creation_time as c176, qs.last_execution_time as ceaf, qs.execution_count as c6da, qs.total_worker_time as ca8d, qs.last_worker_time as c59d, qs.min_worker_time as c470, qs.max_worker_time as c188, qs.total_physical_reads as c142, qs.last_physical_reads as ceef, qs.min_physical_reads as c969, qs.max_physical_reads as c331, qs.total_logical_writes as c27e, qs.last_logical_writes as cecb, qs.min_logical_writes as cac0, qs.max_logical_writes as c36f, qs.total_logical_reads as cbc9, qs.last_logical_reads as ca81, qs.min_logical_reads as c05d, qs.max_logical_reads as ca98, qs.total_clr_time as cfbf, qs.last_clr_time as cb67, qs.min_clr_time as c439, qs.max_clr_time as ccdb, qs.total_elapsed_time as c4c5, qs.last_elapsed_time as ca22, qs.min_elapsed_time as c1f5, qs.max_elapsed_time as c8d3, qs.query_hash as c0cf, qs.query_plan_hash as c118, qs.total_rows as c2e8, qs.last_rows as c635, qs.min_rows as ccae, qs.max_rows as cbd8, qs.statement_sql_handle as ca12, qs.statement_context_id as cf49 from sys.dm_exec_query_stats qs where qs.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg union select distinct c.c5a0 from #807 c) or qs.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) else insert into #0c5 select qs.sql_handle as c5a0, qs.statement_start_offset as c040, qs.statement_end_offset as cd08, qs.plan_generation_num as c154, qs.plan_handle as c005, qs.creation_time as c176, qs.last_execution_time as ceaf, qs.execution_count as c6da, qs.total_worker_time as ca8d, qs.last_worker_time as c59d, qs.min_worker_time as c470, qs.max_worker_time as c188, qs.total_physical_reads as c142, qs.last_physical_reads as ceef, qs.min_physical_reads as c969, qs.max_physical_reads as c331, qs.total_logical_writes as c27e, qs.last_logical_writes as cecb, qs.min_logical_writes as cac0, qs.max_logical_writes as c36f, qs.total_logical_reads as cbc9, qs.last_logical_reads as ca81, qs.min_logical_reads as c05d, qs.max_logical_reads as ca98, qs.total_clr_time as cfbf, qs.last_clr_time as cb67, qs.min_clr_time as c439, qs.max_clr_time as ccdb, qs.total_elapsed_time as c4c5, qs.last_elapsed_time as ca22, qs.min_elapsed_time as c1f5, qs.max_elapsed_time as c8d3, qs.query_hash as c0cf, qs.query_plan_hash as c118, qs.total_rows as c2e8, qs.last_rows as c635, qs.min_rows as ccae, qs.max_rows as cbd8, qs.statement_sql_handle as ca12, qs.statement_context_id as cf49 from sys.dm_exec_query_stats qs where qs.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg) or qs.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) end else if exists (select c010 from #936 where c010 in ('c13_cursors_info')) begin if not exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #0c5 select qs.sql_handle as c5a0, qs.statement_start_offset as c040, qs.statement_end_offset as cd08, qs.plan_generation_num as c154, qs.plan_handle as c005, qs.creation_time as c176, qs.last_execution_time as ceaf, qs.execution_count as c6da, qs.total_worker_time as ca8d, qs.last_worker_time as c59d, qs.min_worker_time as c470, qs.max_worker_time as c188, qs.total_physical_reads as c142, qs.last_physical_reads as ceef, qs.min_physical_reads as c969, qs.max_physical_reads as c331, qs.total_logical_writes as c27e, qs.last_logical_writes as cecb, qs.min_logical_writes as cac0, qs.max_logical_writes as c36f, qs.total_logical_reads as cbc9, qs.last_logical_reads as ca81, qs.min_logical_reads as c05d, qs.max_logical_reads as ca98, qs.total_clr_time as cfbf, qs.last_clr_time as cb67, qs.min_clr_time as c439, qs.max_clr_time as ccdb, qs.total_elapsed_time as c4c5, qs.last_elapsed_time as ca22, qs.min_elapsed_time as c1f5, qs.max_elapsed_time as c8d3, qs.query_hash as c0cf, qs.query_plan_hash as c118, qs.total_rows as c2e8, qs.last_rows as c635, qs.min_rows as ccae, qs.max_rows as cbd8, qs.statement_sql_handle as ca12, qs.statement_context_id as cf49 from sys.dm_exec_query_stats qs where qs.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct c.c5a0 from #807 c) or qs.plan_handle in (select distinct r.plan_handle from #3fb r) end else insert into #0c5 select qs.sql_handle as c5a0, qs.statement_start_offset as c040, qs.statement_end_offset as cd08, qs.plan_generation_num as c154, qs.plan_handle as c005, qs.creation_time as c176, qs.last_execution_time as ceaf, qs.execution_count as c6da, qs.total_worker_time as ca8d, qs.last_worker_time as c59d, qs.min_worker_time as c470, qs.max_worker_time as c188, qs.total_physical_reads as c142, qs.last_physical_reads as ceef, qs.min_physical_reads as c969, qs.max_physical_reads as c331, qs.total_logical_writes as c27e, qs.last_logical_writes as cecb, qs.min_logical_writes as cac0, qs.max_logical_writes as c36f, qs.total_logical_reads as cbc9, qs.last_logical_reads as ca81, qs.min_logical_reads as c05d, qs.max_logical_reads as ca98, qs.total_clr_time as cfbf, qs.last_clr_time as cb67, qs.min_clr_time as c439, qs.max_clr_time as ccdb, qs.total_elapsed_time as c4c5, qs.last_elapsed_time as ca22, qs.min_elapsed_time as c1f5, qs.max_elapsed_time as c8d3, qs.query_hash as c0cf, qs.query_plan_hash as c118, qs.total_rows as c2e8, qs.last_rows as c635, qs.min_rows as ccae, qs.max_rows as cbd8, qs.statement_sql_handle as ca12, qs.statement_context_id as cf49 from sys.dm_exec_query_stats qs where qs.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c) or qs.plan_handle in (select distinct r.plan_handle from #3fb r) end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_query_stats ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('cc2_procedure_stats_info', 'c0d_procedure_stats_info')) begin if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) begin if exists (select c010 from #936 where c010 in ('c13_cursors_info')) insert into #6c8 select ps.database_id as cfba, ps.object_id as c1c7, ps.type as c3a7, ps.type_desc as cea2, ps.sql_handle as c5a0, ps.plan_handle as c005, ps.cached_time as ca64, ps.last_execution_time as ceaf, ps.execution_count as c6da, ps.total_worker_time as ca8d, ps.last_worker_time as c59d, ps.min_worker_time as c470, ps.max_worker_time as c188, ps.total_physical_reads as c142, ps.last_physical_reads as ceef, ps.min_physical_reads as c969, ps.max_physical_reads as c331, ps.total_logical_writes as c27e, ps.last_logical_writes as cecb, ps.min_logical_writes as cac0, ps.max_logical_writes as c36f, ps.total_logical_reads as cbc9, ps.last_logical_reads as ca81, ps.min_logical_reads as c05d, ps.max_logical_reads as ca98, ps.total_elapsed_time as c4c5, ps.last_elapsed_time as ca22, ps.min_elapsed_time as c1f5, ps.max_elapsed_time as c8d3 from sys.dm_exec_procedure_stats ps where ps.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg union select distinct c.c5a0 from #807 c) or ps.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) else insert into #6c8 select ps.database_id as cfba, ps.object_id as c1c7, ps.type as c3a7, ps.type_desc as cea2, ps.sql_handle as c5a0, ps.plan_handle as c005, ps.cached_time as ca64, ps.last_execution_time as ceaf, ps.execution_count as c6da, ps.total_worker_time as ca8d, ps.last_worker_time as c59d, ps.min_worker_time as c470, ps.max_worker_time as c188, ps.total_physical_reads as c142, ps.last_physical_reads as ceef, ps.min_physical_reads as c969, ps.max_physical_reads as c331, ps.total_logical_writes as c27e, ps.last_logical_writes as cecb, ps.min_logical_writes as cac0, ps.max_logical_writes as c36f, ps.total_logical_reads as cbc9, ps.last_logical_reads as ca81, ps.min_logical_reads as c05d, ps.max_logical_reads as ca98, ps.total_elapsed_time as c4c5, ps.last_elapsed_time as ca22, ps.min_elapsed_time as c1f5, ps.max_elapsed_time as c8d3 from sys.dm_exec_procedure_stats ps where ps.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg) or ps.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) end else if exists (select c010 from #936 where c010 in ('c13_cursors_info')) begin if not exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #6c8 select ps.database_id as cfba, ps.object_id as c1c7, ps.type as c3a7, ps.type_desc as cea2, ps.sql_handle as c5a0, ps.plan_handle as c005, ps.cached_time as ca64, ps.last_execution_time as ceaf, ps.execution_count as c6da, ps.total_worker_time as ca8d, ps.last_worker_time as c59d, ps.min_worker_time as c470, ps.max_worker_time as c188, ps.total_physical_reads as c142, ps.last_physical_reads as ceef, ps.min_physical_reads as c969, ps.max_physical_reads as c331, ps.total_logical_writes as c27e, ps.last_logical_writes as cecb, ps.min_logical_writes as cac0, ps.max_logical_writes as c36f, ps.total_logical_reads as cbc9, ps.last_logical_reads as ca81, ps.min_logical_reads as c05d, ps.max_logical_reads as ca98, ps.total_elapsed_time as c4c5, ps.last_elapsed_time as ca22, ps.min_elapsed_time as c1f5, ps.max_elapsed_time as c8d3 from sys.dm_exec_procedure_stats ps where ps.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct c.c5a0 from #807 c) or ps.plan_handle in (select distinct r.plan_handle from #3fb r) end else insert into #6c8 select ps.database_id as cfba, ps.object_id as c1c7, ps.type as c3a7, ps.type_desc as cea2, ps.sql_handle as c5a0, ps.plan_handle as c005, ps.cached_time as ca64, ps.last_execution_time as ceaf, ps.execution_count as c6da, ps.total_worker_time as ca8d, ps.last_worker_time as c59d, ps.min_worker_time as c470, ps.max_worker_time as c188, ps.total_physical_reads as c142, ps.last_physical_reads as ceef, ps.min_physical_reads as c969, ps.max_physical_reads as c331, ps.total_logical_writes as c27e, ps.last_logical_writes as cecb, ps.min_logical_writes as cac0, ps.max_logical_writes as c36f, ps.total_logical_reads as cbc9, ps.last_logical_reads as ca81, ps.min_logical_reads as c05d, ps.max_logical_reads as ca98, ps.total_elapsed_time as c4c5, ps.last_elapsed_time as ca22, ps.min_elapsed_time as c1f5, ps.max_elapsed_time as c8d3 from sys.dm_exec_procedure_stats ps where ps.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c) or ps.plan_handle in (select distinct r.plan_handle from #3fb r) end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_procedure_stats ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('cc2_trigger_stats_info', 'c0d_trigger_stats_info')) begin if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) begin if exists (select c010 from #936 where c010 in ('c13_cursors_info')) insert into #9f8 select ts.database_id as cfba, ts.object_id as c1c7, ts.type as c3a7, ts.type_desc as cea2, ts.sql_handle as c5a0, ts.plan_handle as c005, ts.cached_time as ca64, ts.last_execution_time as ceaf, ts.execution_count as c6da, ts.total_worker_time as ca8d, ts.last_worker_time as c59d, ts.min_worker_time as c470, ts.max_worker_time as c188, ts.total_physical_reads as c142, ts.last_physical_reads as ceef, ts.min_physical_reads as c969, ts.max_physical_reads as c331, ts.total_logical_writes as c27e, ts.last_logical_writes as cecb, ts.min_logical_writes as cac0, ts.max_logical_writes as c36f, ts.total_logical_reads as cbc9, ts.last_logical_reads as ca81, ts.min_logical_reads as c05d, ts.max_logical_reads as ca98, ts.total_elapsed_time as c4c5, ts.last_elapsed_time as ca22, ts.min_elapsed_time as c1f5, ts.max_elapsed_time as c8d3 from sys.dm_exec_trigger_stats ts where ts.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg union select distinct c.c5a0 from #807 c) or ts.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) else insert into #9f8 select ts.database_id as cfba, ts.object_id as c1c7, ts.type as c3a7, ts.type_desc as cea2, ts.sql_handle as c5a0, ts.plan_handle as c005, ts.cached_time as ca64, ts.last_execution_time as ceaf, ts.execution_count as c6da, ts.total_worker_time as ca8d, ts.last_worker_time as c59d, ts.min_worker_time as c470, ts.max_worker_time as c188, ts.total_physical_reads as c142, ts.last_physical_reads as ceef, ts.min_physical_reads as c969, ts.max_physical_reads as c331, ts.total_logical_writes as c27e, ts.last_logical_writes as cecb, ts.min_logical_writes as cac0, ts.max_logical_writes as c36f, ts.total_logical_reads as cbc9, ts.last_logical_reads as ca81, ts.min_logical_reads as c05d, ts.max_logical_reads as ca98, ts.total_elapsed_time as c4c5, ts.last_elapsed_time as ca22, ts.min_elapsed_time as c1f5, ts.max_elapsed_time as c8d3 from sys.dm_exec_trigger_stats ts where ts.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct qmg.c5a0 from #a31 qmg) or ts.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) end else if exists (select c010 from #936 where c010 in ('c13_cursors_info')) begin if not exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #9f8 select ts.database_id as cfba, ts.object_id as c1c7, ts.type as c3a7, ts.type_desc as cea2, ts.sql_handle as c5a0, ts.plan_handle as c005, ts.cached_time as ca64, ts.last_execution_time as ceaf, ts.execution_count as c6da, ts.total_worker_time as ca8d, ts.last_worker_time as c59d, ts.min_worker_time as c470, ts.max_worker_time as c188, ts.total_physical_reads as c142, ts.last_physical_reads as ceef, ts.min_physical_reads as c969, ts.max_physical_reads as c331, ts.total_logical_writes as c27e, ts.last_logical_writes as cecb, ts.min_logical_writes as cac0, ts.max_logical_writes as c36f, ts.total_logical_reads as cbc9, ts.last_logical_reads as ca81, ts.min_logical_reads as c05d, ts.max_logical_reads as ca98, ts.total_elapsed_time as c4c5, ts.last_elapsed_time as ca22, ts.min_elapsed_time as c1f5, ts.max_elapsed_time as c8d3 from sys.dm_exec_trigger_stats ts where ts.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c union select distinct c.c5a0 from #807 c) or ts.plan_handle in (select distinct r.plan_handle from #3fb r) end else insert into #9f8 select ts.database_id as cfba, ts.object_id as c1c7, ts.type as c3a7, ts.type_desc as cea2, ts.sql_handle as c5a0, ts.plan_handle as c005, ts.cached_time as ca64, ts.last_execution_time as ceaf, ts.execution_count as c6da, ts.total_worker_time as ca8d, ts.last_worker_time as c59d, ts.min_worker_time as c470, ts.max_worker_time as c188, ts.total_physical_reads as c142, ts.last_physical_reads as ceef, ts.min_physical_reads as c969, ts.max_physical_reads as c331, ts.total_logical_writes as c27e, ts.last_logical_writes as cecb, ts.min_logical_writes as cac0, ts.max_logical_writes as c36f, ts.total_logical_reads as cbc9, ts.last_logical_reads as ca81, ts.min_logical_reads as c05d, ts.max_logical_reads as ca98, ts.total_elapsed_time as c4c5, ts.last_elapsed_time as ca22, ts.min_elapsed_time as c1f5, ts.max_elapsed_time as c8d3 from sys.dm_exec_trigger_stats ts where ts.sql_handle in (select distinct r.sql_handle from #3fb r union select distinct c.most_recent_sql_handle from #22c c) or ts.plan_handle in (select distinct r.plan_handle from #3fb r) end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_trigger_stats ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_cached_plans_info')) begin if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) insert into #f08 select cp.bucketid as ce7c, cp.refcounts as cc8f, cp.usecounts as c573, cp.size_in_bytes as c873, cp.memory_object_address as c50d, cp.cacheobjtype as cc86, cp.objtype as c838, cp.plan_handle as c005, cp.pool_id as ca93, cp.parent_plan_handle as c66e from sys.dm_exec_cached_plans cp where cp.plan_handle in (select distinct r.plan_handle from #3fb r union select distinct qmg.c005 from #a31 qmg) else insert into #f08 select cp.bucketid as ce7c, cp.refcounts as cc8f, cp.usecounts as c573, cp.size_in_bytes as c873, cp.memory_object_address as c50d, cp.cacheobjtype as cc86, cp.objtype as c838, cp.plan_handle as c005, cp.pool_id as ca93, cp.parent_plan_handle as c66e from sys.dm_exec_cached_plans cp where cp.plan_handle in (select distinct r.plan_handle from #3fb r) end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_cached_plans ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_session_tempdb_usage_kb', 'c13_session_max_tempdb_usage_kb', 'c13_session_tempdb_usage_info')) insert into #3fa select spu.session_id as cd6f, spu.database_id as cfba, spu.user_objects_alloc_page_count as c8b9, spu.user_objects_dealloc_page_count as cbb8, spu.internal_objects_alloc_page_count as c559, spu.internal_objects_dealloc_page_count as c2ca, spu.user_objects_deferred_dealloc_page_count as cd3d, (select login_time from sys.dm_exec_sessions where session_id = s.session_id) as cd91 from sys.dm_db_session_space_usage spu inner join #4d3 s on (spu.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_db_session_space_usage ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_task_tempdb_usage_kb', 'c0d_task_max_tempdb_usage_kb', 'c0d_task_tempdb_usage_info')) insert into #718 select tsu.task_address as c848, tsu.is_remote_task as c655, tsu.session_id as cd6f, tsu.request_id as c9be, tsu.exec_context_id as cb85, tsu.database_id as cfba, tsu.user_objects_alloc_page_count as c8b9, tsu.user_objects_dealloc_page_count as cbb8, tsu.internal_objects_alloc_page_count as c559, tsu.internal_objects_dealloc_page_count as c2ca, (select start_time from sys.dm_exec_requests where session_id = r.session_id and request_id = r.request_id) as c15a from sys.dm_db_task_space_usage tsu inner join #3fb r on (tsu.session_id = r.session_id and tsu.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_db_task_space_usage ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_cursor_count', 'c13_max_cursor_dormant_duration', 'c13_cursors_info')) insert into #807 select c.session_id as cd6f, c.cursor_id as c98f, c.name as c905, c.properties as c79d, c.sql_handle as c5a0, c.statement_start_offset as c040, c.statement_end_offset as cd08, c.plan_generation_num as c154, c.creation_time as c176, c.is_open as c1e6, c.is_async_population as c1c7, c.is_close_on_commit as cdca, c.fetch_status as c874, c.fetch_buffer_size as c4ab, c.fetch_buffer_start as c8c1, c.ansi_position as c798, c.worker_time as cda9, c.reads as cdc2, c.writes as c7d3, c.dormant_duration as cb4f, c.statement_sql_handle as ca12, c.statement_context_id as cf49, (select login_time from sys.dm_exec_sessions where session_id = s.session_id) as cd91 from #4d3 s cross apply sys.dm_exec_cursors(session_id) c select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_exec_cursors ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_service_broker_info')) insert into #3af select bat.spid as c10e, bat.database_id as cfba, bat.queue_id as c0dc, bat.procedure_name as c698, bat.execute_as as c11f, (select login_time from sys.dm_exec_sessions where session_id = s.session_id) as cd91 from sys.dm_broker_activated_tasks bat inner join #4d3 s on (bat.spid = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_broker_activated_tasks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_workers_info')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) insert into #370 select w.worker_address as cb5d, w.status as c6a4, w.is_preemptive as c324, w.is_fiber as c194, w.is_sick as c6c7, w.is_in_cc_exception as c952, w.is_fatal_exception as cfe2, w.is_inside_catch as ca9d, w.is_in_polling_io_completion_routine as c218, w.context_switch_count as cde7, w.pending_io_count as c523, w.pending_io_byte_count as c153, w.pending_io_byte_average as c447, w.wait_started_ms_ticks as c9b2, w.wait_resumed_ms_ticks as c168, w.task_bound_ms_ticks as c86b, w.worker_created_ms_ticks as c4da, w.exception_num as c667, w.exception_severity as c3b1, w.exception_address as c1d5, w.affinity as c46f, w.state as c80c, w.start_quantum as c452, w.end_quantum as c1f6, w.last_wait_type as cf03, w.return_code as ce79, w.quantum_used as c467, w.max_quantum as c107, w.boost_count as c756, w.tasks_processed_count as c9d9, w.fiber_address as cb6e, w.task_address as c848, w.memory_object_address as c50d, w.thread_address as c535, w.signal_worker_address as c9e3, w.scheduler_address as c0e5, w.processor_group as c797, (select start_time from sys.dm_exec_requests where session_id = r.session_id and request_id = r.request_id) as c15a from sys.dm_os_workers w inner join #445 t on (w.task_address = t.c848) join #3fb r on (t.cd6f = r.session_id and t.c9be = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_os_workers ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_threads_info')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) insert into #60b select th.thread_address as c535, th.started_by_sqlservr as cf0f, th.os_thread_id as c3ae, th.status as c6a4, th.instruction_address as ce3f, th.creation_time as c176, th.kernel_time as c1f2, th.usermode_time as c454, th.stack_base_address as cde2, th.stack_end_address as c4df, th.stack_bytes_committed as c5ee, th.stack_bytes_used as c7c7, th.affinity as c46f, th.priority as ca4c, th.locale as c72b, th.token as c400, th.is_impersonating as cc99, th.is_waiting_on_loader_lock as ca09, th.fiber_data as c318, th.thread_handle as c3e2, th.event_handle as cd90, th.scheduler_address as c0e5, th.worker_address as cb5d, th.fiber_context_address as cc52, th.self_address as c94a, th.processor_group as c797, (select start_time from sys.dm_exec_requests where session_id = r.session_id and request_id = r.request_id) as c15a from sys.dm_os_threads th inner join #370 w on (th.worker_address = w.cb5d) inner join #445 t on (w.c848 = t.c848) inner join #3fb r on (t.cd6f = r.session_id and t.c9be = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'insert into select ... from sys.dm_os_threads ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' if exists (select c010 from #936 where c010 in ('c13_locks_info', 'c0d_locks_info', 'c13_waiting_tasks_info', 'c0d_wait_resource_info')) begin create table #7a1 (c9f7 nvarchar(60), ce16 int, cdac bigint, c1c7 int, c7ac int, ca0d int, cd1c bigint, cde5 bigint, c92a nvarchar(256), c2e2 nvarchar(256), ca34 nvarchar(256), cea2 nvarchar(60), c722 int, primary key (c9f7, ce16, cdac)) if exists (select c010 from #936 where c010 in ('c13_locks_info', 'c0d_locks_info')) insert into #7a1 (c9f7, ce16, cdac) select distinct c9f7, ce16, cdac from #29d where c9f7 in ('ALLOCATION_UNIT', 'OBJECT', 'HOBT', 'PAGE', 'KEY', 'RID') if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) begin update #560 set c839 = (select replace(value, 'dbid=', '') from (select c.value('.', 'nvarchar(max)') as value from (select cast(N'<r>' + replace(ca11, ' ', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where value like 'dbid=%') from #560 wt where wt.ca11 like 'databaselock %' or wt.ca11 like 'objectlock %' or wt.ca11 like 'pagelock %' or wt.ca11 like 'keylock %' or wt.ca11 like 'ridlock %' or wt.ca11 like 'hobtlock %' update #560 set c9ae = (select replace(value, 'objid=', '') from (select c.value('.', 'nvarchar(max)') as value from (select cast(N'<r>' + replace(ca11, ' ', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where value like 'objid=%') from #560 wt where wt.ca11 like 'objectlock %' update #560 set cf03 = (select replace(value, 'associatedObjectId=', '') from (select c.value('.', 'nvarchar(max)') as value from (select cast(N'<r>' + replace(ca11, ' ', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where value like 'associatedObjectId=%') from #560 wt where wt.ca11 like 'pagelock %' or wt.ca11 like 'keylock %' or wt.ca11 like 'ridlock %' or wt.ca11 like 'hobtlock %' insert into #7a1 (c9f7, ce16, cdac) select distinct 'OBJECT', c839, c9ae from #560 wt where wt.ca11 like 'objectlock %' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'OBJECT' and rdaeid.ce16 = wt.c839 and rdaeid.cdac = wt.c9ae) insert into #7a1 (c9f7, ce16, cdac) select distinct 'KEY', c839, cf03 from #560 wt where wt.ca11 like 'keylock %' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'KEY' and rdaeid.ce16 = wt.c839 and rdaeid.cdac = wt.cf03) insert into #7a1 (c9f7, ce16, cdac) select distinct 'RID', c839, cf03 from #560 wt where wt.ca11 like 'ridlock %' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'RID' and rdaeid.ce16 = wt.c839 and rdaeid.cdac = wt.cf03) insert into #7a1 (c9f7, ce16, cdac) select distinct 'PAGE', c839, cf03 from #560 wt where wt.ca11 like 'pagelock %' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'PAGE' and rdaeid.ce16 = wt.c839 and rdaeid.cdac = wt.cf03) insert into #7a1 (c9f7, ce16, cdac) select distinct 'HOBT', c839, cf03 from #560 wt where wt.ca11 like 'hobtlock %' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and rdaeid.ce16 = wt.c839 and rdaeid.cdac = wt.cf03) end if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) begin insert into #7a1 (c9f7, ce16, cdac) select distinct 'OBJECT', (select wait_resource_database_id from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id) as xy), (select wait_resource_object_id from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3) as wait_resource_object_id) as xy) from #3fb r where r.wait_type like 'LCK_%' and r.wait_resource like 'OBJECT%' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'OBJECT' and rdaeid.ce16 = (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) and rdaeid.cdac = (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3)) insert into #7a1 (c9f7, ce16, cdac) select distinct 'KEY', (select wait_resource_database_id from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id) as xy), (select wait_resource_object_id from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(replace(replace(wait_resource, '(', ':'), ')', ':'), ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3) as wait_resource_object_id) as xy) from #3fb r where r.wait_type like 'LCK_%' and r.wait_resource like 'KEY%' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'KEY' and rdaeid.ce16 = (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) and rdaeid.cdac = (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(replace(replace(wait_resource, '(', ':'), ')', ':'), ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3)) insert into #7a1 (c9f7, ce16, cdac) select distinct 'HOBT', (select wait_resource_database_id from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id) as xy), (select wait_resource_object_id from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3) as wait_resource_object_id) as xy) from #3fb r where r.wait_type like 'LCK_%' and r.wait_resource like 'HOBT%' and not exists (select c9f7 from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and rdaeid.ce16 = (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) and rdaeid.cdac = (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3)) end declare c1b7 cursor for select distinct ce16 from #7a1 open c1b7 fetch next from c1b7 into @987 while (@@fetch_status = 0) begin set @05b = 'use [' + db_name(@987) + '] update #7a1 set c1c7 = o.object_id, c7ac = s.schema_id, c92a = o.name, c2e2 = s.name from #7a1 rdaeid inner join sys.objects o with (nolock) on (rdaeid.cdac = o.object_id) inner join sys.schemas s with (nolock) on (o.schema_id = s.schema_id) where rdaeid.ce16 = db_id() and rdaeid.c9f7 in (''OBJECT'')' select @4e4 = getdate() exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = '''Failed: sp_executesql N''' + @05b + '''''' raiserror (@a53, 17, 1) set @datetime = NULL close c1b7 deallocate c1b7 return 1 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'use [' + db_name(@987) + '] update #7a1 set object_id ... (''OBJECT'') ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' set @05b = 'use [' + db_name(@987) + '] update #7a1 set c1c7 = o.object_id, c7ac = s.schema_id, ca0d = i.index_id, cd1c = p.partition_id, c92a = o.name, c2e2 = s.name, ca34 = i.name, cea2 = i.type_desc, c722 = p.partition_number from #7a1 rdaeid inner join sys.partitions p with (nolock) on (rdaeid.cdac = p.partition_id) inner join sys.indexes i with (nolock) on (p.object_id = i.object_id and p.index_id = i.index_id) inner join sys.objects o with (nolock) on (i.object_id = o.object_id) inner join sys.schemas s with (nolock) on (o.schema_id = s.schema_id) where rdaeid.ce16 = db_id() and rdaeid.c9f7 in (''HOBT'', ''PAGE'', ''KEY'', ''RID'')' select @4e4 = getdate() exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = '''Failed: sp_executesql N''' + @05b + '''''' raiserror (@a53, 17, 1) set @datetime = NULL close c1b7 deallocate c1b7 return 1 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'use [' + db_name(@987) + '] update #7a1 object_id ... (''HOBT'', ''PAGE'', ''KEY'', ''RID'') ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' set @05b = 'use [' + db_name(@987) + '] update #7a1 set c1c7 = o.object_id, c7ac = s.schema_id, ca0d = i.index_id, cd1c = p.partition_id, cde5 = au.allocation_unit_id, c92a = o.name, c2e2 = s.name, ca34 = i.name, cea2 = i.type_desc, c722 = p.partition_number from #7a1 rdaeid inner join sys.allocation_units au with (nolock) on (rdaeid.cdac = au.allocation_unit_id) inner join sys.partitions p with (nolock) on (au.container_id = p.hobt_id) inner join sys.indexes i with (nolock) on (p.object_id = i.object_id and p.index_id = i.index_id) inner join sys.objects o with (nolock) on (i.object_id = o.object_id) inner join sys.schemas s with (nolock) on (o.schema_id = s.schema_id) where rdaeid.ce16 = db_id() and rdaeid.c9f7 in (''ALLOCATION_UNIT'')' select @4e4 = getdate() exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = '''Failed: sp_executesql N''' + @05b + '''''' raiserror (@a53, 17, 1) set @datetime = NULL close c1b7 deallocate c1b7 return 1 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'use [' + db_name(@987) + '] update #7a1 object_id ... (''ALLOCATION_UNIT'') ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' fetch next from c1b7 into @987 end close c1b7 deallocate c1b7 end
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_cursors_info')) update #3ec set cursors_info = (select cursors_info.cursors_info, cursors.cd6f as session_id, cursors.c98f as cursor_id, cursors.c905 as name, cursors.c79d as properties, sys.fn_varbintohexstr(cursors.c5a0) as sql_handle, cursors.c040 as statement_start_offset, cursors.cd08 as statement_end_offset, cursors.c154 as plan_generation_num, cursors.c176 as creation_time, cursors.c1e6 as is_open, cursors.c1c7 as is_async_population, cursors.cdca as is_close_on_commit, cursors.c874 as fetch_status, cursors.c4ab as fetch_buffer_size, cursors.c8c1 as fetch_buffer_start, cursors.c798 as ansi_position, cursors.cda9 as worker_time, cursors.cdc2 as reads, cursors.c7d3 as writes, cursors.cb4f as dormant_duration, sys.fn_varbintohexstr(cursors.ca12) as statement_sql_handle, cursors.cf49 as statement_context_id, cd91 as login_time from (select null as cursors_info) as cursors_info cross join #807 cursors where cursors.cd6f = si.session_id and cursors.cd91 = s.login_time for xml auto) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set cursors_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_ios_per_second')) update #8db set tasks_ios_per_second = (select case sum(tasks.c523) when 0 then NULL else case when datediff(second, r.start_time, max(tasks.ctime)) > 0 then sum(tasks.c523) / datediff(second, r.start_time, max(tasks.ctime)) else NULL end end as tasks_ios_per_second from #445 tasks where tasks.cd6f = ri.session_id and tasks.c9be = ri.request_id and tasks.c523 > 0 and tasks.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set tasks_ios_per_second ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_session_tempdb_usage_kb')) update #3ec set session_tempdb_usage_kb = (select (session_space_usage.c8b9 - session_space_usage.cbb8 - session_space_usage.cd3d) + (session_space_usage.c559 - session_space_usage.c2ca) * 8 as session_space_usage_kb from #3fa session_space_usage where session_space_usage.cd6f = si.session_id and (((session_space_usage.c8b9 - session_space_usage.cbb8 - session_space_usage.cd3d) + (session_space_usage.c559 - session_space_usage.c2ca)) > 0) and session_space_usage.cd91 = s.login_time) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set session_tempdb_usage_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_max_used_memory_kb')) update #8db set query_memory_grants_max_used_memory_kb = (select query_memory_grants.c03c as query_memory_grants_max_used_memory_kb from #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_max_used_memory_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_lock_count')) update #8db set lock_count = (select sum(tran_locks.c3a9) as lock_count from #29d tran_locks where tran_locks.c28f = ri.session_id and tran_locks.c93a = ri.request_id) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set lock_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_lock_count')) update #3ec set lock_count = (select sum(tran_locks.c3a9) as lock_count from #29d tran_locks where tran_locks.c28f = si.session_id) from #3ec si where si.session_id not in (select ri.session_id from #8db ri) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set lock_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_pending_io')) update #8db set tasks_pending_io = (select sum(tasks.c523) as tasks_pending_io from #445 tasks where tasks.cd6f = ri.session_id and tasks.c9be = ri.request_id and tasks.c523 > 0 and tasks.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set tasks_pending_io ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_begin_time')) update #3ec set transaction_begin_time = (select tat.cd19 as transaction_begin_time from #4e4 tst inner join #715 tat on (tst.c010 = tat.c010) where tst.cd6f = si.session_id) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set transaction_begin_time ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_transaction_begin_time')) if exists (select c010 from #936 where c010 in ('c13_lock_count', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_lock_owner_id', 'c13_locks_info', 'c0d_locks_info')) update #8db set transaction_begin_time = (select tat.cd19 as transaction_begin_time from #715 tat where tat.c010 = (select max(tl.c042) from #29d tl where tl.c28f = ri.session_id and tl.c93a = ri.request_id)) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set transaction_begin_time ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_workers_info')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) update #8db set workers_info = (select workers_info.workers_info, workers.c6a4 as status, workers.c324 as is_preemptive, workers.c194 as is_fiber, workers.c6c7 as is_sick, workers.c952 as is_in_cc_exception, workers.cfe2 as is_fatal_exception, workers.ca9d as is_inside_catch, workers.c218 as is_in_polling_io_completion_routine, workers.cde7 as context_switch_count, workers.c523 as pending_io_count, workers.c153 as pending_io_byte_count, workers.c447 as pending_io_byte_average, workers.c9b2 as wait_started_ms_ticks, workers.c168 as wait_resumed_ms_ticks, workers.c86b as task_bound_ms_ticks, workers.c4da as worker_created_ms_ticks, workers.c667 as exception_num, workers.c3b1 as exception_severity, workers.c46f as affinity, workers.c80c as state, workers.c452 as start_quantum, workers.c1f6 as end_quantum, workers.cf03 as last_wait_type, workers.ce79 as return_code, workers.c467 as quantum_used, workers.c107 as max_quantum, workers.c756 as boost_count, workers.c9d9 as tasks_processed_count, workers.c797 as processor_group, c15a as request_start_time from (select null as workers_info) as workers_info cross join #370 workers where workers.c848 = t.c848 and workers.c15a = t.c15a for xml auto) from #8db ri inner join #445 t on (ri.session_id = t.cd6f and ri.request_id = t.c9be) inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where t.c15a = r.start_time select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set workers ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_threads_info')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) update #8db set threads_info = (select threads_info.threads_info, threads.cf0f as started_by_sqlservr, threads.c3ae as os_thread_id, threads.c6a4 as status, threads.c176 as creation_time, threads.c1f2 as kernel_time, threads.c454 as usermode_time, threads.c5ee as stack_bytes_committed, threads.c7c7 as stack_bytes_used, threads.c46f as affinity, threads.ca4c as priority, threads.c72b as locale, threads.cc99 as is_impersonating, threads.ca09 as is_waiting_on_loader_lock, threads.c797 as processor_group, c15a as request_start_time from (select null as threads_info) as threads_info cross join #60b threads where threads.cb5d = t.cb5d and threads.c15a = t.c15a for xml auto) from #8db ri inner join #445 t on (ri.session_id = t.cd6f and ri.request_id = t.c9be) inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where t.c15a = r.start_time select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set threads ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_info')) update #8db set query_memory_grants_info = (select query_memory_grants_info.query_memory_grants_info, query_memory_grants.cd6f as session_id, query_memory_grants.c9be as request_id, query_memory_grants.c9f5 as scheduler_id, query_memory_grants.cf91 as dop, query_memory_grants.c956 as request_time, query_memory_grants.c25e as grant_time, query_memory_grants.c40a as requested_memory_kb, query_memory_grants.c8d8 as granted_memory_kb, query_memory_grants.cdd1 as required_memory_kb, query_memory_grants.cbf7 as used_memory_kb, query_memory_grants.c03c as max_used_memory_kb, query_memory_grants.cf5e as query_cost, query_memory_grants.cccd as timeout_sec, query_memory_grants.cab5 as resource_semaphore_id, query_memory_grants.c0dc as queue_id, query_memory_grants.cff6 as wait_order, query_memory_grants.c9e2 as is_next_candidate, query_memory_grants.c4b8 as wait_time_ms, sys.fn_varbintohexstr(query_memory_grants.c005) as plan_handle, sys.fn_varbintohexstr(query_memory_grants.c5a0) as sql_handle, query_memory_grants.c670 as group_id, query_memory_grants.ca93 as pool_id, query_memory_grants.c154 as is_small, query_memory_grants.cda4 as ideal_memory_kb, c15a as request_start_time from (select null as query_memory_grants_info) as query_memory_grants_info cross join #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_info')) update #8db set tasks_info = (select tasks_info.tasks_info, tasks.c894 as task_state, tasks.cea3 as context_switches_count, tasks.c523 as pending_io_count, tasks.c153 as pending_io_byte_count, tasks.c447 as pending_io_byte_average, tasks.c9f5 as scheduler_id, tasks.cd6f as session_id, tasks.cb85 as exec_context_id, tasks.c9be as request_id, c15a as request_start_time, ctime from (select null as tasks_info) as tasks_info cross join #445 tasks where tasks.cd6f = ri.session_id and tasks.c9be = ri.request_id and tasks.c15a = r.start_time order by tasks.c9be, tasks.cb85 for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set tasks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) update #8db set wait_resource_info = 'HOBT = ' + (select case wait_resource_database_id when 32767 then '[Resource Database]' else db_name(wait_resource_database_id) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and wait_resource_database_id = rdaeid.ce16 and wait_resource_object_id = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and wait_resource_database_id = rdaeid.ce16 and wait_resource_object_id = rdaeid.cdac) from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id, (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3) as wait_resource_object_id) as xy) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where r.wait_type like 'LCK_%' and r.wait_resource like 'HOBT%' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set wait_resource_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) update #8db set wait_resource_info = 'DATABASE = ' + (select case wait_resource_database_id when 32767 then '[Resource Database]' else db_name(wait_resource_database_id) end from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id) as xy) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where r.wait_type like 'LCK_%' and r.wait_resource like 'DATABASE%' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set wait_resource_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_info')) update #3ec set transaction_info = (select transaction_info.transaction_info, session_transactions.cd6f as session_id, active_transactions.c010 as transaction_id, active_transactions.c905 as name, active_transactions.cd19 as transaction_begin_time, active_transactions.c8d0 as transaction_type, database_transactions.cfba as database_id, database_transactions.c590 as database_transaction_begin_time, database_transactions.cfc2 as database_transaction_type, database_transactions.c104 as database_transaction_state, database_transactions.cb0a as database_transaction_log_record_count, database_transactions.c31f as database_transaction_log_bytes_used from (select null as transaction_info) as transaction_info cross join #4e4 session_transactions inner join #715 active_transactions on (session_transactions.c010 = active_transactions.c010) inner join #43a database_transactions on (session_transactions.c010 = database_transactions.c010) where session_transactions.cd6f = si.session_id order by session_transactions.cd6f, session_transactions.c010, database_transactions.cfba for xml auto) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set transaction_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_transaction_info')) if exists (select c010 from #936 where c010 in ('c13_lock_count', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_lock_owner_id', 'c13_locks_info', 'c0d_locks_info')) update #8db set transaction_info = (select transaction_info.transaction_info, session_transactions.cd6f as session_id, active_transactions.c010 as transaction_id, active_transactions.c905 as name, active_transactions.cd19 as transaction_begin_time, active_transactions.c8d0 as transaction_type, database_transactions.cfba as database_id, database_transactions.c590 as database_transaction_begin_time, database_transactions.cfc2 as database_transaction_type, database_transactions.c104 as database_transaction_state, database_transactions.cb0a as database_transaction_log_record_count, database_transactions.c31f as database_transaction_log_bytes_used from (select null as transaction_info) as transaction_info cross join #4e4 session_transactions right join #715 active_transactions on (session_transactions.c010 = active_transactions.c010) inner join #43a database_transactions on (active_transactions.c010 = database_transactions.c010) where active_transactions.c010 = (select max(tl.c042) from #29d tl where tl.c28f = ri.session_id and tl.c93a = ri.request_id) order by active_transactions.c010, database_transactions.cfba for xml auto) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set transaction_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_max_cursor_dormant_duration')) update #3ec set max_cursor_dormant_duration = (select max(cursors.cb4f) as dormant_duration from #807 cursors where cursors.cd6f = si.session_id and cursors.cd91 = s.login_time) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set max_cursor_dormant_duration ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_read_bytes_per_second')) update #8db set read_bytes_per_second = (select case r.reads when 0 then NULL else case when datediff(second, r.start_time, r.ctime) > 0 then r.reads / datediff(second, r.start_time, r.ctime) else NULL end end as read_bytes_per_second) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set read_bytes_per_second ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_cached_plans_info')) update #8db set cached_plans_info = (select cached_plans_info.cached_plans_info, cached_plans.ce7c as bucketid, cached_plans.cc8f as refcounts, cached_plans.c573 as usecounts, cached_plans.c873 as size_in_bytes, sys.fn_varbintohexstr(cached_plans.c50d) as memory_object_address, cached_plans.cc86 as cacheobjtype, cached_plans.c838 as objtype, sys.fn_varbintohexstr(cached_plans.c005) as plan_handle, cached_plans.ca93 as pool_id, sys.fn_varbintohexstr(cached_plans.c66e) as parent_plan_handle from (select null as cached_plans_info) as cached_plans_info cross join #f08 cached_plans where cached_plans.c005 = r.plan_handle for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set cached_plans_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_plan_text_checksum')) update #8db set query_plan_text_checksum = (select checksum from #965 qpc where qpc.plan_handle = r.plan_handle) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_plan_text_checksum ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_blocking_session_ids')) update #3ec set waiting_tasks_blocking_session_ids = (select cast(waiting_tasks.c33d as nvarchar(256)) + case when count(*) > 1 then '(' + cast(count(*) as nvarchar(256)) + ')' else '' end + case row_number() over (order by count(*) desc) when count(*) over () then '' else ', ' end from #560 waiting_tasks where waiting_tasks.cd6f = si.session_id and waiting_tasks.c33d is not NULL group by waiting_tasks.c33d order by count(*) desc for xml path('')) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set waiting_tasks_blocking_session_ids ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_valid_flag')) if exists (select c010 from #936 where c010 in ('c0d_tasks_count', 'c0d_tasks_context_switches', 'c0d_tasks_pending_io', 'c0d_tasks_io_size_kb', 'c0d_tasks_ios_per_second', 'c0d_tasks_info')) update #3ec set waiting_tasks_valid_flag = (select case when max(waiting_tasks.cd91) is NULL then NULL when max(waiting_tasks.cd91) = s.login_time then 1 else 0 end from #560 waiting_tasks where waiting_tasks.cd6f = si.session_id) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) else update #3ec set waiting_tasks_valid_flag = (select case when max(waiting_tasks.cd91) is NULL then NULL when max(waiting_tasks.cd91) = s.login_time then 1 else 0 end from #560 waiting_tasks where waiting_tasks.cd6f = si.session_id) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set waiting_tasks_valid_flag ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_wait_time_ms')) update #8db set query_memory_grants_wait_time_ms = (select query_memory_grants.c4b8 as query_memory_grants_wait_time_ms from #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_wait_time_ms ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_logical_read_count')) update #8db set query_profiles_logical_read_count = (select sum(query_profiles.c3e8) as query_profiles_logical_read_count from #4d5 query_profiles where query_profiles.cd6f = ri.session_id and query_profiles.c9be = ri.request_id and query_profiles.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_profiles_logical_read_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_granted_memory_kb')) update #8db set query_memory_grants_granted_memory_kb = (select query_memory_grants.c8d8 as query_memory_grants_granted_memory_kb from #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_granted_memory_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_task_max_tempdb_usage_kb')) update #8db set task_max_tempdb_usage_kb = (select sum(task_space_usage.c8b9 + task_space_usage.c559) * 8 as task_tempdb_usage from #718 task_space_usage where task_space_usage.cd6f = ri.session_id and task_space_usage.c9be = ri.request_id and (task_space_usage.c8b9 + task_space_usage.c559) > 0 and task_space_usage.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set task_max_tempdb_usage_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_locks_info')) update #3ec set locks_info = (select locks_info.locks_info, tran_locks.c28f as session_id, case tran_locks.ce16 when 32767 then 'Resource Database' else db_name(tran_locks.ce16) end as database_name, tran_locks.c9f7 + case when len(tran_locks.c247) > 0 then '(' + tran_locks.c247 + ')' else '' end as type, tran_locks.cc3d as mode, tran_locks.ccd3 as status, cast(sum(tran_locks.c3a9) as nvarchar(256)) as lock_count, case when tran_locks.c9f7 in ('FILE', 'EXTENT', 'APPLICATION', 'METADATA') then NULL when tran_locks.c9f7 in ('DATABASE') then case tran_locks.ce16 when 32767 then '[Resource Database]' else db_name(tran_locks.ce16) end when tran_locks.c9f7 in ('OBJECT') then case tran_locks.ce16 when 32767 then '[Resource Database]' else db_name(tran_locks.ce16) end + '.' + (select c2e2 from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) when tran_locks.c9f7 in ('ALLOCATION_UNIT', 'HOBT', 'PAGE', 'KEY', 'RID') then case tran_locks.ce16 when 32767 then '[Resource Database]' else db_name(tran_locks.ce16) end + '.' + (select c2e2 from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) as nvarchar(256)) + ')' else NULL end as resource_info, tran_locks.c93a as request_id, tran_locks.c042 as owner_id from (select null as locks_info) as locks_info cross join #29d tran_locks where tran_locks.c28f = si.session_id group by locks_info.locks_info, tran_locks.c28f, tran_locks.c93a, tran_locks.c042, tran_locks.ce16, tran_locks.cdac, tran_locks.c9f7, tran_locks.c247, tran_locks.cc3d, tran_locks.ccd3 order by tran_locks.c28f, tran_locks.c93a, tran_locks.c042, tran_locks.ce16, tran_locks.cdac, tran_locks.c9f7, tran_locks.c247, tran_locks.cc3d, tran_locks.ccd3 for xml auto) from #3ec si where si.session_id not in (select ri.session_id from #8db ri) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set locks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_ideal_memory_kb')) update #8db set query_memory_grants_ideal_memory_kb = (select query_memory_grants.cda4 as query_memory_grants_ideal_memory_kb from #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_ideal_memory_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) update #8db set wait_resource_info = 'OBJECT = ' + (select case wait_resource_database_id when 32767 then '[Resource Database]' else db_name(wait_resource_database_id) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'OBJECT' and wait_resource_database_id = rdaeid.ce16 and wait_resource_object_id = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'OBJECT' and wait_resource_database_id = rdaeid.ce16 and wait_resource_object_id = rdaeid.cdac) from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id, (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(wait_resource, ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3) as wait_resource_object_id) as xy) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where r.wait_type like 'LCK_%' and r.wait_resource like 'OBJECT%' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set wait_resource_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = 'databaselock = ' + case c839 when 32767 then '[Resource Database]' else db_name(c839) end from #560 wt where wt.ca11 like 'databaselock %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) update #8db set wait_resource_info = 'KEY = ' + (select case wait_resource_database_id when 32767 then '[Resource Database]' else db_name(wait_resource_database_id) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 in ('KEY') and wait_resource_database_id = rdaeid.ce16 and wait_resource_associated_object_id = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 in ('KEY') and wait_resource_database_id = rdaeid.ce16 and wait_resource_associated_object_id = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where rdaeid.c9f7 in ('KEY') and wait_resource_database_id = rdaeid.ce16 and wait_resource_associated_object_id = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where rdaeid.c9f7 in ('KEY') and wait_resource_database_id = rdaeid.ce16 and wait_resource_associated_object_id = rdaeid.cdac) as nvarchar(256)) + ')' from (select (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(replace(replace(wait_resource, '(', ':'), ')', ':'), ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 2) as wait_resource_database_id, (select value from (select c.value('.', 'nvarchar(max)') as value, row_number() over (order by (select 1)) as rn from (select cast(N'<r>' + replace(replace(replace(wait_resource, '(', ':'), ')', ':'), ':', '</r><r>') + '</r>' as xml)) as x(y) cross apply x.y.nodes('r') t(c)) as z where rn = 3) as wait_resource_associated_object_id) as xy) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where r.wait_type like 'LCK_%' and r.wait_resource like 'KEY%' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set wait_resource_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_session_max_tempdb_usage_kb')) update #3ec set session_max_tempdb_usage_kb = (select (session_space_usage.c8b9 + session_space_usage.c559) * 8 as session_tempdb_usage from #3fa session_space_usage where session_space_usage.cd6f = si.session_id and ((session_space_usage.c8b9 + session_space_usage.c559) > 0) and session_space_usage.cd91 = s.login_time) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set session_max_tempdb_usage_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_cursor_count')) update #3ec set cursor_count = (select case count(*) when 0 then NULL else count(*) end from #807 cursors where cursors.cd6f = si.session_id and cursors.cd91 = s.login_time) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set cursor_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_task_tempdb_usage_info')) update #8db set task_tempdb_usage_info = (select task_tempdb_usage_info.task_tempdb_usage_info, task_space_usage.cd6f as session_id, task_space_usage.c9be as request_id, task_space_usage.cb85 as exec_context_id, task_space_usage.cfba as database_id, task_space_usage.c8b9 as user_objects_alloc_page_count, task_space_usage.cbb8 as user_objects_dealloc_page_count, task_space_usage.c559 as internal_objects_alloc_page_count, task_space_usage.c2ca as internal_objects_dealloc_page_count, c15a as request_start_time from (select null as task_tempdb_usage_info) as task_tempdb_usage_info cross join #718 task_space_usage where task_space_usage.cd6f = ri.session_id and task_space_usage.c9be = ri.request_id and task_space_usage.c15a = r.start_time order by task_space_usage.cd6f, task_space_usage.c9be, task_space_usage.cb85 for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set task_tempdb_usage_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_count')) update #8db set tasks_count = (select case count(tasks.cb85) when NULL then NULL else count(tasks.cb85) end as tasks_count from #445 tasks where tasks.cd6f = ri.session_id and tasks.c9be = ri.request_id and tasks.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set tasks_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_used_memory_kb')) update #8db set query_memory_grants_used_memory_kb = (select query_memory_grants.cbf7 as query_memory_grants_used_memory_kb from #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_used_memory_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_input_buffer_checksum')) update #8db set input_buffer_checksum = (select c3e5 from #455 ib where ib.cd6f = ri.session_id and ib.c9be = ri.request_id) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set input_buffer ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_input_buffer_checksum')) update #3ec set input_buffer_checksum = (select c3e5 from #455 ib where ib.cd6f = si.session_id and ib.c9be is NULL) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set input_buffer ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_input_buffer_valid_flag')) update #8db set input_buffer_valid_flag = (select case ib.c15a when r.start_time then 1 else 0 end from #455 ib where ib.cd6f = ri.session_id and ib.c9be = ri.request_id and ib.c3e5 is not NULL) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set input_buffer_valid_flag ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_input_buffer_valid_flag')) update #3ec set input_buffer_valid_flag = (select case ib.c0b7 when s.last_request_start_time then 1 else 0 end from #455 ib where ib.cd6f = si.session_id and ib.c3e5 is not NULL) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set input_buffer_valid_flag ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_info')) update #8db set query_profiles_info = (select query_profiles_info.query_profiles_info, query_profiles.cd6f as session_id, query_profiles.c9be as request_id, sys.fn_varbintohexstr(query_profiles.c5a0) as sql_handle, sys.fn_varbintohexstr(query_profiles.c005) as plan_handle, query_profiles.c721 as physical_operator_name, query_profiles.c806 as node_id, query_profiles.cd3a as thread_id, sys.fn_varbintohexstr(query_profiles.c848) as task_address, query_profiles.c490 as row_count, query_profiles.c3b3 as rewind_count, query_profiles.c34b as rebind_count, query_profiles.cd67 as end_of_scan_count, query_profiles.c8d9 as estimate_row_count, query_profiles.c70d as first_active_time, query_profiles.cc26 as last_active_time, query_profiles.c074 as open_time, query_profiles.ce3c as first_row_time, query_profiles.c63d as last_row_time, query_profiles.cb21 as close_time, query_profiles.c740 as elapsed_time_ms, query_profiles.c24d as cpu_time_ms, query_profiles.cfba as database_id, query_profiles.c1c7 as object_id, query_profiles.ca0d as index_id, query_profiles.c248 as scan_count, query_profiles.c3e8 as logical_read_count, query_profiles.cebb as physical_read_count, query_profiles.c053 as read_ahead_count, query_profiles.cfcc as write_page_count, query_profiles.c2a1 as lob_logical_read_count, query_profiles.cef4 as lob_physical_read_count, query_profiles.c6af as lob_read_ahead_count, query_profiles.ce73 as segment_read_count, query_profiles.c7b2 as segment_skip_count, c15a as request_start_time from (select null as query_profiles_info) as query_profiles_info cross join #4d5 query_profiles where query_profiles.cd6f = ri.session_id and query_profiles.c9be = ri.request_id and query_profiles.c15a = r.start_time for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_profiles_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_read_ahead_count')) update #8db set query_profiles_read_ahead_count = (select sum(query_profiles.c053) as query_profiles_read_ahead_count from #4d5 query_profiles where query_profiles.cd6f = ri.session_id and query_profiles.c9be = ri.request_id and query_profiles.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_profiles_read_ahead_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = 'hobtlock = ' + case c839 when 32767 then '[Resource Database]' else db_name(c839) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where rdaeid.c9f7 = 'HOBT' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) as nvarchar(256)) + ')' from #560 wt where wt.ca11 like 'hobtlock %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_log_record_count')) update #3ec set transaction_log_record_count = (select sum(tdt.cb0a) as transaction_log_record_count from #4e4 tst inner join #715 tat on (tst.c010 = tat.c010) inner join #43a tdt on (tst.c010 = tdt.c010) where tst.cd6f = si.session_id group by tst.cd6f, tst.c010, tat.cd19) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set transaction_log_record_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = 'objectlock = ' + case c839 when 32767 then '[Resource Database]' else db_name(c839) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'OBJECT' and wt.c839 = rdaeid.ce16 and wt.c9ae = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'OBJECT' and wt.c839 = rdaeid.ce16 and wt.c9ae = rdaeid.cdac) from #560 wt where wt.ca11 like 'objectlock %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('cc2_procedure_stats_info')) update #bb0 set procedure_stats_info = (select procedure_stats_info.procedure_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, ca64, ceaf) when 0 then NULL else datediff(s, ca64,ceaf ) end) as ExecutionsPerSec, ca8d as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, procedure_stats.cfba as database_id, procedure_stats.c1c7 as object_id, procedure_stats.c3a7 as type, procedure_stats.cea2 as type_desc, sys.fn_varbintohexstr(procedure_stats.c5a0) as sql_handle, sys.fn_varbintohexstr(procedure_stats.c005) as plan_handle, procedure_stats.ca64 as cached_time, procedure_stats.ceaf as last_execution_time, procedure_stats.ca8d as total_worker_time, procedure_stats.c59d as last_worker_time, procedure_stats.c470 as min_worker_time, procedure_stats.c188 as max_worker_time, procedure_stats.c142 as total_physical_reads, procedure_stats.ceef as last_physical_reads, procedure_stats.c969 as min_physical_reads, procedure_stats.c331 as max_physical_reads, procedure_stats.c27e as total_logical_writes, procedure_stats.cecb as last_logical_writes, procedure_stats.cac0 as min_logical_writes, procedure_stats.c36f as max_logical_writes, procedure_stats.cbc9 as total_logical_reads, procedure_stats.ca81 as last_logical_reads, procedure_stats.c05d as min_logical_reads, procedure_stats.ca98 as max_logical_reads, procedure_stats.c4c5 as total_elapsed_time, procedure_stats.ca22 as last_elapsed_time, procedure_stats.c1f5 as min_elapsed_time, procedure_stats.c8d3 as max_elapsed_time from (select null as procedure_stats_info) as procedure_stats_info cross join #6c8 procedure_stats where procedure_stats.c5a0 = c.most_recent_sql_handle for xml auto) from #bb0 ci inner join #22c c on (ci.session_id = c.session_id and ci.connection_id = c.connection_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_connections set procedure_stats_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_procedure_stats_info')) update #8db set procedure_stats_info = (select procedure_stats_info.procedure_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, ca64, ceaf) when 0 then NULL else datediff(s, ca64, ceaf) end) as ExecutionsPerSec, ca8d as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, procedure_stats.cfba as database_id, procedure_stats.c1c7 as object_id, procedure_stats.c3a7 as type, procedure_stats.cea2 as type_desc, sys.fn_varbintohexstr(procedure_stats.c5a0) as sql_handle, sys.fn_varbintohexstr(procedure_stats.c005) as plan_handle, procedure_stats.ca64 as cached_time, procedure_stats.ceaf as last_execution_time, procedure_stats.ca8d as total_worker_time, procedure_stats.c59d as last_worker_time, procedure_stats.c470 as min_worker_time, procedure_stats.c188 as max_worker_time, procedure_stats.c142 as total_physical_reads, procedure_stats.ceef as last_physical_reads, procedure_stats.c969 as min_physical_reads, procedure_stats.c331 as max_physical_reads, procedure_stats.c27e as total_logical_writes, procedure_stats.cecb as last_logical_writes, procedure_stats.cac0 as min_logical_writes, procedure_stats.c36f as max_logical_writes, procedure_stats.cbc9 as total_logical_reads, procedure_stats.ca81 as last_logical_reads, procedure_stats.c05d as min_logical_reads, procedure_stats.ca98 as max_logical_reads, procedure_stats.c4c5 as total_elapsed_time, procedure_stats.ca22 as last_elapsed_time, procedure_stats.c1f5 as min_elapsed_time, procedure_stats.c8d3 as max_elapsed_time from (select null as procedure_stats_info) as procedure_stats_info cross join #6c8 procedure_stats where procedure_stats.c005 = r.plan_handle for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set procedure_stats_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_service_broker_info')) update #3ec set service_broker_info = (select service_broker_info.service_broker_info, service_broker.c10e as spid, service_broker.cfba as database_id, service_broker.c0dc as queue_id, service_broker.c698 as procedure_name, service_broker.c11f as execute_as, cd91 as login_time from (select null as service_broker_info) as service_broker_info cross join #3af service_broker where service_broker.c10e = si.session_id and service_broker.cd91 = s.login_time for xml auto) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set c13_service_broker_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_transaction_log_bytes_used')) update #3ec set transaction_log_bytes_used = (select sum(tdt.c31f) as transaction_log_bytes_used from #4e4 tst inner join #715 tat on (tst.c010 = tat.c010) inner join #43a tdt on (tst.c010 = tdt.c010) where tst.cd6f = si.session_id group by tst.cd6f, tst.c010, tat.cd19) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set transaction_log_bytes_used ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_memory_grants_requested_memory_kb')) update #8db set query_memory_grants_requested_memory_kb = (select query_memory_grants.c40a as query_memory_grants_requested_memory_kb from #a31 query_memory_grants where query_memory_grants.cd6f = ri.session_id and query_memory_grants.c9be = ri.request_id and query_memory_grants.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_memory_grants_requested_memory_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = 'keylock = ' + case c839 when 32767 then '[Resource Database]' else db_name(c839) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'KEY' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'KEY' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where rdaeid.c9f7 = 'KEY' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where rdaeid.c9f7 = 'KEY' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) as nvarchar(256)) + ')' from #560 wt where wt.ca11 like 'keylock %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = 'pagelock = ' + case c839 when 32767 then '[Resource Database]' else db_name(c839) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'PAGE' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'PAGE' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where rdaeid.c9f7 = 'PAGE' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where rdaeid.c9f7 = 'PAGE' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) as nvarchar(256)) + ')' from #560 wt where wt.ca11 like 'pagelock %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = 'ridlock = ' + case c839 when 32767 then '[Resource Database]' else db_name(c839) end + '.' + (select c2e2 from #7a1 rdaeid where rdaeid.c9f7 = 'RID' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where rdaeid.c9f7 = 'RID' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where rdaeid.c9f7 = 'RID' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where rdaeid.c9f7 = 'RID' and wt.c839 = rdaeid.ce16 and wt.cf03 = rdaeid.cdac) as nvarchar(256)) + ')' from #560 wt where wt.ca11 like 'ridlock %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #560 set c001 = (select case when page_id = 0 then NULL when page_id = 1 or page_id % 8080 = 0 then 'PFS' when page_id = 2 or page_id % 511232 = 0 then 'GAM' when page_id = 3 or page_id % 511233 = 0 then 'SGAM' end from (select substring(ca11, len(ca11) - charindex(':', reverse(ca11)) + 2, charindex(':', reverse(ca11))) as page_id) as rd) from #560 wt where wt.c819 like 'PAGELATCH_%' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_os_waiting_tasks set resource_description_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_physical_read_count')) update #8db set query_profiles_physical_read_count = (select sum(query_profiles.cebb) as query_profiles_physical_read_count from #4d5 query_profiles where query_profiles.cd6f = ri.session_id and query_profiles.c9be = ri.request_id and query_profiles.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_profiles_physical_read_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_lock_owner_id')) update #8db set lock_owner_id = (select max(tran_locks.c042) as lock_owner_id from #29d tran_locks where tran_locks.c28f = ri.session_id and tran_locks.c93a = ri.request_id) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set lock_owner_id ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_lock_owner_id')) update #3ec set lock_owner_id = (select max(tran_locks.c042) as lock_owner_id from #29d tran_locks where tran_locks.c28f = si.session_id) from #3ec si where si.session_id not in (select ri.session_id from #8db ri) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set lock_owner_id ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_wait_types')) update #3ec set waiting_tasks_wait_types = (select waiting_tasks.c819 + case when count(*) > 1 then '(' + cast(count(*) as nvarchar(256)) + ')' else '' end + case row_number() over (order by count(*) desc) when count(*) over () then '' else ', ' end from #560 waiting_tasks where waiting_tasks.cd6f = si.session_id group by waiting_tasks.c819 order by count(*) desc for xml path('')) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set waiting_tasks_wait_types ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_max_wait_duration_ms')) update #3ec set waiting_tasks_max_wait_duration_ms = (select max(waiting_tasks.cdef) from #560 waiting_tasks where waiting_tasks.cd6f = si.session_id) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set waiting_tasks_max_wait_duration_ms ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_write_page_count')) update #8db set query_profiles_write_page_count = (select sum(query_profiles.cfcc) as query_profiles_write_page_count from #4d5 query_profiles where query_profiles.cd6f = ri.session_id and query_profiles.c9be = ri.request_id and query_profiles.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_profiles_write_page_count ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_profiles_cpu_time_ms')) update #8db set query_profiles_cpu_time_ms = (select sum(query_profiles.c24d) as query_profiles_cpu_time_ms from #4d5 query_profiles where query_profiles.cd6f = ri.session_id and query_profiles.c9be = ri.request_id and query_profiles.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_profiles_cpu_time_ms ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_io_size_kb')) update #8db set tasks_io_size_kb = (select case sum(tasks.c523) when 0 then NULL else (r.reads * 8) / sum(tasks.c523) end as tasks_io_size_kb from #445 tasks where tasks.cd6f = ri.session_id and tasks.c9be = ri.request_id and tasks.c523 > 0 and tasks.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set tasks_io_size_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_locks_info')) update #8db set locks_info = (select locks_info.locks_info, tran_locks.c28f as session_id, case tran_locks.ce16 when 32767 then 'Resource Database' else db_name(tran_locks.ce16) end as database_name, tran_locks.c9f7 + case when len(tran_locks.c247) > 0 then '(' + tran_locks.c247 + ')' else '' end as type, tran_locks.cc3d as mode, tran_locks.ccd3 as status, cast(sum(tran_locks.c3a9) as nvarchar(256)) as lock_count, case when tran_locks.c9f7 in ('FILE', 'EXTENT', 'APPLICATION', 'METADATA') then NULL when tran_locks.c9f7 in ('DATABASE') then case tran_locks.ce16 when 32767 then '[Resource Database]' else db_name(tran_locks.ce16) end when tran_locks.c9f7 in ('OBJECT') then case tran_locks.ce16 when 32767 then '[Resource Database]' else db_name(tran_locks.ce16) end + '.' + (select c2e2 from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) when tran_locks.c9f7 in ('ALLOCATION_UNIT', 'HOBT', 'PAGE', 'KEY', 'RID') then case tran_locks.ce16 when 32767 then '[Resource Database]' else db_name(tran_locks.ce16) end + '.' + (select c2e2 from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + '.' + (select c92a from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + ' (index_name = ' + (select isnull(ca34, 'NULL') + '(' + cea2 + ')' from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) + ', partition_number = ' + cast((select c722 from #7a1 rdaeid where tran_locks.c9f7 = rdaeid.c9f7 and tran_locks.ce16 = rdaeid.ce16 and tran_locks.cdac = rdaeid.cdac) as nvarchar(256)) + ')' else NULL end as resource_info, tran_locks.c93a as request_id, tran_locks.c042 as owner_id from (select null as locks_info) as locks_info cross join #29d tran_locks where tran_locks.c28f = ri.session_id and tran_locks.c93a = ri.request_id group by locks_info.locks_info, tran_locks.c28f, tran_locks.c93a, tran_locks.c042, tran_locks.ce16, tran_locks.cdac, tran_locks.c9f7, tran_locks.c247, tran_locks.cc3d, tran_locks.ccd3 order by tran_locks.c28f, tran_locks.c93a, tran_locks.c042, tran_locks.ce16, tran_locks.cdac, tran_locks.c9f7, tran_locks.c247, tran_locks.cc3d, tran_locks.ccd3 for xml auto) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set locks ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_tasks_context_switches')) update #8db set tasks_context_switches = (select sum(tasks.cea3) as tasks_context_switches from #445 tasks where tasks.cd6f = ri.session_id and tasks.c9be = ri.request_id and tasks.cea3 > 0 and tasks.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set tasks_context_switches ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_wait_resource_info')) update #8db set wait_resource_info = (select case when page_id = 0 then NULL when page_id = 1 or page_id % 8080 = 0 then 'PFS' when page_id = 2 or page_id % 511232 = 0 then 'GAM' when page_id = 3 or page_id % 511233 = 0 then 'SGAM' end from (select substring(wait_resource, len(wait_resource) - charindex(':', reverse(wait_resource)) + 2, charindex(':', reverse(wait_resource))) as page_id) as wr) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where r.wait_type like 'PAGELATCH_%' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set wait_resource_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_job_info')) update #3ec set job_info = (select job_info.job_info, job.name, job_step.step_name, job_step.subsystem, job_step.command, job_step.last_run_duration, job_step.last_run_retries, job_step.last_run_date, job_step.last_run_time, job.job_id, job_step.step_id from (select null as job_info) as job_info cross apply msdb..sysjobs job inner join msdb..sysjobsteps job_step on (job.job_id = job_step.job_id) where job.job_id = (select cast(cast('' as xml).value('xs:hexBinary(sql:column("program_name"))', 'varbinary(max)') as uniqueidentifier) from (select substring(program_name, charindex(' (Job 0x', program_name, 0) + 8, 32) as program_name) as x) and job_step.step_id = substring(program_name, charindex(' : Step ', program_name, 0) + 8, len(program_name) - charindex(' : Step ', program_name, 0) - 8) for xml auto) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where s.program_name like '% (Job 0x%' and s.program_name like '% : Step %' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set job_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('cc2_trigger_stats_info')) update #bb0 set trigger_stats_info = (select trigger_stats_info.trigger_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, ca64, ceaf) when 0 then NULL else datediff(s, ca64, ceaf) end) as ExecutionsPerSec, ca8d as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, trigger_stats.cfba as database_id, trigger_stats.c1c7 as object_id, trigger_stats.c3a7 as type, trigger_stats.cea2 as type_desc, sys.fn_varbintohexstr(trigger_stats.c5a0) as sql_handle, sys.fn_varbintohexstr(trigger_stats.c005) as plan_handle, trigger_stats.ca64 as cached_time, trigger_stats.ceaf as last_execution_time, trigger_stats.ca8d as total_worker_time, trigger_stats.c59d as last_worker_time, trigger_stats.c470 as min_worker_time, trigger_stats.c188 as max_worker_time, trigger_stats.c142 as total_physical_reads, trigger_stats.ceef as last_physical_reads, trigger_stats.c969 as min_physical_reads, trigger_stats.c331 as max_physical_reads, trigger_stats.c27e as total_logical_writes, trigger_stats.cecb as last_logical_writes, trigger_stats.cac0 as min_logical_writes, trigger_stats.c36f as max_logical_writes, trigger_stats.cbc9 as total_logical_reads, trigger_stats.ca81 as last_logical_reads, trigger_stats.c05d as min_logical_reads, trigger_stats.ca98 as max_logical_reads, trigger_stats.c4c5 as total_elapsed_time, trigger_stats.ca22 as last_elapsed_time, trigger_stats.c1f5 as min_elapsed_time, trigger_stats.c8d3 as max_elapsed_time from (select null as trigger_stats_info) as trigger_stats_info cross join #9f8 trigger_stats where trigger_stats.c5a0 = c.most_recent_sql_handle for xml auto) from #bb0 ci inner join #22c c on (ci.session_id = c.session_id and ci.connection_id = c.connection_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_connections set trigger_stats_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_trigger_stats_info')) update #8db set trigger_stats_info = (select trigger_stats_info.trigger_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, ca64, ceaf) when 0 then NULL else datediff(s, ca64, ceaf) end) as ExecutionsPerSec, ca8d as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, trigger_stats.cfba as database_id, trigger_stats.c1c7 as object_id, trigger_stats.c3a7 as type, trigger_stats.cea2 as type_desc, sys.fn_varbintohexstr(trigger_stats.c5a0) as sql_handle, sys.fn_varbintohexstr(trigger_stats.c005) as plan_handle, trigger_stats.ca64 as cached_time, trigger_stats.ceaf as last_execution_time, trigger_stats.ca8d as total_worker_time, trigger_stats.c59d as last_worker_time, trigger_stats.c470 as min_worker_time, trigger_stats.c188 as max_worker_time, trigger_stats.c142 as total_physical_reads, trigger_stats.ceef as last_physical_reads, trigger_stats.c969 as min_physical_reads, trigger_stats.c331 as max_physical_reads, trigger_stats.c27e as total_logical_writes, trigger_stats.cecb as last_logical_writes, trigger_stats.cac0 as min_logical_writes, trigger_stats.c36f as max_logical_writes, trigger_stats.cbc9 as total_logical_reads, trigger_stats.ca81 as last_logical_reads, trigger_stats.c05d as min_logical_reads, trigger_stats.ca98 as max_logical_reads, trigger_stats.c4c5 as total_elapsed_time, trigger_stats.ca22 as last_elapsed_time, trigger_stats.c1f5 as min_elapsed_time, trigger_stats.c8d3 as max_elapsed_time from (select null as trigger_stats_info) as trigger_stats_info cross join #9f8 trigger_stats where trigger_stats.c005 = r.plan_handle for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set trigger_stats_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_task_tempdb_usage_kb')) update #8db set task_tempdb_usage_kb = (select sum((task_space_usage.c8b9 - task_space_usage.cbb8) + (task_space_usage.c559 - task_space_usage.c2ca)) * 8 as task_space_usage_kb from #718 task_space_usage where task_space_usage.cd6f = ri.session_id and task_space_usage.c9be = ri.request_id and (task_space_usage.c8b9 + task_space_usage.cbb8 + task_space_usage.c559 + task_space_usage.c2ca) > 0 and task_space_usage.c15a = r.start_time) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set task_tempdb_usage_kb ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_session_tempdb_usage_info')) update #3ec set session_tempdb_usage_info = (select session_tempdb_usage_info.session_tempdb_usage_info, session_space_usage.cd6f as session_id, session_space_usage.cfba as database_id, session_space_usage.c8b9 as user_objects_alloc_page_count, session_space_usage.cbb8 as user_objects_dealloc_page_count, session_space_usage.c559 as internal_objects_alloc_page_count, session_space_usage.c2ca as internal_objects_dealloc_page_count, session_space_usage.cd3d as user_objects_deferred_dealloc_page_count, cd91 as login_time from (select null as session_tempdb_usage_info) as session_tempdb_usage_info cross join #3fa session_space_usage where session_space_usage.cd6f = si.session_id and (session_space_usage.c8b9 + session_space_usage.cbb8 + session_space_usage.c559 + session_space_usage.c2ca) > 0 and session_space_usage.cd91 = s.login_time for xml auto) from #3ec si inner join #4d3 s on (si.session_id = s.session_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set session_tempdb_usage_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_waiting_tasks_info')) update #3ec set waiting_tasks_info = (select waiting_tasks_info.waiting_tasks_info, waiting_tasks.cd6f as session_id, waiting_tasks.cb85 as exec_context_id, waiting_tasks.cdef as wait_duration_ms, waiting_tasks.c819 as wait_type, waiting_tasks.c33d as blocking_session_id, waiting_tasks.caf8 as blocking_exec_context_id, waiting_tasks.ca11 as resource_description, c001 as resource_description_info, cd91 as login_time from (select null as waiting_tasks_info) as waiting_tasks_info cross join #560 waiting_tasks where waiting_tasks.cd6f = si.session_id order by waiting_tasks.cd6f, waiting_tasks.cb85, waiting_tasks.cdef, waiting_tasks.c819, waiting_tasks.c33d, waiting_tasks.caf8 for xml auto) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set waiting_tasks_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_is_blocker')) update #3ec set is_blocker = (select case when exists (select c33d from #560 where si.session_id = c33d and cd6f <> c33d) then 1 else 0 end) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set is_blocker ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_is_blocked')) update #8db set is_blocked = (select case when exists (select cd6f from #560 where ri.session_id = cd6f and cd6f <> c33d and cd91 = (select login_time from #4d3 where ri.session_id = session_id)) then 1 else 0 end) from #8db ri select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set is_blocked ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_blocked_session_ids')) begin declare @ee6 nvarchar(max) declare cac7 cursor for select si.session_id from #3ec si where is_blocker = 1 open cac7 fetch next from cac7 into @fe7 while (@@fetch_status = 0) begin with c90e as (select cd6f from #560 where c33d = @fe7 and cd6f <> c33d union all select wt.cd6f from #560 wt inner join c90e s on s.cd6f = wt.c33d where wt.cd6f <> wt.c33d and wt.cd6f <> @fe7 and wt.cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = wt.cd6f)) select @ee6 = (select cast(cd6f as nvarchar(256)) + case row_number() over (order by cd6f) when count(*) over () then '' else ', ' end from c90e group by cd6f order by cd6f for xml path('')) update #3ec set blocked_session_ids = @ee6 where session_id = @fe7 fetch next from cac7 into @fe7 end close cac7 deallocate cac7 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set blocked_session_ids ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_is_dead_locked')) begin declare @7dd bit declare ca92 cursor for select si.session_id from #8db si where is_blocked = 1 open ca92 fetch next from ca92 into @fe7 while (@@fetch_status = 0) begin with c1f2 as (select c33d, 0 as deadlocked, '<' + rtrim(ltrim(cast(c33d as nvarchar(max)))) + '>' as c8a6 from #560 where cd6f = @fe7 and cd6f <> c33d and cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = @fe7) union all select wt.c33d, case wt.c33d when @fe7 then 1 else 0 end as deadlocked, s.c8a6 + '<' + rtrim(ltrim(cast(wt.c33d as nvarchar(max)))) + '>' as c8a6 from #560 wt inner join c1f2 s on s.c33d = wt.cd6f where wt.cd6f <> wt.c33d and s.deadlocked <> 1 and s.c8a6 not like '%<' + rtrim(ltrim(cast(wt.c33d as nvarchar(max)))) + '>%' and wt.cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = wt.cd6f)) select @7dd = deadlocked from c1f2 if (@7dd = 1) update #8db set is_dead_locked = @7dd where session_id = @fe7 fetch next from ca92 into @fe7 end close ca92 deallocate ca92 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set is_dead_locked ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_is_head_blocker')) update #3ec set is_head_blocker = (select case when exists (select c33d from #560 where (si.session_id = c33d and cd6f <> c33d and si.session_id not in (select cd6f from #560 where cd6f <> c33d)) or (si.session_id = c33d and cd6f <> c33d and si.session_id in (select session_id from #8db where is_dead_locked = 1))) then 1 else 0 end) from #3ec si select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set is_head_blocker ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_blocker_session_ids')) begin declare @f43 nvarchar(max) declare c1a2 cursor for select si.session_id from #8db si where is_blocked = 1 open c1a2 fetch next from c1a2 into @fe7 while (@@fetch_status = 0) begin with c1f2 as (select c33d, '<' + rtrim(ltrim(cast(c33d as nvarchar(max)))) + '>' as c8a6 from #560 where cd6f = @fe7 and cd6f <> c33d and cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = @fe7) union all select wt.c33d, s.c8a6 + '<' + rtrim(ltrim(cast(wt.c33d as nvarchar(max)))) + '>' as c8a6 from #560 wt inner join c1f2 s on s.c33d = wt.cd6f where wt.cd6f <> wt.c33d and wt.c33d <> @fe7 and s.c8a6 not like '%<' + rtrim(ltrim(cast(wt.c33d as nvarchar(max)))) + '>%' and wt.cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = wt.cd6f)) select @f43 = (select cast(c33d as nvarchar(256)) + case row_number() over (order by c33d) when count(*) over () then '' else ', ' end from c1f2 group by c33d order by c33d for xml path('')) update #8db set blocker_session_ids = @f43 where session_id = @fe7 fetch next from c1a2 into @fe7 end close c1a2 deallocate c1a2 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set blocker_session_ids ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_head_blocker_session_ids')) begin declare @5e3 nvarchar(max) declare c75b cursor for select si.session_id from #8db si where is_blocked = 1 open c75b fetch next from c75b into @fe7 while (@@fetch_status = 0) begin with c1f2 as (select c33d, '<' + rtrim(ltrim(cast(c33d as nvarchar(max)))) + '>' as c8a6 from #560 where cd6f = @fe7 and cd6f <> c33d and cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = @fe7) union all select wt.c33d, s.c8a6 + '<' + rtrim(ltrim(cast(wt.c33d as nvarchar(max)))) + '>' as c8a6 from #560 wt inner join c1f2 s on s.c33d = wt.cd6f where wt.cd6f <> wt.c33d and wt.c33d <> @fe7 and s.c8a6 not like '%<' + rtrim(ltrim(cast(wt.c33d as nvarchar(max)))) + '>%' and wt.cd91 = (select login_time from #3ec si inner join #4d3 s on (si.session_id = s.session_id) where si.session_id = wt.cd6f)) select @5e3 = (select cast(bs.c33d as nvarchar(256)) + case row_number() over (order by bs.c33d) when count(*) over () then '' else ', ' end from c1f2 bs where bs.c33d in (select session_id from #3ec where is_head_blocker = 1) group by bs.c33d order by bs.c33d for xml path('')) update #8db set head_blocker_session_ids = @5e3 where session_id = @fe7 fetch next from c75b into @fe7 end close c75b deallocate c75b end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set head_blocker_session_ids ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('cc2_query_stats_info')) update #bb0 set query_stats_info = (select query_stats_info.query_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, c176, ceaf) when 0 then NULL else datediff(s, c176, ceaf) end) as ExecutionsPerSec, c4c5 / 1000 / case c2e8 when 0 then NULL else c2e8 end as RowLatencyMS, ca8d / 1000 as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, c2e8 as TotalRows, (case c2e8 when 0 then NULL else c2e8 end) / c6da as AverageRows, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, cfbf / 1000 as TotalCLRTimeMS, (case cfbf when 0 then NULL else cfbf end) / c6da / 1000 as AverageCLRTimeMS, sys.fn_varbintohexstr(query_stats.c5a0) as sql_handle, query_stats.c040 as statement_start_offset, query_stats.cd08 as statement_end_offset, query_stats.c154 as plan_generation_num, sys.fn_varbintohexstr(query_stats.c005) as plan_handle, query_stats.c176 as creation_time, query_stats.ceaf as last_execution_time, query_stats.ca8d as total_worker_time, query_stats.c59d as last_worker_time, query_stats.c470 as min_worker_time, query_stats.c188 as max_worker_time, query_stats.c142 as total_physical_reads, query_stats.ceef as last_physical_reads, query_stats.c969 as min_physical_reads, query_stats.c331 as max_physical_reads, query_stats.c27e as total_logical_writes, query_stats.cecb as last_logical_writes, query_stats.cac0 as min_logical_writes, query_stats.c36f as max_logical_writes, query_stats.cbc9 as total_logical_reads, query_stats.ca81 as last_logical_reads, query_stats.c05d as min_logical_reads, query_stats.ca98 as max_logical_reads, query_stats.cfbf as total_clr_time, query_stats.cb67 as last_clr_time, query_stats.c439 as min_clr_time, query_stats.ccdb as max_clr_time, query_stats.c4c5 as total_elapsed_time, query_stats.ca22 as last_elapsed_time, query_stats.c1f5 as min_elapsed_time, query_stats.c8d3 as max_elapsed_time, sys.fn_varbintohexstr(query_stats.c0cf) as query_hash, sys.fn_varbintohexstr(query_stats.c118) as query_plan_hash, query_stats.c2e8 as total_rows, query_stats.c635 as last_rows, query_stats.ccae as min_rows, query_stats.cbd8 as max_rows, sys.fn_varbintohexstr(query_stats.ca12) as statement_sql_handle, query_stats.cf49 as statement_context_id from (select null as query_stats_info) as query_stats_info cross join #0c5 query_stats where query_stats.c5a0 = c.most_recent_sql_handle for xml auto) from #bb0 ci inner join #22c c on (ci.session_id = c.session_id and ci.connection_id = c.connection_id) select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_connections set query_stats_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c0d_query_stats_info')) begin update #8db set query_stats_info = (select query_stats_info.query_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, c176, ceaf) when 0 then NULL else datediff(s, c176, ceaf) end) as ExecutionsPerSec, c4c5 / 1000 / case c2e8 when 0 then NULL else c2e8 end as RowLatencyMS, ca8d / 1000 as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, c2e8 as TotalRows, (case c2e8 when 0 then NULL else c2e8 end) / c6da as AverageRows, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, cfbf / 1000 as TotalCLRTimeMS, (case cfbf when 0 then NULL else cfbf end) / c6da / 1000 as AverageCLRTimeMS, sys.fn_varbintohexstr(query_stats.c5a0) as sql_handle, query_stats.c040 as statement_start_offset, query_stats.cd08 as statement_end_offset, query_stats.c154 as plan_generation_num, sys.fn_varbintohexstr(query_stats.c005) as plan_handle, query_stats.c176 as creation_time, query_stats.ceaf as last_execution_time, query_stats.ca8d as total_worker_time, query_stats.c59d as last_worker_time, query_stats.c470 as min_worker_time, query_stats.c188 as max_worker_time, query_stats.c142 as total_physical_reads, query_stats.ceef as last_physical_reads, query_stats.c969 as min_physical_reads, query_stats.c331 as max_physical_reads, query_stats.c27e as total_logical_writes, query_stats.cecb as last_logical_writes, query_stats.cac0 as min_logical_writes, query_stats.c36f as max_logical_writes, query_stats.cbc9 as total_logical_reads, query_stats.ca81 as last_logical_reads, query_stats.c05d as min_logical_reads, query_stats.ca98 as max_logical_reads, query_stats.cfbf as total_clr_time, query_stats.cb67 as last_clr_time, query_stats.c439 as min_clr_time, query_stats.ccdb as max_clr_time, query_stats.c4c5 as total_elapsed_time, query_stats.ca22 as last_elapsed_time, query_stats.c1f5 as min_elapsed_time, query_stats.c8d3 as max_elapsed_time, sys.fn_varbintohexstr(query_stats.c0cf) as query_hash, sys.fn_varbintohexstr(query_stats.c118) as query_plan_hash, query_stats.c2e8 as total_rows, query_stats.c635 as last_rows, query_stats.ccae as min_rows, query_stats.cbd8 as max_rows, sys.fn_varbintohexstr(query_stats.ca12) as statement_sql_handle, query_stats.cf49 as statement_context_id from (select null as query_stats_info) as query_stats_info cross join #0c5 query_stats where query_stats.c005 = r.plan_handle and query_stats.c040 = r.statement_start_offset and query_stats.cd08 = r.statement_end_offset for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) update #8db set query_stats_info = (select query_stats_info.query_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, c176, ceaf) when 0 then NULL else datediff(s, c176, ceaf) end) as ExecutionsPerSec, c4c5 / 1000 / case c2e8 when 0 then NULL else c2e8 end as RowLatencyMS, ca8d / 1000 as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, c2e8 as TotalRows, (case c2e8 when 0 then NULL else c2e8 end) / c6da as AverageRows, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, cfbf / 1000 as TotalCLRTimeMS, (case cfbf when 0 then NULL else cfbf end) / c6da / 1000 as AverageCLRTimeMS, sys.fn_varbintohexstr(query_stats.c5a0) as sql_handle, query_stats.c040 as statement_start_offset, query_stats.cd08 as statement_end_offset, query_stats.c154 as plan_generation_num, sys.fn_varbintohexstr(query_stats.c005) as plan_handle, query_stats.c176 as creation_time, query_stats.ceaf as last_execution_time, query_stats.ca8d as total_worker_time, query_stats.c59d as last_worker_time, query_stats.c470 as min_worker_time, query_stats.c188 as max_worker_time, query_stats.c142 as total_physical_reads, query_stats.ceef as last_physical_reads, query_stats.c969 as min_physical_reads, query_stats.c331 as max_physical_reads, query_stats.c27e as total_logical_writes, query_stats.cecb as last_logical_writes, query_stats.cac0 as min_logical_writes, query_stats.c36f as max_logical_writes, query_stats.cbc9 as total_logical_reads, query_stats.ca81 as last_logical_reads, query_stats.c05d as min_logical_reads, query_stats.ca98 as max_logical_reads, query_stats.cfbf as total_clr_time, query_stats.cb67 as last_clr_time, query_stats.c439 as min_clr_time, query_stats.ccdb as max_clr_time, query_stats.c4c5 as total_elapsed_time, query_stats.ca22 as last_elapsed_time, query_stats.c1f5 as min_elapsed_time, query_stats.c8d3 as max_elapsed_time, sys.fn_varbintohexstr(query_stats.c0cf) as query_hash, sys.fn_varbintohexstr(query_stats.c118) as query_plan_hash, query_stats.c2e8 as total_rows, query_stats.c635 as last_rows, query_stats.ccae as min_rows, query_stats.cbd8 as max_rows, sys.fn_varbintohexstr(query_stats.ca12) as statement_sql_handle, query_stats.cf49 as statement_context_id from (select null as query_stats_info) as query_stats_info cross join #0c5 query_stats where query_stats.c5a0 = r.sql_handle and query_stats.c040 = r.statement_start_offset and query_stats.cd08 = r.statement_end_offset for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where query_stats_info is NULL update #8db set query_stats_info = (select query_stats_info.query_stats_info, c6da as executioncount, (cast(case c6da when 1 then NULL else c6da end as float) / case datediff(s, c176, ceaf) when 0 then NULL else datediff(s, c176, ceaf) end) as ExecutionsPerSec, c4c5 / 1000 / case c2e8 when 0 then NULL else c2e8 end as RowLatencyMS, ca8d / 1000 as TotalCPUTimeMS, (case ca8d when 0 then NULL else ca8d end) / c6da / 1000 as AverageCPUTimeMS, c4c5 / 1000 as TotalDurationMS, (case c4c5 when 0 then NULL else c4c5 end) / c6da / 1000 as AverageDurationMS, c2e8 as TotalRows, (case c2e8 when 0 then NULL else c2e8 end) / c6da as AverageRows, cbc9 as TotalLogicalReads, (case cbc9 when 0 then NULL else cbc9 end) / c6da as AverageLogicalReads, c142 as TotalPhysicalReads, (case c142 when 0 then NULL else c142 end) / c6da as AveragePhysicalReads, c27e as TotalLogicalWrites, (case c27e when 0 then NULL else c27e end) / c6da as AverageLogicalWrites, cfbf / 1000 as TotalCLRTimeMS, (case cfbf when 0 then NULL else cfbf end) / c6da / 1000 as AverageCLRTimeMS, sys.fn_varbintohexstr(query_stats.c5a0) as sql_handle, query_stats.c040 as statement_start_offset, query_stats.cd08 as statement_end_offset, query_stats.c154 as plan_generation_num, sys.fn_varbintohexstr(query_stats.c005) as plan_handle, query_stats.c176 as creation_time, query_stats.ceaf as last_execution_time, query_stats.ca8d as total_worker_time, query_stats.c59d as last_worker_time, query_stats.c470 as min_worker_time, query_stats.c188 as max_worker_time, query_stats.c142 as total_physical_reads, query_stats.ceef as last_physical_reads, query_stats.c969 as min_physical_reads, query_stats.c331 as max_physical_reads, query_stats.c27e as total_logical_writes, query_stats.cecb as last_logical_writes, query_stats.cac0 as min_logical_writes, query_stats.c36f as max_logical_writes, query_stats.cbc9 as total_logical_reads, query_stats.ca81 as last_logical_reads, query_stats.c05d as min_logical_reads, query_stats.ca98 as max_logical_reads, query_stats.cfbf as total_clr_time, query_stats.cb67 as last_clr_time, query_stats.c439 as min_clr_time, query_stats.ccdb as max_clr_time, query_stats.c4c5 as total_elapsed_time, query_stats.ca22 as last_elapsed_time, query_stats.c1f5 as min_elapsed_time, query_stats.c8d3 as max_elapsed_time, sys.fn_varbintohexstr(query_stats.c0cf) as query_hash, sys.fn_varbintohexstr(query_stats.c118) as query_plan_hash, query_stats.c2e8 as total_rows, query_stats.c635 as last_rows, query_stats.ccae as min_rows, query_stats.cbd8 as max_rows, sys.fn_varbintohexstr(query_stats.ca12) as statement_sql_handle, query_stats.cf49 as statement_context_id from (select null as query_stats_info) as query_stats_info cross join #0c5 query_stats where query_stats.c5a0 = r.sql_handle for xml auto) from #8db ri inner join #3fb r on (ri.session_id = r.session_id and ri.request_id = r.request_id) where query_stats_info is NULL end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_requests set query_stats_info ... took ' + cast(@bc7 as nvarchar(256)) + ' ms' select @4e4 = getdate() if exists (select c010 from #936 where c010 in ('c13_sp_whopro_inputparameters')) update #3ec set sp_whopro_inputparameters = case when @sessions is NULL then '@sessions = NULL' else '@sessions = ''' + replace(@sessions, '''', '''''') + '''' end + ', ' + case when @columns is NULL then '@columns = NULL' else '@columns = ''' + replace(@columns, '''', '''''') + '''' end + ', ' + case when @order_by is NULL then '@order_by = NULL' else '@order_by = ''' + replace(@order_by, '''', '''''') + '''' end + ', ' + case when @save_to_database is NULL then '@save_to_database = NULL' else '@save_to_database = ''' + @save_to_database + '''' end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'update sqlws_dm_exec_sessions set sp_whopro_inputparameters ... took ' + cast(@bc7 as nvarchar(256)) + ' ms'
	select @4e4 = getdate() if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_sessions'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions (servername nvarchar(256), ctime datetime, session_id smallint, primary key (servername, ctime, session_id))' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_connections'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_connections (servername nvarchar(256), ctime datetime, session_id smallint, connection_id uniqueidentifier, primary key (servername, ctime, session_id, connection_id))' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_connections failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if not exists (select name from sys.objects where schema_id = ' + cast (@c91 as nvarchar(256)) + ' and name = ''sqlws_dm_exec_requests'') create table [' + schema_name(@c91) + '].sqlws_dm_exec_requests (servername nvarchar(256), ctime datetime, session_id smallint, request_id int, connection_id uniqueidentifier, primary key (servername, ctime, session_id, request_id))' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] create table [' + schema_name(@c91) + '].sqlws_dm_exec_requests failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end declare @025 nvarchar(max) set @025 = '' declare @b01 nvarchar(max) set @b01 = '' declare @736 nvarchar(max) set @736 = '' declare @640 nvarchar(max), @0ea bit create table #407 (c009 int identity, c140 nvarchar(max)) create table #c1d (cdf1 nvarchar(max)) create table #bad (c009 int identity, c140 nvarchar(max)) create table #8ec (c009 int identity, c140 nvarchar(max), cfe5 bit) create table #7ad (cd3b int, c7a3 int default 0, c140 nvarchar(max), ceee nvarchar(max), c647 nvarchar(max), c508 nvarchar(max), primary key (cd3b, c7a3)) if (@9d5 = 1 and @columns is NULL) begin delete #936 set @05b = 'use [' + db_name(@bb0) + '] insert into #bad select name from (select ''c6e_'' + c.name as name, 100 + c.column_id as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sessions'' and c.name in (select c.name from sys.all_objects o inner join sys.all_columns c on (o.object_id = c.object_id) where o.name = ''dm_exec_sessions'') and c.name not in (''session_id'', ''ctime'', ''servername'')' set @05b = @05b + ' union select ''c13_'' + c.name as name, 200 + c.column_id as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sessions'' and c.name not in (select c.name from sys.all_objects o inner join sys.all_columns c on (o.object_id = c.object_id) where o.name = ''dm_exec_sessions'') and c.name not in (''session_id'', ''ctime'', ''servername'')' set @05b = @05b + ' union select ''c5f_'' + c.name as name, 500 + c.column_id as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_connections'' and c.name in (select c.name from sys.all_objects o inner join sys.all_columns c on (o.object_id = c.object_id) where o.name = ''dm_exec_connections'') and c.name not in (''session_id'', ''connection_id'', ''ctime'', ''servername'')' set @05b = @05b + ' union select ''cc2_'' + c.name as name, 600 + c.column_id as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_connections'' and c.name not in (select c.name from sys.all_objects o inner join sys.all_columns c on (o.object_id = c.object_id) where o.name = ''dm_exec_connections'') and c.name not in (''session_id'', ''connection_id'', ''ctime'', ''servername'')' set @05b = @05b + ' union select ''cb6_'' + c.name as name, 300 + c.column_id as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (select c.name from sys.all_objects o inner join sys.all_columns c on (o.object_id = c.object_id) where o.name = ''dm_exec_requests'') and c.name not in (''session_id'', ''request_id'', ''connection_id'', ''ctime'', ''servername'')' set @05b = @05b + ' union select ''c0d_'' + c.name as name, 400 + c.column_id as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name not in (select c.name from sys.all_objects o inner join sys.all_columns c on (o.object_id = c.object_id) where o.name = ''dm_exec_requests'') and c.name not in (''session_id'', ''request_id'', ''connection_id'', ''ctime'', ''servername'')' set @05b = @05b + ' union select ''text_object_name'' as name, 700 as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (''sql_handle'') and exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_connections'' and c.name in (''most_recent_sql_handle'')) and exists (select o.name from sys.objects o where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sql_text'')' set @05b = @05b + ' union select ''text'' as name, 710 as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (''sql_handle'') and exists (select c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_connections'' and c.name in (''most_recent_sql_handle'')) and exists (select o.name from sys.objects o where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sql_text'')' set @05b = @05b + ' union select ''statement'' as name, 720 as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (''sql_handle'') and c.name in (''statement_start_offset'') and c.name in (''statement_start_offset'') and exists (select o.name from sys.objects o where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sql_text'')' set @05b = @05b + ' union select ''query_plan'' as name, 730 as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (''plan_handle'') and exists (select o.name from sys.objects o where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_query_plan'')' set @05b = @05b + ' union select ''text_query_plan'' as name, 740 as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (''plan_handle'') and c.name in (''statement_start_offset'') and c.name in (''statement_start_offset'') and exists (select o.name from sys.objects o where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_text_query_plan'')' set @05b = @05b + ' union select ''plan_attributes_info'' as name, 750 as column_order from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' and c.name in (''plan_handle'') and exists (select o.name from sys.objects o where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_plan_attributes'')) as sqlws order by column_order' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into #bad failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end insert into #936 (c010) select c140 from #bad order by c009 end insert into #8ec select name, cfe5 from (select c010 as name, cfe5, min(c009) as c009 from #936 where cfe5 = 0 group by c010, cfe5 union all select c010, cfe5, c009 from #936 where cfe5 = 1) as columns order by c009 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 1 and c140 not in ('text_query_plan', 'plan_attributes_info', 'c6e_database_id', 'cb6_text_query_plan', 'cb6_query_plan_checksum', 'statement_object_name', 'query_plan_checksum', 'c5f_text_object_name', 'c5f_text', 'input_buffer', 'c6e_input_buffer', 'full_text_query_plan', 'query_plan', 'text_object_name', 'text', 'cb6_statement', 'cb6_full_text_query_plan', 'cb6_plan_attributes_info', 'statement', 'cb6_text', 'cb6_statement_object_name', 'cb6_input_buffer', 'cb6_text_object_name', 'cb6_query_plan', 'cb6_database_id') if (exists (select c140 from #8ec where c140 in ('c5f_endpoint_id') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_endpoint_id') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c5f_endpoint_id, c6e_endpoint_id)', 'c80a_endpoint_id', c140 from #8ec where cfe5 = 0 and c140 = 'c5f_endpoint_id' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c5f_endpoint_id', 'c6e_endpoint_id') end declare @d09 nvarchar(max) if (@360 = 1) begin insert into #7ad select c009, 0, 'ibsr.EventInfo', 'ca63_' + c140, c140, 'ibsr.EventInfo' from #8ec where c140 = 'input_buffer' insert into #7ad select c009, 0, 'ibs.EventInfo', c140, c140, 'ibs.EventInfo' from #8ec where c140 = 'c6e_input_buffer' insert into #7ad select c009, 0, 'ibr.EventInfo', c140, c140, 'ibr.EventInfo' from #8ec where c140 = 'cb6_input_buffer' end else begin set @d09 = '(select ''='' + char(13) + char(10) + case when ibsr.EventInfo like ''%['' + char(0) + '']%'' collate sql_latin1_general_cp850_bin2 or ibsr.EventInfo like ''%['' + char(1) + ''-'' + char(8) + '']%'' or ibsr.EventInfo like ''%['' + char(11) + '']%'' or ibsr.EventInfo like ''%['' + char(12) + '']%'' or ibsr.EventInfo like ''%['' + char(14) + ''-'' + char(31) + '']%'' then replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(ibsr.EventInfo, nchar(0), ''[nchar(0)]'' collate sql_latin1_general_cp850_bin2), nchar(1), ''[nchar(1)]''), nchar(2), ''[nchar(2)]''), nchar(3), ''[nchar(3)]''), nchar(4), ''[nchar(4)]''), nchar(5), ''[nchar(5)]''), nchar(6), ''[nchar(6)]''), nchar(7), ''[nchar(7)]''), nchar(8), ''[nchar(8)]''), nchar(11), ''[nchar(11)]''), nchar(12), ''[nchar(12)]''), nchar(14), ''[nchar(14)]''), nchar(15), ''[nchar(15)]''), nchar(16), ''[nchar(16)]''), nchar(17), ''[nchar(17)]''), nchar(18), ''[nchar(18)]''), nchar(19), ''[nchar(19)]''), nchar(20), ''[nchar(20)]''), nchar(21), ''[nchar(21)]''), nchar(22), ''[nchar(22)]''), nchar(23), ''[nchar(23)]''), nchar(24), ''[nchar(24)]''), nchar(25), ''[nchar(25)]''), nchar(26), ''[nchar(26)]''), nchar(27), ''[nchar(27)]''), nchar(28), ''[nchar(28)]''), nchar(29), ''[nchar(29)]''), nchar(30), ''[nchar(30)]''), nchar(31), ''[nchar(31)]'') else ibsr.EventInfo end + char(13) + char(10) as [processing-instruction(ib)] for xml path(''''), type)' insert into #7ad select c009, 0, @d09, 'ca63_' + c140, c140, 'cast(' + @d09 + ' as nvarchar(max))' from #8ec where c140 = 'input_buffer' insert into #7ad select c009, 0, replace(@d09, 'ibsr', 'ibs'), c140, c140, 'cast(' + replace(@d09, 'ibsr', 'ibs') + ' as nvarchar(max))' from #8ec where c140 = 'c6e_input_buffer' insert into #7ad select c009, 0, replace(@d09, 'ibsr', 'ibr'), c140, c140, 'cast(' + replace(@d09, 'ibsr', 'ibr') + ' as nvarchar(max))' from #8ec where c140 = 'cb6_input_buffer' end if (exists (select c140 from #8ec where c140 in ('cb6_deadlock_priority') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_deadlock_priority') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_deadlock_priority, c6e_deadlock_priority)', 'c5b2_deadlock_priority', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_deadlock_priority' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_deadlock_priority', 'c6e_deadlock_priority') end if (exists (select c140 from #8ec where c140 in ('cb6_prev_error') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_prev_error') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_prev_error, c6e_prev_error)', 'c5b2_prev_error', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_prev_error' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_prev_error', 'c6e_prev_error') end if (exists (select c140 from #8ec where c140 in ('cb6_open_transaction_count') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_open_transaction_count') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_open_transaction_count, c6e_open_transaction_count)', 'c5b2_open_transaction_count', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_open_transaction_count' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_open_transaction_count', 'c6e_open_transaction_count') end if (exists (select c140 from #8ec where c140 in ('cb6_language') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_language') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_language, c6e_language)', 'c5b2_language', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_language' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_language', 'c6e_language') end if (exists (select c140 from #8ec where c140 in ('cb6_quoted_identifier') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_quoted_identifier') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_quoted_identifier, c6e_quoted_identifier)', 'c5b2_quoted_identifier', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_quoted_identifier' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_quoted_identifier', 'c6e_quoted_identifier') end if (exists (select c140 from #8ec where c140 in ('cb6_date_format') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_date_format') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_date_format, c6e_date_format)', 'c5b2_date_format', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_date_format' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_date_format', 'c6e_date_format') end if (exists (select c140 from #8ec where c140 in ('cb6_arithabort') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_arithabort') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_arithabort, c6e_arithabort)', 'c5b2_arithabort', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_arithabort' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_arithabort', 'c6e_arithabort') end if (exists (select c140 from #8ec where c140 in ('cb6_lock_timeout') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_lock_timeout') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_lock_timeout, c6e_lock_timeout)', 'c5b2_lock_timeout', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_lock_timeout' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_lock_timeout', 'c6e_lock_timeout') end if (exists (select c140 from #8ec where c140 in ('cb6_context_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_context_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_context_info, c6e_context_info)', 'c5b2_context_info', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_context_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_context_info', 'c6e_context_info') end if (exists (select c140 from #8ec where c140 in ('cb6_ansi_nulls') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_ansi_nulls') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_ansi_nulls, c6e_ansi_nulls)', 'c5b2_ansi_nulls', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_ansi_nulls' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_ansi_nulls', 'c6e_ansi_nulls') end if (exists (select c140 from #8ec where c140 in ('cb6_ansi_defaults') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_ansi_defaults') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_ansi_defaults, c6e_ansi_defaults)', 'c5b2_ansi_defaults', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_ansi_defaults' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_ansi_defaults', 'c6e_ansi_defaults') end if (exists (select c140 from #8ec where c140 in ('cb6_concat_null_yields_null') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_concat_null_yields_null') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_concat_null_yields_null, c6e_concat_null_yields_null)', 'c5b2_concat_null_yields_null', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_concat_null_yields_null' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_concat_null_yields_null', 'c6e_concat_null_yields_null') end if (exists (select c140 from #8ec where c140 in ('cb6_date_first') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_date_first') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_date_first, c6e_date_first)', 'c5b2_date_first', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_date_first' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_date_first', 'c6e_date_first') end if (exists (select c140 from #8ec where c140 in ('cb6_ansi_warnings') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_ansi_warnings') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_ansi_warnings, c6e_ansi_warnings)', 'c5b2_ansi_warnings', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_ansi_warnings' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_ansi_warnings', 'c6e_ansi_warnings') end if (exists (select c140 from #8ec where c140 in ('cb6_transaction_isolation_level') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_transaction_isolation_level') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_transaction_isolation_level, c6e_transaction_isolation_level)', 'c5b2_transaction_isolation_level', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_transaction_isolation_level' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_transaction_isolation_level', 'c6e_transaction_isolation_level') end if (exists (select c140 from #8ec where c140 in ('cb6_text_size') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_text_size') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_text_size, c6e_text_size)', 'c5b2_text_size', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_text_size' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_text_size', 'c6e_text_size') end if (exists (select c140 from #8ec where c140 in ('cb6_ansi_null_dflt_on') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_ansi_null_dflt_on') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_ansi_null_dflt_on, c6e_ansi_null_dflt_on)', 'c5b2_ansi_null_dflt_on', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_ansi_null_dflt_on' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_ansi_null_dflt_on', 'c6e_ansi_null_dflt_on') end if (exists (select c140 from #8ec where c140 in ('cb6_ansi_padding') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_ansi_padding') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_ansi_padding, c6e_ansi_padding)', 'c5b2_ansi_padding', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_ansi_padding' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_ansi_padding', 'c6e_ansi_padding') end if (exists (select c140 from #8ec where c140 in ('cb6_group_id') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c6e_group_id') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(cb6_group_id, c6e_group_id)', 'c5b2_group_id', c140 from #8ec where cfe5 = 0 and c140 = 'cb6_group_id' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('cb6_group_id', 'c6e_group_id') end insert into #7ad select c009, 0, 'object_name(isnull(rst.objectid, cst.objectid), isnull(rst.dbid, cst.dbid))', 'c52e_text_object_name', c140, 'object_name(isnull(rst.objectid, cst.objectid), isnull(rst.dbid, cst.dbid))' from #8ec where c140 = 'text_object_name' insert into #7ad select c009, 0, 'object_name(cst.objectid, cst.dbid)', 'c5f_text_object_name', c140, 'object_name(cst.objectid, cst.dbid)' from #8ec where c140 = 'c5f_text_object_name' insert into #7ad select c009, 0, 'object_name(rst.objectid, rst.dbid)', 'cb6_text_object_name', c140, 'object_name(rst.objectid, rst.dbid)' from #8ec where c140 = 'cb6_text_object_name' if (@360 = 1) begin insert into #7ad select c009, 1, 'isnull(rst.text, cst.text)', 'c52e_' + c140, c140, 'isnull(rst.text, cst.text)' from #8ec where c140 = 'text' insert into #7ad select c009, 1, 'cst.text', c140, c140, 'cst.text' from #8ec where c140 = 'c5f_text' insert into #7ad select c009, 1, 'rst.text', c140, c140, 'rst.text' from #8ec where c140 = 'cb6_text' end else begin set @d09 = '(select ''='' + char(13) + char(10) + case when isnull(rst.text, cst.text) like ''%['' + char(0) + '']%'' collate sql_latin1_general_cp850_bin2 or isnull(rst.text, cst.text) like ''%['' + char(1) + ''-'' + char(8) + '']%'' or isnull(rst.text, cst.text) like ''%['' + char(11) + '']%'' or isnull(rst.text, cst.text) like ''%['' + char(12) + '']%'' or isnull(rst.text, cst.text) like ''%['' + char(14) + ''-'' + char(31) + '']%'' then replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(isnull(rst.text, cst.text), nchar(0), ''[nchar(0)]'' collate sql_latin1_general_cp850_bin2), nchar(1), ''[nchar(1)]''), nchar(2), ''[nchar(2)]''), nchar(3), ''[nchar(3)]''), nchar(4), ''[nchar(4)]''), nchar(5), ''[nchar(5)]''), nchar(6), ''[nchar(6)]''), nchar(7), ''[nchar(7)]''), nchar(8), ''[nchar(8)]''), nchar(11), ''[nchar(11)]''), nchar(12), ''[nchar(12)]''), nchar(14), ''[nchar(14)]''), nchar(15), ''[nchar(15)]''), nchar(16), ''[nchar(16)]''), nchar(17), ''[nchar(17)]''), nchar(18), ''[nchar(18)]''), nchar(19), ''[nchar(19)]''), nchar(20), ''[nchar(20)]''), nchar(21), ''[nchar(21)]''), nchar(22), ''[nchar(22)]''), nchar(23), ''[nchar(23)]''), nchar(24), ''[nchar(24)]''), nchar(25), ''[nchar(25)]''), nchar(26), ''[nchar(26)]''), nchar(27), ''[nchar(27)]''), nchar(28), ''[nchar(28)]''), nchar(29), ''[nchar(29)]''), nchar(30), ''[nchar(30)]''), nchar(31), ''[nchar(31)]'') else isnull(rst.text, cst.text) end + char(13) + char(10) as [processing-instruction(t)] for xml path(''''), type)' insert into #7ad select c009, 1, @d09, 'c52e_' + c140, c140, 'cast(' + @d09 + ' as nvarchar(max))' from #8ec where c140 = 'text' insert into #7ad select c009, 1, replace(@d09, 'isnull(rst.text, cst.text)', 'cst.text'), c140, c140, 'cast(' + replace(@d09, 'isnull(rst.text, cst.text)', 'cst.text') + ' as nvarchar(max))' from #8ec where c140 = 'c5f_text' insert into #7ad select c009, 1, replace(@d09, 'isnull(rst.text, cst.text)', 'rst.text'), c140, c140, 'cast(' + replace(@d09, 'isnull(rst.text, cst.text)', 'rst.text') + ' as nvarchar(max))' from #8ec where c140 = 'cb6_text' end insert into #7ad select c009, 0, 'object_name(rst.objectid, rst.dbid)', 'cb6_statement_object_name', c140, 'object_name(rst.objectid, rst.dbid)' from #8ec where c140 = 'statement_object_name' insert into #7ad select c009, 0, 'object_name(rst.objectid, rst.dbid)', 'cb6_statement_object_name', c140, 'object_name(rst.objectid, rst.dbid)' from #8ec where c140 = 'cb6_statement_object_name' if (@360 = 1) begin set @d09 = '(select substring(rst.text, ((case when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then 0 else r.statement_start_offset end) / 2) + 1, (((case when r.statement_end_offset = -1 then datalength(rst.text) when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then datalength(rst.text) else r.statement_end_offset end) - (case when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then 0 else r.statement_start_offset end)) / 2) + 1))' insert into #7ad select c009, 1, @d09, 'cb6_' + c140, c140, @d09 from #8ec where c140 = 'statement' insert into #7ad select c009, 1, @d09, c140, c140, @d09 from #8ec where c140 = 'cb6_statement' end else begin set @d09 = '(select ''='' + char(13) + char(10) + case when rst.text like ''%['' + char(0) + '']%'' collate sql_latin1_general_cp850_bin2 or rst.text like ''%['' + char(1) + ''-'' + char(8) + '']%'' or rst.text like ''%['' + char(11) + '']%'' or rst.text like ''%['' + char(12) + '']%'' or rst.text like ''%['' + char(14) + ''-'' + char(31) + '']%'' then replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace((select substring(rst.text, ((case when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then 0 else r.statement_start_offset end) / 2) + 1, (((case when r.statement_end_offset = -1 then datalength(rst.text) when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then datalength(rst.text) else r.statement_end_offset end) - (case when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then 0 else r.statement_start_offset end)) / 2) + 1)), nchar(0), ''[nchar(0)]'' collate sql_latin1_general_cp850_bin2), nchar(1), ''[nchar(1)]''), nchar(2), ''[nchar(2)]''), nchar(3), ''[nchar(3)]''), nchar(4), ''[nchar(4)]''), nchar(5), ''[nchar(5)]''), nchar(6), ''[nchar(6)]''), nchar(7), ''[nchar(7)]''), nchar(8), ''[nchar(8)]''), nchar(11), ''[nchar(11)]''), nchar(12), ''[nchar(12)]''), nchar(14), ''[nchar(14)]''), nchar(15), ''[nchar(15)]''), nchar(16), ''[nchar(16)]''), nchar(17), ''[nchar(17)]''), nchar(18), ''[nchar(18)]''), nchar(19), ''[nchar(19)]''), nchar(20), ''[nchar(20)]''), nchar(21), ''[nchar(21)]''), nchar(22), ''[nchar(22)]''), nchar(23), ''[nchar(23)]''), nchar(24), ''[nchar(24)]''), nchar(25), ''[nchar(25)]''), nchar(26), ''[nchar(26)]''), nchar(27), ''[nchar(27)]''), nchar(28), ''[nchar(28)]''), nchar(29), ''[nchar(29)]''), nchar(30), ''[nchar(30)]''), nchar(31), ''[nchar(31)]'') else (select substring(rst.text, ((case when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then 0 else r.statement_start_offset end) / 2) + 1, (((case when r.statement_end_offset = -1 then datalength(rst.text) when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then datalength(rst.text) else r.statement_end_offset end) - (case when (datalength(rst.text) - r.statement_start_offset) != abs(datalength(rst.text) - r.statement_start_offset) or (datalength(rst.text) - r.statement_end_offset) != abs(datalength(rst.text) - r.statement_end_offset) then 0 else r.statement_start_offset end)) / 2) + 1)) end + char(13) + char(10) as [processing-instruction(s)] for xml path(''''), type)' insert into #7ad select c009, 1, @d09, 'cb6_' + c140, c140, 'cast(' + @d09 + ' as nvarchar(max))' from #8ec where c140 = 'statement' insert into #7ad select c009, 1, @d09, c140, c140, 'cast(' + @d09 + ' as nvarchar(max))' from #8ec where c140 = 'cb6_statement' end insert into #7ad select c009, 0, case @8e3 when 0 then 'cast(tqp.query_plan as xml)' else 'tqp.query_plan' end, 'cb6_' + c140, c140, case @8e3 when 0 then 'cast(tqp.query_plan as nvarchar(max))' else 'tqp.query_plan' end from #8ec where c140 = 'text_query_plan' insert into #7ad select c009, 0, case @8e3 when 0 then 'cast(tqp.query_plan as xml)' else 'tqp.query_plan' end, c140, c140, case @8e3 when 0 then 'cast(tqp.query_plan as nvarchar(max))' else 'tqp.query_plan' end from #8ec where c140 = 'cb6_text_query_plan' insert into #7ad select c009, 0, case @8e3 when 0 then 'cast(ftqp.query_plan as xml)' else 'ftqp.query_plan' end, 'cb6_' + c140, c140, case @8e3 when 0 then 'cast(ftqp.query_plan as nvarchar(max))' else 'ftqp.query_plan' end from #8ec where c140 = 'full_text_query_plan' insert into #7ad select c009, 0, case @8e3 when 0 then 'cast(ftqp.query_plan as xml)' else 'ftqp.query_plan' end, c140, c140, case @8e3 when 0 then 'cast(ftqp.query_plan as nvarchar(max))' else 'ftqp.query_plan' end from #8ec where c140 = 'cb6_full_text_query_plan' insert into #7ad select c009, 0, 'pa.plan_attributes_info', 'cb6_' + c140, c140, 'cast(pa.plan_attributes_info as nvarchar(max))' from #8ec where c140 = 'plan_attributes_info' insert into #7ad select c009, 0, 'pa.plan_attributes_info', c140, c140, 'cast(pa.plan_attributes_info as nvarchar(max))' from #8ec where c140 = 'cb6_plan_attributes_info' insert into #7ad select c009, 0, 'qp.query_plan', 'cb6_' + c140, c140, 'cast(qp.query_plan as nvarchar(max))' from #8ec where c140 = 'query_plan' insert into #7ad select c009, 0, 'qp.query_plan', c140, c140, 'cast(qp.query_plan as nvarchar(max))' from #8ec where c140 = 'cb6_query_plan' insert into #7ad select c009, 0, 'qpc.query_plan', 'cb6_' + c140, c140, 'cast(qpc.query_plan as nvarchar(max))' from #8ec where c140 = 'query_plan_checksum' insert into #7ad select c009, 0, 'qpc.query_plan', c140, c140, 'cast(qpc.query_plan as nvarchar(max))' from #8ec where c140 = 'cb6_query_plan_checksum' if (exists (select c140 from #8ec where c140 in ('c0d_custom_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_custom_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_custom_info, c13_custom_info)', 'cc76_custom_info', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_custom_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_custom_info', 'c13_custom_info') end if (exists (select c140 from #8ec where c140 in ('c0d_transaction_begin_time') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_transaction_begin_time') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_transaction_begin_time, c13_transaction_begin_time)', 'cc76_transaction_begin_time', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_transaction_begin_time' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_transaction_begin_time', 'c13_transaction_begin_time') end if (exists (select c140 from #8ec where c140 in ('c0d_locks_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_locks_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_locks_info, c13_locks_info)', 'cc76_locks_info', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_locks_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_locks_info', 'c13_locks_info') end if (exists (select c140 from #8ec where c140 in ('c0d_input_buffer_valid_flag') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_input_buffer_valid_flag') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_input_buffer_valid_flag, c13_input_buffer_valid_flag)', 'cc76_input_buffer_valid_flag', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_input_buffer_valid_flag' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_input_buffer_valid_flag', 'c13_input_buffer_valid_flag') end if (exists (select c140 from #8ec where c140 in ('c0d_lock_count') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_lock_count') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_lock_count, c13_lock_count)', 'cc76_lock_count', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_lock_count' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_lock_count', 'c13_lock_count') end if (exists (select c140 from #8ec where c140 in ('c0d_transaction_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_transaction_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_transaction_info, c13_transaction_info)', 'cc76_transaction_info', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_transaction_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_transaction_info', 'c13_transaction_info') end if (exists (select c140 from #8ec where c140 in ('c0d_lock_owner_id') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c13_lock_owner_id') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_lock_owner_id, c13_lock_owner_id)', 'cc76_lock_owner_id', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_lock_owner_id' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_lock_owner_id', 'c13_lock_owner_id') end insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'case c6e_database_id when 0 then NULL else db_name(c6e_database_id) end', 'c6e_database_name', c140 from #8ec where c140 = 'c6e_database_id' and cfe5 = 1 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'case cb6_database_id when 0 then NULL else db_name(cb6_database_id) end', 'cb6_database_name', c140 from #8ec where c140 = 'cb6_database_id' and cfe5 = 1 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 1, c140, c140, c140 from #8ec where c140 in ('cb6_database_id', 'c6e_database_id') and cfe5 = 1 if (exists (select c140 from #8ec where c140 in ('c6e_database_id') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('cb6_database_id') and cfe5 = 0)) begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'case isnull(cb6_database_id, c6e_database_id) when 0 then NULL else db_name(isnull(cb6_database_id, c6e_database_id)) end', 'c5b2_database_name', c140 from #8ec where c140 = 'c6e_database_id' and cfe5 = 0 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 1, 'isnull(cb6_database_id, c6e_database_id)', 'c5b2_database_id', c140 from #8ec where c140 = 'c6e_database_id' and cfe5 = 0 end else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'case c6e_database_id when 0 then NULL else db_name(c6e_database_id) end', 'c6e_database_name', c140 from #8ec where c140 = 'c6e_database_id' and cfe5 = 0 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'case cb6_database_id when 0 then NULL else db_name(cb6_database_id) end', 'cb6_database_name', c140 from #8ec where c140 = 'cb6_database_id' and cfe5 = 0 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 1, c140, c140, c140 from #8ec where c140 in ('cb6_database_id', 'c6e_database_id') and cfe5 = 0 end if exists (select c85c from #cd8 where upper(c85c) in ('ALL')) begin if (exists (select c140 from #8ec where c140 in ('c13_input_buffer_checksum') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('c0d_input_buffer_checksum') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c13_input_buffer_checksum, c0d_input_buffer_checksum)', 'ca63_input_buffer_checksum', c140 from #8ec where c140 = 'c13_input_buffer_checksum' and cfe5 = 0 else if (exists (select c140 from #8ec where c140 in ('c13_input_buffer_checksum') and cfe5 = 0) or exists (select c140 from #8ec where c140 in ('c0d_input_buffer_checksum') and cfe5 = 0)) begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where c140 = 'c13_input_buffer_checksum' and cfe5 = 0 insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where c140 = 'c0d_input_buffer_checksum' and cfe5 = 0 end insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where c140 = 'c0d_query_plan_text_checksum' and cfe5 = 0 end if (exists (select c140 from #8ec where c140 in ('c0d_procedure_stats_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('cc2_procedure_stats_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_procedure_stats_info, cc2_procedure_stats_info)', 'c658_procedure_stats_info', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_procedure_stats_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_procedure_stats_info', 'cc2_procedure_stats_info') end if (exists (select c140 from #8ec where c140 in ('c0d_trigger_stats_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('cc2_trigger_stats_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_trigger_stats_info, cc2_trigger_stats_info)', 'c658_trigger_stats_info', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_trigger_stats_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_trigger_stats_info', 'cc2_trigger_stats_info') end if (exists (select c140 from #8ec where c140 in ('c0d_query_stats_info') and cfe5 = 0) and exists (select c140 from #8ec where c140 in ('cc2_query_stats_info') and cfe5 = 0)) insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, 'isnull(c0d_query_stats_info, cc2_query_stats_info)', 'c658_query_stats_info', c140 from #8ec where cfe5 = 0 and c140 = 'c0d_query_stats_info' else begin insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where cfe5 = 0 and c140 in ('c0d_query_stats_info', 'cc2_query_stats_info') end insert into #7ad (cd3b, c7a3, c140, ceee, c647) select c009, 0, c140, c140, c140 from #8ec where c140 not in ('c0d_input_buffer_checksum', 'cb6_ansi_padding', 'cb6_database_id', 'cb6_ansi_warnings', 'cb6_ansi_null_dflt_on', 'c6e_deadlock_priority', 'c6e_date_format', 'c13_input_buffer_valid_flag', 'cb6_language', 'c6e_transaction_isolation_level', 'cc2_query_stats_info', 'c6e_database_id', 'c0d_transaction_begin_time', 'cb6_text_size', 'c6e_group_id', 'c13_locks_info', 'c6e_language', 'c6e_ansi_nulls', 'cb6_open_transaction_count', 'cb6_ansi_defaults', 'c0d_locks_info', 'c6e_lock_timeout', 'c13_lock_count', 'cb6_concat_null_yields_null', 'c6e_ansi_warnings', 'c0d_transaction_info', 'cb6_prev_error', 'cb6_date_format', 'cb6_ansi_nulls', 'cb6_transaction_isolation_level', 'c0d_trigger_stats_info', 'c6e_endpoint_id', 'c13_transaction_begin_time', 'c0d_custom_info', 'c0d_query_plan_text_checksum', 'c13_custom_info', 'c6e_open_transaction_count', 'c6e_prev_error', 'c6e_quoted_identifier', 'c0d_procedure_stats_info', 'c6e_ansi_padding', 'c6e_context_info', 'c0d_query_stats_info', 'cb6_date_first', 'c6e_concat_null_yields_null', 'c6e_ansi_null_dflt_on', 'cb6_lock_timeout', 'c0d_lock_count', 'c13_lock_owner_id', 'c0d_input_buffer_valid_flag', 'c5f_endpoint_id', 'cc2_procedure_stats_info', 'c6e_arithabort', 'c13_transaction_info', 'cb6_context_info', 'c6e_date_first', 'c6e_ansi_defaults', 'cb6_arithabort', 'cb6_group_id', 'cb6_quoted_identifier', 'cc2_trigger_stats_info', 'cb6_deadlock_priority', 'c13_input_buffer_checksum', 'c6e_text_size', 'c0d_lock_owner_id') and c140 not in (select c647 from #7ad) insert into #407 select c140 from (select c140, min(c009) as c009 from #8ec where c140 not in ('cb6_text_query_plan', 'c5f_servername', 'cb6_query_plan', 'cb6_text', 'cb6_servername', 'c5f_text', 'c5f_connection_id', 'cb6_ctime', 'cb6_statement', 'c6e_session_id', 'c5f_session_id', 'statement', 'cc2_connection_id', 'c6e_input_buffer', 'cc2_session_id', 'c5f_ctime', 'cb6_plan_attributes_info', 'input_buffer', 'c6e_ctime', 'cb6_input_buffer', 'text_object_name', 'query_plan', 'cb6_session_id', 'c0d_session_id', 'cb6_statement_object_name', 'statement_object_name', 'cb6_request_id', 'cb6_query_plan_checksum', 'c6e_servername', 'c5f_text_object_name', 'c0d_request_id', 'full_text_query_plan', 'plan_attributes_info', 'text', 'c0d_connection_id', 'query_plan_checksum', 'text_query_plan', 'cb6_connection_id', 'cb6_full_text_query_plan', 'cb6_text_object_name', 'c13_session_id') group by c140) as c140 order by c009 set @025 = '' + (select c140 + ', ' from #407 where c140 like 'c6e_%' or c140 like 'c13_%' order by c009 for xml path('')) + '' set @b01 = '' + (select c140 + ', ' from #407 where c140 like 'c5f_%' or c140 like 'cc2_%' order by c009 for xml path('')) + '' set @736 = '' + (select c140 + ', ' from #407 where c140 like 'cb6_%' or c140 like 'c0d_%' order by c009 for xml path('')) + '' if (@025 is NULL) set @025 = '' if (@b01 is NULL) set @b01 = '' if (@736 is NULL) set @736 = '' select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'Post processing took ' + cast(@bc7 as nvarchar(256)) + ' ms' if (@e82 = 1 and @9d5 = 0) begin select @4e4 = getdate() set @05b = 'use [' + db_name(@bb0) + '] insert into #c1d select ''c6e_'' + c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sessions'' union all select ''c5f_'' + c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_connections'' union all select ''cb6_'' + c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests'' union all select ''c13_'' + c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_sessions'' union all select ''cc2_'' + c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_connections'' union all select ''c0d_'' + c.name from sys.objects o inner join sys.columns c on (o.object_id = c.object_id) where o.schema_id = ' + cast (@c91 as nvarchar(256)) + ' and o.name = ''sqlws_dm_exec_requests''' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into #c1d failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end if exists (select c140 from #407 where c140 not in (select cdf1 from #c1d)) begin create table #4cc (c140 nvarchar(max)) insert into #4cc select c140 from #407 where c140 not in (select cdf1 from #c1d) if (@e82 = 1 and @b6d = 0) begin set @05b = 'use [' + db_name(@bb0) + '] if exists (select c140 from #4cc where c140 = ''c6e_login_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add login_time datetime if exists (select c140 from #4cc where c140 = ''c6e_host_name'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add host_name nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_program_name'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add program_name nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_host_process_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add host_process_id int if exists (select c140 from #4cc where c140 = ''c6e_client_version'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add client_version int if exists (select c140 from #4cc where c140 = ''c6e_client_interface_name'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add client_interface_name nvarchar(32) if exists (select c140 from #4cc where c140 = ''c6e_security_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add security_id varbinary(85) if exists (select c140 from #4cc where c140 = ''c6e_login_name'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add login_name nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_nt_domain'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add nt_domain nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_nt_user_name'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add nt_user_name nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_status'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add status nvarchar(30) if exists (select c140 from #4cc where c140 = ''c6e_context_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add context_info varbinary(128) if exists (select c140 from #4cc where c140 = ''c6e_cpu_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add cpu_time int if exists (select c140 from #4cc where c140 = ''c6e_memory_usage'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add memory_usage int if exists (select c140 from #4cc where c140 = ''c6e_total_scheduled_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add total_scheduled_time int if exists (select c140 from #4cc where c140 = ''c6e_total_elapsed_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add total_elapsed_time int if exists (select c140 from #4cc where c140 = ''c6e_endpoint_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add endpoint_id int if exists (select c140 from #4cc where c140 = ''c6e_last_request_start_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add last_request_start_time datetime if exists (select c140 from #4cc where c140 = ''c6e_last_request_end_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add last_request_end_time datetime if exists (select c140 from #4cc where c140 = ''c6e_reads'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add reads bigint if exists (select c140 from #4cc where c140 = ''c6e_writes'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add writes bigint if exists (select c140 from #4cc where c140 = ''c6e_logical_reads'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add logical_reads bigint if exists (select c140 from #4cc where c140 = ''c6e_is_user_process'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add is_user_process bit if exists (select c140 from #4cc where c140 = ''c6e_text_size'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add text_size int if exists (select c140 from #4cc where c140 = ''c6e_language'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add language nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_date_format'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add date_format nvarchar(3) if exists (select c140 from #4cc where c140 = ''c6e_date_first'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add date_first smallint if exists (select c140 from #4cc where c140 = ''c6e_quoted_identifier'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add quoted_identifier bit if exists (select c140 from #4cc where c140 = ''c6e_arithabort'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add arithabort bit if exists (select c140 from #4cc where c140 = ''c6e_ansi_null_dflt_on'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add ansi_null_dflt_on bit if exists (select c140 from #4cc where c140 = ''c6e_ansi_defaults'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add ansi_defaults bit if exists (select c140 from #4cc where c140 = ''c6e_ansi_warnings'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add ansi_warnings bit if exists (select c140 from #4cc where c140 = ''c6e_ansi_padding'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add ansi_padding bit if exists (select c140 from #4cc where c140 = ''c6e_ansi_nulls'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add ansi_nulls bit if exists (select c140 from #4cc where c140 = ''c6e_concat_null_yields_null'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add concat_null_yields_null bit if exists (select c140 from #4cc where c140 = ''c6e_transaction_isolation_level'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add transaction_isolation_level smallint if exists (select c140 from #4cc where c140 = ''c6e_lock_timeout'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add lock_timeout int if exists (select c140 from #4cc where c140 = ''c6e_deadlock_priority'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add deadlock_priority int if exists (select c140 from #4cc where c140 = ''c6e_row_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add row_count bigint if exists (select c140 from #4cc where c140 = ''c6e_prev_error'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add prev_error int if exists (select c140 from #4cc where c140 = ''c6e_original_security_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add original_security_id varbinary(85) if exists (select c140 from #4cc where c140 = ''c6e_original_login_name'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add original_login_name nvarchar(128) if exists (select c140 from #4cc where c140 = ''c6e_last_successful_logon'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add last_successful_logon datetime if exists (select c140 from #4cc where c140 = ''c6e_last_unsuccessful_logon'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add last_unsuccessful_logon datetime if exists (select c140 from #4cc where c140 = ''c6e_unsuccessful_logons'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add unsuccessful_logons bigint if exists (select c140 from #4cc where c140 = ''c6e_group_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add group_id int if exists (select c140 from #4cc where c140 = ''c6e_database_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add database_id smallint if exists (select c140 from #4cc where c140 = ''c6e_authenticating_database_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add authenticating_database_id int if exists (select c140 from #4cc where c140 = ''c6e_open_transaction_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add open_transaction_count int' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if exists (select c140 from #4cc where c140 = ''c5f_most_recent_session_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add most_recent_session_id int if exists (select c140 from #4cc where c140 = ''c5f_connect_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add connect_time datetime if exists (select c140 from #4cc where c140 = ''c5f_net_transport'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add net_transport nvarchar(40) if exists (select c140 from #4cc where c140 = ''c5f_protocol_type'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add protocol_type nvarchar(40) if exists (select c140 from #4cc where c140 = ''c5f_protocol_version'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add protocol_version int if exists (select c140 from #4cc where c140 = ''c5f_endpoint_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add endpoint_id int if exists (select c140 from #4cc where c140 = ''c5f_encrypt_option'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add encrypt_option nvarchar(40) if exists (select c140 from #4cc where c140 = ''c5f_auth_scheme'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add auth_scheme nvarchar(40) if exists (select c140 from #4cc where c140 = ''c5f_node_affinity'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add node_affinity smallint if exists (select c140 from #4cc where c140 = ''c5f_num_reads'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add num_reads int if exists (select c140 from #4cc where c140 = ''c5f_num_writes'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add num_writes int if exists (select c140 from #4cc where c140 = ''c5f_last_read'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add last_read datetime if exists (select c140 from #4cc where c140 = ''c5f_last_write'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add last_write datetime if exists (select c140 from #4cc where c140 = ''c5f_net_packet_size'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add net_packet_size int if exists (select c140 from #4cc where c140 = ''c5f_client_net_address'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add client_net_address varchar(48) if exists (select c140 from #4cc where c140 = ''c5f_client_tcp_port'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add client_tcp_port int if exists (select c140 from #4cc where c140 = ''c5f_local_net_address'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add local_net_address varchar(48) if exists (select c140 from #4cc where c140 = ''c5f_local_tcp_port'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add local_tcp_port int if exists (select c140 from #4cc where c140 = ''c5f_parent_connection_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add parent_connection_id uniqueidentifier if exists (select c140 from #4cc where c140 = ''c5f_most_recent_sql_handle'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add most_recent_sql_handle varbinary(64)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if exists (select c140 from #4cc where c140 = ''cb6_start_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add start_time datetime if exists (select c140 from #4cc where c140 = ''cb6_status'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add status nvarchar(30) if exists (select c140 from #4cc where c140 = ''cb6_command'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add command nvarchar(32) if exists (select c140 from #4cc where c140 = ''cb6_sql_handle'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add sql_handle varbinary(64) if exists (select c140 from #4cc where c140 = ''cb6_statement_start_offset'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add statement_start_offset int if exists (select c140 from #4cc where c140 = ''cb6_statement_end_offset'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add statement_end_offset int if exists (select c140 from #4cc where c140 = ''cb6_plan_handle'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add plan_handle varbinary(64) if exists (select c140 from #4cc where c140 = ''cb6_database_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add database_id smallint if exists (select c140 from #4cc where c140 = ''cb6_user_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add user_id int if exists (select c140 from #4cc where c140 = ''cb6_blocking_session_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add blocking_session_id smallint if exists (select c140 from #4cc where c140 = ''cb6_wait_type'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add wait_type nvarchar(60) if exists (select c140 from #4cc where c140 = ''cb6_wait_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add wait_time int if exists (select c140 from #4cc where c140 = ''cb6_last_wait_type'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add last_wait_type nvarchar(60) if exists (select c140 from #4cc where c140 = ''cb6_wait_resource'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add wait_resource nvarchar(256) if exists (select c140 from #4cc where c140 = ''cb6_open_transaction_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add open_transaction_count int if exists (select c140 from #4cc where c140 = ''cb6_open_resultset_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add open_resultset_count int if exists (select c140 from #4cc where c140 = ''cb6_transaction_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add transaction_id bigint if exists (select c140 from #4cc where c140 = ''cb6_context_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add context_info varbinary(128) if exists (select c140 from #4cc where c140 = ''cb6_percent_complete'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add percent_complete real if exists (select c140 from #4cc where c140 = ''cb6_estimated_completion_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add estimated_completion_time bigint if exists (select c140 from #4cc where c140 = ''cb6_cpu_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add cpu_time int if exists (select c140 from #4cc where c140 = ''cb6_total_elapsed_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add total_elapsed_time int if exists (select c140 from #4cc where c140 = ''cb6_scheduler_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add scheduler_id int if exists (select c140 from #4cc where c140 = ''cb6_task_address'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add task_address varbinary(8) if exists (select c140 from #4cc where c140 = ''cb6_reads'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add reads bigint if exists (select c140 from #4cc where c140 = ''cb6_writes'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add writes bigint if exists (select c140 from #4cc where c140 = ''cb6_logical_reads'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add logical_reads bigint if exists (select c140 from #4cc where c140 = ''cb6_text_size'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add text_size int if exists (select c140 from #4cc where c140 = ''cb6_language'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add language nvarchar(128) if exists (select c140 from #4cc where c140 = ''cb6_date_format'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add date_format nvarchar(3) if exists (select c140 from #4cc where c140 = ''cb6_date_first'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add date_first smallint if exists (select c140 from #4cc where c140 = ''cb6_quoted_identifier'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add quoted_identifier bit if exists (select c140 from #4cc where c140 = ''cb6_arithabort'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add arithabort bit if exists (select c140 from #4cc where c140 = ''cb6_ansi_null_dflt_on'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add ansi_null_dflt_on bit if exists (select c140 from #4cc where c140 = ''cb6_ansi_defaults'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add ansi_defaults bit if exists (select c140 from #4cc where c140 = ''cb6_ansi_warnings'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add ansi_warnings bit if exists (select c140 from #4cc where c140 = ''cb6_ansi_padding'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add ansi_padding bit if exists (select c140 from #4cc where c140 = ''cb6_ansi_nulls'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add ansi_nulls bit if exists (select c140 from #4cc where c140 = ''cb6_concat_null_yields_null'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add concat_null_yields_null bit if exists (select c140 from #4cc where c140 = ''cb6_transaction_isolation_level'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add transaction_isolation_level smallint if exists (select c140 from #4cc where c140 = ''cb6_lock_timeout'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add lock_timeout int if exists (select c140 from #4cc where c140 = ''cb6_deadlock_priority'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add deadlock_priority int if exists (select c140 from #4cc where c140 = ''cb6_row_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add row_count bigint if exists (select c140 from #4cc where c140 = ''cb6_prev_error'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add prev_error int if exists (select c140 from #4cc where c140 = ''cb6_nest_level'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add nest_level int if exists (select c140 from #4cc where c140 = ''cb6_granted_query_memory'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add granted_query_memory int if exists (select c140 from #4cc where c140 = ''cb6_executing_managed_code'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add executing_managed_code bit if exists (select c140 from #4cc where c140 = ''cb6_group_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add group_id int if exists (select c140 from #4cc where c140 = ''cb6_query_hash'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_hash binary(8) if exists (select c140 from #4cc where c140 = ''cb6_query_plan_hash'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_plan_hash binary(8) if exists (select c140 from #4cc where c140 = ''cb6_statement_sql_handle'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add statement_sql_handle varbinary(64) if exists (select c140 from #4cc where c140 = ''cb6_statement_context_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add statement_context_id bigint' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if exists (select c140 from #4cc where c140 = ''c13_job_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add job_info xml if exists (select c140 from #4cc where c140 = ''c13_is_blocker'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add is_blocker bit if exists (select c140 from #4cc where c140 = ''c13_is_head_blocker'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add is_head_blocker bit if exists (select c140 from #4cc where c140 = ''c13_blocked_session_ids'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add blocked_session_ids nvarchar(max) if exists (select c140 from #4cc where c140 = ''c13_input_buffer_checksum'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add input_buffer_checksum int if exists (select c140 from #4cc where c140 = ''c13_input_buffer_valid_flag'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add input_buffer_valid_flag bit if exists (select c140 from #4cc where c140 = ''c13_lock_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add lock_count int if exists (select c140 from #4cc where c140 = ''c13_lock_owner_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add lock_owner_id bigint if exists (select c140 from #4cc where c140 = ''c13_locks_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add locks_info xml if exists (select c140 from #4cc where c140 = ''c13_transaction_begin_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add transaction_begin_time datetime if exists (select c140 from #4cc where c140 = ''c13_transaction_log_record_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add transaction_log_record_count int if exists (select c140 from #4cc where c140 = ''c13_transaction_log_bytes_used'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add transaction_log_bytes_used bigint if exists (select c140 from #4cc where c140 = ''c13_transaction_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add transaction_info xml if exists (select c140 from #4cc where c140 = ''c13_session_tempdb_usage_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add session_tempdb_usage_kb int if exists (select c140 from #4cc where c140 = ''c13_session_max_tempdb_usage_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add session_max_tempdb_usage_kb int if exists (select c140 from #4cc where c140 = ''c13_session_tempdb_usage_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add session_tempdb_usage_info xml if exists (select c140 from #4cc where c140 = ''c13_cursor_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add cursor_count int if exists (select c140 from #4cc where c140 = ''c13_max_cursor_dormant_duration'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add max_cursor_dormant_duration bigint if exists (select c140 from #4cc where c140 = ''c13_cursors_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add cursors_info xml if exists (select c140 from #4cc where c140 = ''c13_waiting_tasks_wait_types'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add waiting_tasks_wait_types nvarchar(max) if exists (select c140 from #4cc where c140 = ''c13_waiting_tasks_max_wait_duration_ms'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add waiting_tasks_max_wait_duration_ms bigint if exists (select c140 from #4cc where c140 = ''c13_waiting_tasks_blocking_session_ids'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add waiting_tasks_blocking_session_ids nvarchar(max) if exists (select c140 from #4cc where c140 = ''c13_waiting_tasks_valid_flag'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add waiting_tasks_valid_flag bit if exists (select c140 from #4cc where c140 = ''c13_waiting_tasks_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add waiting_tasks_info xml if exists (select c140 from #4cc where c140 = ''c13_service_broker_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add service_broker_info xml if exists (select c140 from #4cc where c140 = ''c13_sp_whopro_inputparameters'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add sp_whopro_inputparameters nvarchar(max) if exists (select c140 from #4cc where c140 = ''c13_custom_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions add custom_info nvarchar(max)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] alter table [' + schema_name(@c91) + '].sqlws_dm_exec_sessions failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if exists (select c140 from #4cc where c140 = ''cc2_query_stats_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add query_stats_info xml if exists (select c140 from #4cc where c140 = ''cc2_procedure_stats_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add procedure_stats_info xml if exists (select c140 from #4cc where c140 = ''cc2_trigger_stats_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections add trigger_stats_info xml' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] alter table [' + schema_name(@c91) + '].sqlws_dm_exec_connections failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @05b = 'use [' + db_name(@bb0) + '] if exists (select c140 from #4cc where c140 = ''c0d_is_blocked'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add is_blocked bit if exists (select c140 from #4cc where c140 = ''c0d_is_dead_locked'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add is_dead_locked bit if exists (select c140 from #4cc where c140 = ''c0d_blocker_session_ids'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add blocker_session_ids nvarchar(max) if exists (select c140 from #4cc where c140 = ''c0d_head_blocker_session_ids'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add head_blocker_session_ids nvarchar(max) if exists (select c140 from #4cc where c140 = ''c0d_input_buffer_checksum'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add input_buffer_checksum int if exists (select c140 from #4cc where c140 = ''c0d_input_buffer_valid_flag'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add input_buffer_valid_flag bit if exists (select c140 from #4cc where c140 = ''c0d_wait_resource_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add wait_resource_info nvarchar(max) if exists (select c140 from #4cc where c140 = ''c0d_lock_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add lock_count int if exists (select c140 from #4cc where c140 = ''c0d_lock_owner_id'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add lock_owner_id bigint if exists (select c140 from #4cc where c140 = ''c0d_locks_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add locks_info xml if exists (select c140 from #4cc where c140 = ''c0d_transaction_begin_time'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add transaction_begin_time datetime if exists (select c140 from #4cc where c140 = ''c0d_transaction_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add transaction_info xml if exists (select c140 from #4cc where c140 = ''c0d_task_tempdb_usage_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add task_tempdb_usage_kb int if exists (select c140 from #4cc where c140 = ''c0d_task_max_tempdb_usage_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add task_max_tempdb_usage_kb int if exists (select c140 from #4cc where c140 = ''c0d_task_tempdb_usage_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add task_tempdb_usage_info xml if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_requested_memory_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_requested_memory_kb bigint if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_granted_memory_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_granted_memory_kb bigint if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_used_memory_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_used_memory_kb bigint if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_max_used_memory_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_max_used_memory_kb bigint if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_wait_time_ms'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_wait_time_ms bigint if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_ideal_memory_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_ideal_memory_kb bigint if exists (select c140 from #4cc where c140 = ''c0d_query_memory_grants_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_memory_grants_info xml if exists (select c140 from #4cc where c140 = ''c0d_query_profiles_cpu_time_ms'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_profiles_cpu_time_ms bigint if exists (select c140 from #4cc where c140 = ''c0d_query_profiles_logical_read_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_profiles_logical_read_count bigint if exists (select c140 from #4cc where c140 = ''c0d_query_profiles_physical_read_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_profiles_physical_read_count bigint if exists (select c140 from #4cc where c140 = ''c0d_query_profiles_read_ahead_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_profiles_read_ahead_count bigint if exists (select c140 from #4cc where c140 = ''c0d_query_profiles_write_page_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_profiles_write_page_count bigint if exists (select c140 from #4cc where c140 = ''c0d_query_profiles_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_profiles_info xml if exists (select c140 from #4cc where c140 = ''c0d_query_stats_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_stats_info xml if exists (select c140 from #4cc where c140 = ''c0d_procedure_stats_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add procedure_stats_info xml if exists (select c140 from #4cc where c140 = ''c0d_trigger_stats_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add trigger_stats_info xml if exists (select c140 from #4cc where c140 = ''c0d_cached_plans_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add cached_plans_info xml if exists (select c140 from #4cc where c140 = ''c0d_tasks_count'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add tasks_count int if exists (select c140 from #4cc where c140 = ''c0d_tasks_context_switches'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add tasks_context_switches int if exists (select c140 from #4cc where c140 = ''c0d_tasks_pending_io'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add tasks_pending_io int if exists (select c140 from #4cc where c140 = ''c0d_tasks_io_size_kb'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add tasks_io_size_kb int if exists (select c140 from #4cc where c140 = ''c0d_read_bytes_per_second'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add read_bytes_per_second int if exists (select c140 from #4cc where c140 = ''c0d_tasks_ios_per_second'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add tasks_ios_per_second int if exists (select c140 from #4cc where c140 = ''c0d_tasks_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add tasks_info xml if exists (select c140 from #4cc where c140 = ''c0d_workers_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add workers_info xml if exists (select c140 from #4cc where c140 = ''c0d_threads_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add threads_info xml if exists (select c140 from #4cc where c140 = ''c0d_query_plan_text_checksum'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add query_plan_text_checksum int if exists (select c140 from #4cc where c140 = ''c0d_custom_info'') ' set @05b = @05b + 'alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests add custom_info nvarchar(max)' exec @d10 = sp_executesql @05b if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] alter table [' + schema_name(@c91) + '].sqlws_dm_exec_requests failed: sp_executesql N''' + @05b + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end end end set @025 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_sessions (servername, session_id, ' + replace(replace(@025, 'c6e_', ''), 'c13_', '') + 'ctime' + ') select @@servername, s.session_id, ' + replace(replace(@025, 'c6e_', 's.'), 'c13_', 'si.') + '@datetime from #4d3 s inner join #3ec si on (s.session_id = si.session_id)' exec @d10 = sp_executesql @025, N'@datetime datetime', @datetime if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_sessions failed: sp_executesql N''' + @025 + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @b01 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_connections (servername, session_id, connection_id, ' + replace(replace(@b01, 'c5f_', ''), 'cc2_', '') + 'ctime' + ') select @@servername, c.session_id, c.connection_id, ' + replace(replace(@b01, 'c5f_', 'c.'), 'cc2_', 'ci.') + '@datetime from #22c c inner join #bb0 ci on (c.session_id = ci.session_id and c.connection_id = ci.connection_id)' exec @d10 = sp_executesql @b01, N'@datetime datetime', @datetime if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_connections failed: sp_executesql N''' + @b01 + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @736 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_requests (servername, session_id, request_id, connection_id, ' + replace(replace(@736, 'cb6_', ''), 'c0d_', '') + 'ctime' + ') select @@servername, r.session_id, r.request_id, r.connection_id, ' + replace(replace(@736, 'cb6_', 'r.'), 'c0d_', 'ri.') + '@datetime from #3fb r inner join #8db ri on (r.session_id = ri.session_id and r.request_id = ri.request_id)' exec @d10 = sp_executesql @736, N'@datetime datetime', @datetime if (@d10 <> 0) begin set @a53 = 'use [' + db_name(@bb0) + '] insert into [' + schema_name(@c91) + '].sqlws_dm_exec_requests failed: sp_executesql N''' + @736 + '''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'Insert into sqlws_dm_exec_... tables took ' + cast(@bc7 as nvarchar(256)) + ' ms' end insert into #7ad values (0, 0, 'c6e_session_id', 's.session_id', 'c6e_session_id', 's.session_id') declare @657 int select @657 = max(cd3b) + 1 from #7ad insert into #7ad values (@657 + 1, 0, 'cb6_request_id', 'r.request_id', 'cb6_request_id', 'r.request_id') insert into #7ad values (@657 + 2, 0, 'c5f_connection_id', 'c.connection_id', 'c5f_connection_id', 'c.connection_id') if (@e82 = 1 or @9d5 = 1) insert into #7ad values (@657 + 3, 0, 'c6e_ctime', 's.ctime', 'c6e_ctime', 's.ctime') update #7ad set c140 = replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(c140, 'ca63_', 'sr.'), 'c80a_', 'cs.'), 'c5b2_', 'rs.'), 'c52e_', 'rc.'), 'c965_', 'cs.'), 'cc76_', 'rs.'), 'c658_', 'rc.'), 'c6e_', 's.'), 'c13_', 's.'), 'c5f_', 'c.'), 'cc2_', 'c.'), 'cb6_', 'r.'), 'c0d_', 'r.'), ceee = replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(ceee, 'ca63_', 'sr.'), 'c80a_', 'cs.'), 'c5b2_', 'rs.'), 'c52e_', 'rc.'), 'c965_', 'cs.'), 'cc76_', 'rs.'), 'c658_', 'rc.'), 'c6e_', 's.'), 'c13_', 's.'), 'c5f_', 'c.'), 'cc2_', 'c.'), 'cb6_', 'r.'), 'c0d_', 'r.') set @05b = (select c140 + ' as ''' + ceee + '''' + case row_number() over (order by cd3b, c7a3) when count(*) over () then '' else ', ' end from #7ad order by cd3b, c7a3 for xml path('')) update #7ad set c508 = 'cast(' + c140 + ' as nvarchar(max))' where c140 like '%job_info%' or c140 like '%locks_info%' or c140 like '%transaction_info%' or c140 like '%session_tempdb_usage_info%' or c140 like '%cursors_info%' or c140 like '%waiting_tasks_info%' or c140 like '%service_broker_info%' or c140 like '%query_stats_info%' or c140 like '%procedure_stats_info%' or c140 like '%trigger_stats_info%' or c140 like '%locks_info%' or c140 like '%transaction_info%' or c140 like '%task_tempdb_usage_info%' or c140 like '%query_memory_grants_info%' or c140 like '%query_profiles_info%' or c140 like '%query_stats_info%' or c140 like '%procedure_stats_info%' or c140 like '%trigger_stats_info%' or c140 like '%cached_plans_info%' or c140 like '%tasks_info%' or c140 like '%workers_info%' or c140 like '%threads_info%' update #7ad set c508 = c140 where c508 is NULL declare @3cf nvarchar(max) declare @af1 xml create table #651 (c009 int identity, c140 nvarchar(max), ceee nvarchar(max)) set @3cf = replace(replace(replace(@order_by, char(13), ' '), char(10), ' '), '	', ' ') while (charindex('  ', @3cf) <> 0) set @3cf = replace(@3cf, '  ', ' ') if (@3cf = ' ') set @order_by = NULL if (@order_by is not NULL and ltrim(rtrim(upper(@order_by))) <> 'HELP') begin select @4e4 = getdate() set @order_by = replace(replace(replace(@order_by, char(13), ' '), char(10), ' '), '	', ' ') while (charindex('  ', @order_by) <> 0) set @order_by = replace(@order_by, '  ', ' ') set @af1 = N'<r>' + replace(lower(@order_by), ',', '</r><r>') + '</r>' insert into #651 (ceee) select ltrim(rtrim(c.value('.', 'nvarchar(max)'))) from @af1.nodes('r') as t(c) delete #651 where ceee is NULL or ceee = '' if exists (select ceee from #651) begin if exists (select ceee from #651 where ceee not in (select ceee from #7ad union select ceee + ' asc ' from #7ad union select ceee + ' desc ' from #7ad)) begin set @a53 = 'Invalid column alias ''' + (select ceee + case row_number() over (order by c009) when count(*) over () then '' else ', ' end from #651 where ceee not in (select ceee from #7ad union select ceee + ' asc ' from #7ad union select ceee + ' desc ' from #7ad) order by c009 for xml path('')) + ''' for @order_by specified' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end update #651 set c140 = s.c508 from #651 o inner join #7ad s on (o.ceee = s.ceee) update #651 set c140 = s.c508 + ' asc' from #651 o inner join #7ad s on (o.ceee = s.ceee + ' asc') update #651 set c140 = s.c508 + ' desc' from #651 o inner join #7ad s on (o.ceee = s.ceee + ' desc') if exists (select ceee from #651 where c140 is NULL) begin set @a53 = 'Invalid column alias ''' + (select ceee + case row_number() over (order by c009) when count(*) over () then '' else ', ' end from #651 where c140 is NULL order by c009 for xml path('')) + ''' for @order_by specified' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end set @3cf = (select c140 + case row_number() over (order by c009) when count(*) over () then '' else ', ' end from #651 order by c009 for xml path('')) end else set @3cf = NULL select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'Parsing parameter step 2 took ' + cast(@bc7 as nvarchar(256)) + ' ms' end if (@e82 = 1 or @9d5 = 1) begin set @05b = 'select ' + @05b + ' from [' + schema_name(@c91) + '].sqlws_dm_exec_sessions s left join [' + schema_name(@c91) + '].sqlws_dm_exec_connections c on ((s.servername = c.servername) and (s.session_id = c.session_id and s.ctime = c.ctime)) left join [' + schema_name(@c91) + '].sqlws_dm_exec_requests r on ((s.servername = r.servername) and ((c.session_id = r.session_id and c.connection_id = r.connection_id and c.ctime = r.ctime) or (s.session_id = r.session_id and c.connection_id is NULL and s.ctime = r.ctime)))' if exists (select c010 from #936 where c010 in ('input_buffer')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_input_buffer ibsr on ((s.servername = ibsr.servername) and ((s.input_buffer_checksum =ibsr.checksum) or (r.input_buffer_checksum =ibsr.checksum)))' if exists (select c010 from #936 where c010 in ('c6e_input_buffer')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_input_buffer ibs on ((s.servername = ibs.servername) and (s.input_buffer_checksum = ibs.checksum))' if exists (select c010 from #936 where c010 in ('cb6_input_buffer')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_input_buffer ibr on ((s.servername = ibr.servername) and (r.input_buffer_checksum =ibr.checksum))' if exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text rst on ((s.servername = rst.servername) and (r.sql_handle = rst.sql_handle)) left join [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text cst on ((s.servername = rst.servername) and (c.most_recent_sql_handle = cst.sql_handle))' if exists (select c010 from #936 where c010 in ('statement_object_name', 'statement', 'cb6_statement_object_name', 'cb6_statement')) if not exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_sql_text rst on ((s.servername = rst.servername) and (r.sql_handle = rst.sql_handle))' if exists (select c010 from #936 where c010 in ('query_plan', 'cb6_query_plan')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan qp on ((s.servername = qp.servername) and (r.plan_handle = qp.plan_handle))' if exists (select c010 from #936 where c010 in ('query_plan_checksum', 'cb6_query_plan_checksum')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_query_plan_checksum qpc on ((s.servername = qpc.servername) and (r.query_plan_text_checksum = qpc.checksum))' if exists (select c010 from #936 where c010 in ('text_query_plan', 'cb6_text_query_plan')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan tqp on ((s.servername = tqp.servername) and (r.plan_handle = tqp.plan_handle and r.statement_start_offset = tqp.statement_start_offset and r.statement_end_offset = tqp.statement_end_offset))' if exists (select c010 from #936 where c010 in ('full_text_query_plan', 'cb6_full_text_query_plan')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_text_query_plan ftqp on ((s.servername = ftqp.servername) and (r.plan_handle = ftqp.plan_handle and ftqp.statement_start_offset = 0 and ftqp.statement_end_offset = -1))' if exists (select c010 from #936 where c010 in ('plan_attributes_info', 'cb6_plan_attributes_info')) set @05b = @05b + ' left join [' + schema_name(@c91) + '].sqlws_dm_exec_plan_attributes pa on ((s.servername = pa.servername) and (r.plan_handle = pa.plan_handle))' end else begin set @05b = 'select ' + @05b + ' from (select s.session_id, s.login_time, s.host_name, s.program_name, s.host_process_id, s.client_version, s.client_interface_name, s.security_id, s.login_name, s.nt_domain, s.nt_user_name, s.status, s.context_info, s.cpu_time, s.memory_usage, s.total_scheduled_time, s.total_elapsed_time, s.endpoint_id, s.last_request_start_time, s.last_request_end_time, s.reads, s.writes, s.logical_reads, s.is_user_process, s.text_size, s.language, s.date_format, s.date_first, s.quoted_identifier, s.arithabort, s.ansi_null_dflt_on, s.ansi_defaults, s.ansi_warnings, s.ansi_padding, s.ansi_nulls, s.concat_null_yields_null, s.transaction_isolation_level, s.lock_timeout, s.deadlock_priority, s.row_count, s.prev_error, s.original_security_id, s.original_login_name, s.last_successful_logon, s.last_unsuccessful_logon, s.unsuccessful_logons, s.group_id, s.database_id, s.authenticating_database_id, s.open_transaction_count, si.job_info, si.is_blocker, si.is_head_blocker, si.blocked_session_ids, si.input_buffer_checksum, si.input_buffer_valid_flag, si.lock_count, si.lock_owner_id, si.locks_info, si.transaction_begin_time, si.transaction_log_record_count, si.transaction_log_bytes_used, si.transaction_info, si.session_tempdb_usage_kb, si.session_max_tempdb_usage_kb, si.session_tempdb_usage_info, si.cursor_count, si.max_cursor_dormant_duration, si.cursors_info, si.waiting_tasks_wait_types, si.waiting_tasks_max_wait_duration_ms, si.waiting_tasks_blocking_session_ids, si.waiting_tasks_valid_flag, si.waiting_tasks_info, si.service_broker_info, si.sp_whopro_inputparameters, si.custom_info from #4d3 s inner join #3ec si on (s.session_id = si.session_id)) s ' set @05b = @05b + 'left join (select c.session_id, c.most_recent_session_id, c.connect_time, c.net_transport, c.protocol_type, c.protocol_version, c.endpoint_id, c.encrypt_option, c.auth_scheme, c.node_affinity, c.num_reads, c.num_writes, c.last_read, c.last_write, c.net_packet_size, c.client_net_address, c.client_tcp_port, c.local_net_address, c.local_tcp_port, c.connection_id, c.parent_connection_id, c.most_recent_sql_handle, ci.query_stats_info, ci.procedure_stats_info, ci.trigger_stats_info from #22c c inner join #bb0 ci on (c.session_id = ci.session_id and c.connection_id = ci.connection_id)) c on (s.session_id = c.session_id) ' set @05b = @05b + 'left join (select r.session_id, r.request_id, r.start_time, r.status, r.command, r.sql_handle, r.statement_start_offset, r.statement_end_offset, r.plan_handle, r.database_id, r.user_id, r.connection_id, r.blocking_session_id, r.wait_type, r.wait_time, r.last_wait_type, r.wait_resource, r.open_transaction_count, r.open_resultset_count, r.transaction_id, r.context_info, r.percent_complete, r.estimated_completion_time, r.cpu_time, r.total_elapsed_time, r.scheduler_id, r.task_address, r.reads, r.writes, r.logical_reads, r.text_size, r.language, r.date_format, r.date_first, r.quoted_identifier, r.arithabort, r.ansi_null_dflt_on, r.ansi_defaults, r.ansi_warnings, r.ansi_padding, r.ansi_nulls, r.concat_null_yields_null, r.transaction_isolation_level, r.lock_timeout, r.deadlock_priority, r.row_count, r.prev_error, r.nest_level, r.granted_query_memory, r.executing_managed_code, r.group_id, r.query_hash, r.query_plan_hash, r.statement_sql_handle, r.statement_context_id, ri.is_blocked, ri.is_dead_locked, ri.blocker_session_ids, ri.head_blocker_session_ids, ri.input_buffer_checksum, ri.input_buffer_valid_flag, ri.wait_resource_info, ri.lock_count, ri.lock_owner_id, ri.locks_info, ri.transaction_begin_time, ri.transaction_info, ri.task_tempdb_usage_kb, ri.task_max_tempdb_usage_kb, ri.task_tempdb_usage_info, ri.query_memory_grants_requested_memory_kb, ri.query_memory_grants_granted_memory_kb, ri.query_memory_grants_used_memory_kb, ri.query_memory_grants_max_used_memory_kb, ri.query_memory_grants_wait_time_ms, ri.query_memory_grants_ideal_memory_kb, ri.query_memory_grants_info, ri.query_profiles_cpu_time_ms, ri.query_profiles_logical_read_count, ri.query_profiles_physical_read_count, ri.query_profiles_read_ahead_count, ri.query_profiles_write_page_count, ri.query_profiles_info, ri.query_stats_info, ri.procedure_stats_info, ri.trigger_stats_info, ri.cached_plans_info, ri.tasks_count, ri.tasks_context_switches, ri.tasks_pending_io, ri.tasks_io_size_kb, ri.read_bytes_per_second, ri.tasks_ios_per_second, ri.tasks_info, ri.workers_info, ri.threads_info, ri.query_plan_text_checksum, ri.custom_info from #3fb r inner join #8db ri on (r.session_id = ri.session_id and r.request_id = ri.request_id)) r on ((c.session_id = r.session_id and c.connection_id = r.connection_id) or (s.session_id = r.session_id and c.connection_id is NULL)) ' if exists (select c010 from #936 where c010 in ('input_buffer')) set @05b = @05b + ' left join #838 ibsr on ((s.input_buffer_checksum = ibsr.checksum) or (r.input_buffer_checksum = ibsr.checksum))' if exists (select c010 from #936 where c010 in ('c6e_input_buffer')) set @05b = @05b + ' left join #838 ibs on (s.input_buffer_checksum = ibs.checksum)' if exists (select c010 from #936 where c010 in ('cb6_input_buffer')) set @05b = @05b + ' left join #838 ibr on (r.input_buffer_checksum =ibr.checksum)' if exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text')) set @05b = @05b + ' left join #d08 rst on (r.sql_handle = rst.sql_handle) left join #d08 cst on (c.most_recent_sql_handle = cst.sql_handle)' if exists (select c010 from #936 where c010 in ('statement_object_name', 'statement', 'cb6_statement_object_name', 'cb6_statement')) if not exists (select c010 from #936 where c010 in ('text_object_name', 'text', 'c5f_text_object_name', 'c5f_text', 'cb6_text_object_name', 'cb6_text')) set @05b = @05b + ' left join #d08 rst on (r.sql_handle = rst.sql_handle)' if exists (select c010 from #936 where c010 in ('query_plan', 'cb6_query_plan')) set @05b = @05b + ' left join #4d2 qp on (r.plan_handle = qp.plan_handle)' if exists (select c010 from #936 where c010 in ('query_plan_checksum', 'cb6_query_plan_checksum')) set @05b = @05b + ' left join #965 qpc on (r.query_plan_text_checksum = qpc.checksum)' if exists (select c010 from #936 where c010 in ('text_query_plan', 'cb6_text_query_plan')) set @05b = @05b + ' left join #484 tqp on (r.plan_handle = tqp.plan_handle and r.statement_start_offset = tqp.statement_start_offset and r.statement_end_offset = tqp.statement_end_offset)' if exists (select c010 from #936 where c010 in ('full_text_query_plan', 'cb6_full_text_query_plan')) set @05b = @05b + ' left join #484 ftqp on (r.plan_handle = ftqp.plan_handle and ftqp.statement_start_offset = 0 and ftqp.statement_end_offset = -1)' if exists (select c010 from #936 where c010 in ('plan_attributes_info', 'cb6_plan_attributes_info')) set @05b = @05b + ' left join #f6e pa on (r.plan_handle = pa.plan_handle)' end if (@ad4 = 1 and @9d5 = 1) begin select cmd from (select 'use [' + case @bb0 when 0 then db_name(db_id()) else db_name(@bb0) end + ']' as cmd, 1 as id union all select @05b, 2 union all select case when @datetime_to is NULL then '	where s.ctime = ''' + convert(sysname, @datetime, 21) + '''' else '	where s.ctime between ''' + convert(sysname, @datetime, 21) + ''' and ''' + convert(sysname, @datetime_to, 21) + '''' end, 3 union all select case when @3cf is NULL then '	order by s.ctime, s.session_id' else '	order by ' + @3cf end, 4 union all select 'go', 5 union all select '', 6) as t order by id end else begin set @d10 = 0 select @4e4 = getdate() if (@e82 = 0 and @9d5 = 0) begin if (ltrim(rtrim(upper(@order_by))) = 'HELP') select 'exec sp_executesql N''' + replace(@05b, '''', '''''') + '''' as 'Help to choose column aliases for order by from select clause' else if (@3cf is NULL) begin set @05b = @05b + ' order by s.session_id' exec @d10 = sp_executesql @05b end else begin set @05b = @05b + ' order by ' + @3cf exec @d10 = sp_executesql @05b end end else if (@ad4 = 0) begin set @05b = 'use [' + db_name(@bb0) + '] ' + @05b if (ltrim(rtrim(upper(@order_by))) = 'HELP') if (@datetime_to is NULL) select 'exec sp_executesql N''' + replace(@05b, '''', '''''') + ' where s.ctime = @datetime'', N''@datetime datetime'', @datetime = ''' + convert(sysname, @datetime, 21) + '''' as 'Help to choose column aliases for order by from select clause' else select 'exec sp_executesql N''' + replace(@05b, '''', '''''') + ' where s.ctime between @datetime and @datetime_to'', N''@datetime datetime, @datetime_to datetime'', @datetime = ''' + convert(sysname, @datetime, 21) + ''', @datetime_to = ''' + convert(sysname, @datetime_to, 21) + '''' as 'Help to choose column aliases for order by from select clause' else if (@3cf is NULL) if (@datetime_to is NULL) begin set @05b = @05b + ' where s.ctime = @datetime order by s.ctime, s.session_id' exec @d10 = sp_executesql @05b, N'@datetime datetime', @datetime end else begin set @05b = @05b + ' where s.ctime between @datetime and @datetime_to order by s.ctime, s.session_id' exec @d10 = sp_executesql @05b, N'@datetime datetime, @datetime_to datetime', @datetime, @datetime_to end else if (@datetime_to is NULL) begin set @05b = @05b + ' where s.ctime = @datetime order by ' + @3cf exec @d10 = sp_executesql @05b, N'@datetime datetime', @datetime end else begin set @05b = @05b + ' where s.ctime between @datetime and @datetime_to order by ' + @3cf exec @d10 = sp_executesql @05b, N'@datetime datetime, @datetime_to datetime', @datetime, @datetime_to end end if (@d10 <> 0) begin set @a53 = '''Failed: sp_executesql N''' + replace(@05b, '%', '%%') + '''''' raiserror (@a53, 17, 1) set @datetime = NULL return 1 end select @bc7 = datediff(ms, @4e4, getdate()) if (@bc7 > @execution_time_report_threshold) print 'Final sp_whopro select statement took ' + cast(@bc7 as nvarchar(256)) + ' ms' end return 0
end
go

SET NOCOUNT OFF
